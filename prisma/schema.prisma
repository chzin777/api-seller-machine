generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum RfvStrategy {
  threshold
  quantile
}
enum CalculationStrategy {
  automatic
  manual
}

model Empresa {
  id                Int       @id @default(autoincrement()) @map("ID_Empresa")
  razaoSocial       String    @map("Razao_Social") @db.VarChar(255)
  nomeFantasia      String?   @map("Nome_Fantasia") @db.VarChar(255)
  cnpjMatriz        String    @unique @map("CNPJ_Matriz") @db.VarChar(18)
  inscricaoEstadual String?   @map("Inscricao_Estadual") @db.VarChar(20)
  cidade            String?   @map("Cidade") @db.VarChar(100)
  estado            String?   @map("Estado") @db.VarChar(2)
  logradouro        String?   @map("Logradouro") @db.VarChar(255)
  numero            String?   @map("Numero") @db.VarChar(20)
  bairro            String?   @map("Bairro") @db.VarChar(100)
  cep               String?   @map("CEP") @db.VarChar(9)
  telefone          String?   @map("Telefone") @db.VarChar(20)
  email             String?   @unique @map("Email") @db.VarChar(255)
  ativo             Boolean   @default(true) @map("Ativo")
  dataCriacao       DateTime  @default(now()) @map("Data_Criacao")
  dataAtualizacao   DateTime  @updatedAt @map("Data_Atualizacao")
  filiais           Filial[]  @relation("EmpresaToFilial")

  @@map("Empresas")
}

model Cliente {
  id           Int      @id @default(autoincrement()) @map("ID_Cliente")
  nome         String   @map("Nome_Razao_Social") @db.VarChar(255)
  cpfCnpj      String   @unique(map: "CPF_CNPJ") @map("CPF_CNPJ") @db.VarChar(18)
  cidade       String?  @map("Cidade") @db.VarChar(100)
  estado       String?  @map("Estado") @db.VarChar(2)
  logradouro   String?  @map("Logradouro") @db.VarChar(255)
  numero       String?  @map("Numero") @db.VarChar(20)
  bairro       String?  @map("Bairro") @db.VarChar(100)
  cep          String?  @map("CEP") @db.VarChar(9)
  telefone     String?  @map("Telefone") @db.VarChar(20)
  notasFiscais NotasFiscalCabecalho[]

  @@index([cidade], map: "IX_Clientes_Cidade")
  @@index([nome], map: "IX_Clientes_Nome")
  @@map("Clientes")
}

model Filial {
  id               Int                  @id @default(autoincrement()) @map("ID_Filial")
  empresaId        Int                  @map("ID_Empresa")
  empresa          Empresa              @relation("EmpresaToFilial", fields: [empresaId], references: [id])
  nome             String               @map("Nome_Filial") @db.VarChar(255)
  cnpj             String               @unique(map: "CNPJ_Filial") @map("CNPJ_Filial") @db.VarChar(18)
  cidade           String?              @map("Cidade") @db.VarChar(100)
  estado           String?              @map("Estado") @db.VarChar(2)
  notasFiscais     NotasFiscalCabecalho[]
  vendedores       Vendedor[]
  rfvParameterSets RfvParameterSet[]
  maquinasEstoque  MaquinaEstoque[]

  @@map("Filiais")
}

model Vendedor {
  id           Int                  @id @default(autoincrement()) @map("ID_Vendedor")
  nome         String               @map("Nome_Vendedor") @db.VarChar(255)
  cpf          String               @unique(map: "CPF_Vendedor") @map("CPF_Vendedor") @db.VarChar(14)
  filialId     Int?                 @map("ID_Filial")
  notasFiscais NotasFiscalCabecalho[]
  filial       Filial?              @relation(fields: [filialId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "Vendedores_ibfk_1")

  @@index([filialId], map: "ID_Filial")
  @@map("Vendedores")
}

model Produto {
  id                Int              @id @default(autoincrement()) @map("ID_Produto")
  descricao         String           @map("Descricao_Produto") @db.VarChar(255)
  tipo              String           @map("Tipo_Produto") @db.VarChar(20)
  preco             Decimal          @map("Valor_Unitario_Referencia") @db.Decimal(15, 2)
  maquinasEstoque   MaquinaEstoque[]
  notasFiscaisItens NotaFiscalItem[]

  @@map("Produtos")
}

model MaquinaEstoque {
  Chassi              String           @id @db.VarChar(25)
  produtoId           Int              @map("ID_Produto")
  filialId            Int?              @map("ID_Filial")
  Status              String?          @default("DisponÃ­vel") @db.VarChar(20)
  produto             Produto          @relation(fields: [produtoId], references: [id], onUpdate: Restrict, map: "Maquinas_Estoque_ibfk_1")
  filial              Filial?           @relation(fields: [filialId], references: [id])
  Notas_Fiscais_Itens NotaFiscalItem[]

  @@index([produtoId], map: "ID_Produto")
  @@map("Maquinas_Estoque")
}

model NotasFiscalCabecalho {
  id         Int              @id @default(autoincrement()) @map("ID_Nota_Fiscal")
  numeroNota Int              @map("Numero_Nota")
  dataEmissao DateTime         @map("Data_Emissao") @db.Date
  valorTotal Decimal          @map("Valor_Total_Nota") @db.Decimal(15, 2)
  filialId   Int?             @map("ID_Filial")
  clienteId  Int?             @map("ID_Cliente")
  vendedorId Int?             @map("ID_Vendedor")
  filial     Filial?          @relation(fields: [filialId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "Notas_Fiscais_Cabecalho_ibfk_1")
  cliente    Cliente?         @relation(fields: [clienteId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "Notas_Fiscais_Cabecalho_ibfk_2")
  vendedor   Vendedor?        @relation(fields: [vendedorId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "Notas_Fiscais_Cabecalho_ibfk_3")
  itens      NotaFiscalItem[]

  @@unique([numeroNota, filialId], map: "UQ_NumeroNota_Filial")
  @@index([clienteId, dataEmissao], map: "IX_NF_Cliente_Data")
  @@index([dataEmissao], map: "IX_NF_Data")
  @@index([filialId, dataEmissao], map: "IX_NF_Filial_Data")
  @@index([vendedorId, dataEmissao], map: "IX_NF_Vendedor_Data")
  @@map("Notas_Fiscais_Cabecalho")
}

model NotaFiscalItem {
  id               Int                @id @default(autoincrement()) @map("ID_Item_Nota")
  notaFiscalId     Int                @map("ID_Nota_Fiscal")
  produtoId        Int                @map("ID_Produto")
  Quantidade       Decimal            @db.Decimal(10, 2)
  valorUnitario    Decimal            @map("Valor_Unitario_Venda") @db.Decimal(15, 2)
  valorTotalItem   Decimal            @map("Valor_Total_Item") @db.Decimal(15, 2)
  Chassi           String?            @db.VarChar(25)
  Maquinas_Estoque MaquinaEstoque?    @relation(fields: [Chassi], references: [Chassi], onDelete: Restrict, onUpdate: Restrict, map: "FK_Item_Chassi")
  notaFiscal       NotasFiscalCabecalho @relation(fields: [notaFiscalId], references: [id], onUpdate: Restrict, map: "Notas_Fiscais_Itens_ibfk_1")
  produto          Produto            @relation(fields: [produtoId], references: [id], onUpdate: Restrict, map: "Notas_Fiscais_Itens_ibfk_2")

  @@index([Chassi], map: "IX_Itens_Chassi")
  @@index([notaFiscalId], map: "IX_Itens_Nota")
  @@index([produtoId], map: "IX_Itens_Produto")
  @@map("Notas_Fiscais_Itens")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model RfvParameterSet {
  id            Int         @id @default(autoincrement())
  filialId      Int?
  filial        Filial?     @relation(fields: [filialId], references: [id])
  name          String
  strategy      RfvStrategy @default(threshold)
  windowDays    Int         @default(180)
  weights       Json
  ruleRecency   Json
  ruleFrequency Json
  ruleValue     Json
  effectiveFrom DateTime    @db.Date
  effectiveTo   DateTime?   @db.Date
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
// New fields for segmentation
  calculationStrategy CalculationStrategy @default(automatic) @map("calculation_strategy")
  classRanges         Json?               @map("class_ranges")
  conditionalRules    Json?               @map("conditional_rules")
  segments            RfvSegment[] // Relation to segments


  @@map("rfv_parameter_sets")
}
model RfvSegment {
  id              Int             @id @default(autoincrement())
  parameterSetId  Int
  parameterSet    RfvParameterSet @relation(fields: [parameterSetId], references: [id])
  name            String          @map("segment_name")
  rules           Json            // e.g., { "R": ">=5", "F": ">=5" }
  priority        Int             @default(0)

  @@map("rfv_segments")
}