# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type BundleRateAnalise {
  bundleRate: BundleRateDetalhes!
  filialId: Int!
  periodo: String!
}

type BundleRateDetalhes {
  maquinaEPecas: BundleRateItem!
  maquinaEServicos: BundleRateItem!
  maquinaPecasServicos: BundleRateItem!
  notasComMaquina: Int!
  totalNotas: Int!
}

type BundleRateItem {
  percentual: Float!
  quantidade: Int!
}

input CrmAnaliseInput {
  dataFim: String!
  dataInicio: String!
  filialId: Int
}

type CrossSellAnalise {
  crossSell: CrossSellDetalhes!
  filialId: Int!
  periodo: String!
}

type CrossSellDetalhes {
  pecas: CrossSellItem!
  servicos: CrossSellItem!
  totalNotasComMaquina: Int!
}

type CrossSellItem {
  mediaPorNota: Float!
  percentualNotasComPecas: Float!
  percentualNotasComServicos: Float!
  quantidadeTotal: Int!
  valorMedioPorNota: Float!
  valorTotal: Float!
}

type InatividadeAnalise {
  filialId: Int!
  periodo: String!
  periodos: [InatividadePeriodo!]!
  resumo: InatividadeResumo!
  valorTotalPerdido: Float!
}

type InatividadePeriodo {
  dias: Int!
  percentual: Float!
  quantidade: Int!
  tipo: String!
  valorTotal: Float!
}

type InatividadeResumo {
  clientesAtivos: Int!
  clientesInativos: Int!
  percentualInativos: Float!
  totalClientes: Int!
  valorMedioCompra: Float!
}

input MixPortfolioInput {
  dataFim: String!
  dataInicio: String!
  filialId: Int
}

type MixTipoAnalise {
  filialId: Int!
  periodo: String!
  resumo: MixTipoResumo!
  tipos: [MixTipoItem!]!
}

type MixTipoItem {
  itens: Int!
  percentualItens: Float!
  percentualQuantidade: Float!
  percentualValor: Float!
  quantidade: Int!
  tipo: String!
  valorTotal: Float!
}

type MixTipoResumo {
  itensTotal: Int!
  quantidadeTotal: Int!
  valorTotal: Float!
}

type NovosRecorrentesAnalise {
  filialId: Int!
  meses: [NovosRecorrentesMes!]!
  periodo: String!
  resumo: NovosRecorrentesResumo!
}

type NovosRecorrentesDetalhes {
  percentualQuantidade: Float!
  percentualReceita: Float!
  quantidade: Int!
  receita: Float!
  ticketMedio: Float!
}

type NovosRecorrentesMes {
  mes: String!
  novos: NovosRecorrentesDetalhes!
  recorrentes: NovosRecorrentesDetalhes!
}

type NovosRecorrentesResumo {
  novos: NovosRecorrentesDetalhes!
  recorrentes: NovosRecorrentesDetalhes!
}

type PrecoRealizadoAnalise {
  analise: [PrecoRealizadoTipo!]!
  filialId: Int!
  periodo: String!
  tiposAnalisados: [String!]!
}

input PrecoRealizadoInput {
  dataFim: String!
  dataInicio: String!
  filialId: Int
  tipos: [String!]
}

type PrecoRealizadoTipo {
  desvioAbsoluto: Float!
  desvioPercentual: Float!
  percentualAbaixo: Float!
  percentualAcima: Float!
  percentualIgual: Float!
  precoMedioRealizado: Float!
  precoMedioReferencia: Float!
  tipo: String!
  totalItens: Int!
}

type ProdutoSemGiro {
  descricao: String!
  id: Int!
  precoReferencia: Float!
  tipo: String!
}

type ProdutoSemGiroResumo {
  quantidade: Int!
  tipo: String!
}

type ProdutosSemGiroAnalise {
  filialId: Int!
  periodo: String!
  produtos: [ProdutoSemGiro!]!
  resumoPorTipo: [ProdutoSemGiroResumo!]!
  tipoFiltro: String
  totalSemGiro: Int!
}

input ProdutosSemGiroInput {
  dataFim: String!
  dataInicio: String!
  filialId: Int
  limit: Int
  tipos: [String!]
}

type Query {
  bundleRate(input: MixPortfolioInput!): BundleRateAnalise!
  crmInatividade(input: CrmAnaliseInput!): InatividadeAnalise!
  crmNovosRecorrentes(input: CrmAnaliseInput!): NovosRecorrentesAnalise!
  crossSell(input: MixPortfolioInput!): CrossSellAnalise!
  mixPorTipo(filialId: Float!, periodo: String!): MixTipoAnalise!
  precoRealizadoVsReferencia(input: PrecoRealizadoInput!): PrecoRealizadoAnalise!
  produtosSemGiro(input: ProdutosSemGiroInput!): ProdutosSemGiroAnalise!
}