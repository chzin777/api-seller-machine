
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model AssociacaoProduto
 * 
 */
export type AssociacaoProduto = $Result.DefaultSelection<Prisma.$AssociacaoProdutoPayload>
/**
 * Model Empresa
 * 
 */
export type Empresa = $Result.DefaultSelection<Prisma.$EmpresaPayload>
/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Filial
 * 
 */
export type Filial = $Result.DefaultSelection<Prisma.$FilialPayload>
/**
 * Model Vendedor
 * 
 */
export type Vendedor = $Result.DefaultSelection<Prisma.$VendedorPayload>
/**
 * Model Produto
 * 
 */
export type Produto = $Result.DefaultSelection<Prisma.$ProdutoPayload>
/**
 * Model MaquinaEstoque
 * 
 */
export type MaquinaEstoque = $Result.DefaultSelection<Prisma.$MaquinaEstoquePayload>
/**
 * Model NotasFiscalCabecalho
 * 
 */
export type NotasFiscalCabecalho = $Result.DefaultSelection<Prisma.$NotasFiscalCabecalhoPayload>
/**
 * Model NotaFiscalItem
 * 
 */
export type NotaFiscalItem = $Result.DefaultSelection<Prisma.$NotaFiscalItemPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model RfvParameterSet
 * 
 */
export type RfvParameterSet = $Result.DefaultSelection<Prisma.$RfvParameterSetPayload>
/**
 * Model RfvSegment
 * 
 */
export type RfvSegment = $Result.DefaultSelection<Prisma.$RfvSegmentPayload>
/**
 * Model ReceitaPeriodo
 * 
 */
export type ReceitaPeriodo = $Result.DefaultSelection<Prisma.$ReceitaPeriodoPayload>
/**
 * Model ReceitaTipoProduto
 * 
 */
export type ReceitaTipoProduto = $Result.DefaultSelection<Prisma.$ReceitaTipoProdutoPayload>
/**
 * Model ReceitaProdutoModelo
 * 
 */
export type ReceitaProdutoModelo = $Result.DefaultSelection<Prisma.$ReceitaProdutoModeloPayload>
/**
 * Model CrescimentoVendas
 * 
 */
export type CrescimentoVendas = $Result.DefaultSelection<Prisma.$CrescimentoVendasPayload>
/**
 * Model TicketMedio
 * 
 */
export type TicketMedio = $Result.DefaultSelection<Prisma.$TicketMedioPayload>
/**
 * Model ItensPorNF
 * 
 */
export type ItensPorNF = $Result.DefaultSelection<Prisma.$ItensPorNFPayload>
/**
 * Model Sazonalidade
 * 
 */
export type Sazonalidade = $Result.DefaultSelection<Prisma.$SazonalidadePayload>
/**
 * Model ReceitaLocalizacao
 * 
 */
export type ReceitaLocalizacao = $Result.DefaultSelection<Prisma.$ReceitaLocalizacaoPayload>
/**
 * Model ReceitaVendedor
 * 
 */
export type ReceitaVendedor = $Result.DefaultSelection<Prisma.$ReceitaVendedorPayload>
/**
 * Model EstatisticasNotasFiscais
 * 
 */
export type EstatisticasNotasFiscais = $Result.DefaultSelection<Prisma.$EstatisticasNotasFiscaisPayload>
/**
 * Model ReceitaVendedorDetalhada
 * 
 */
export type ReceitaVendedorDetalhada = $Result.DefaultSelection<Prisma.$ReceitaVendedorDetalhadaPayload>
/**
 * Model TicketMedioVendedor
 * 
 */
export type TicketMedioVendedor = $Result.DefaultSelection<Prisma.$TicketMedioVendedorPayload>
/**
 * Model MixVendedor
 * 
 */
export type MixVendedor = $Result.DefaultSelection<Prisma.$MixVendedorPayload>
/**
 * Model CoberturaCarteira
 * 
 */
export type CoberturaCarteira = $Result.DefaultSelection<Prisma.$CoberturaCarteiraPayload>
/**
 * Model RankingVendedores
 * 
 */
export type RankingVendedores = $Result.DefaultSelection<Prisma.$RankingVendedoresPayload>
/**
 * Model ReceitaFilial
 * 
 */
export type ReceitaFilial = $Result.DefaultSelection<Prisma.$ReceitaFilialPayload>
/**
 * Model MixFilial
 * 
 */
export type MixFilial = $Result.DefaultSelection<Prisma.$MixFilialPayload>
/**
 * Model ParticipacaoReceitaFilial
 * 
 */
export type ParticipacaoReceitaFilial = $Result.DefaultSelection<Prisma.$ParticipacaoReceitaFilialPayload>
/**
 * Model ReceitaFilialRegiao
 * 
 */
export type ReceitaFilialRegiao = $Result.DefaultSelection<Prisma.$ReceitaFilialRegiaoPayload>
/**
 * Model ConfiguracaoInatividade
 * 
 */
export type ConfiguracaoInatividade = $Result.DefaultSelection<Prisma.$ConfiguracaoInatividadePayload>
/**
 * Model RFVTipoNegocio
 * 
 */
export type RFVTipoNegocio = $Result.DefaultSelection<Prisma.$RFVTipoNegocioPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const RfvStrategy: {
  threshold: 'threshold',
  quantile: 'quantile'
};

export type RfvStrategy = (typeof RfvStrategy)[keyof typeof RfvStrategy]


export const CalculationStrategy: {
  automatic: 'automatic',
  manual: 'manual'
};

export type CalculationStrategy = (typeof CalculationStrategy)[keyof typeof CalculationStrategy]

}

export type RfvStrategy = $Enums.RfvStrategy

export const RfvStrategy: typeof $Enums.RfvStrategy

export type CalculationStrategy = $Enums.CalculationStrategy

export const CalculationStrategy: typeof $Enums.CalculationStrategy

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more AssociacaoProdutos
 * const associacaoProdutos = await prisma.associacaoProduto.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more AssociacaoProdutos
   * const associacaoProdutos = await prisma.associacaoProduto.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.associacaoProduto`: Exposes CRUD operations for the **AssociacaoProduto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AssociacaoProdutos
    * const associacaoProdutos = await prisma.associacaoProduto.findMany()
    * ```
    */
  get associacaoProduto(): Prisma.AssociacaoProdutoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.empresa`: Exposes CRUD operations for the **Empresa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Empresas
    * const empresas = await prisma.empresa.findMany()
    * ```
    */
  get empresa(): Prisma.EmpresaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.filial`: Exposes CRUD operations for the **Filial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Filials
    * const filials = await prisma.filial.findMany()
    * ```
    */
  get filial(): Prisma.FilialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vendedor`: Exposes CRUD operations for the **Vendedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vendedors
    * const vendedors = await prisma.vendedor.findMany()
    * ```
    */
  get vendedor(): Prisma.VendedorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.produto`: Exposes CRUD operations for the **Produto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Produtos
    * const produtos = await prisma.produto.findMany()
    * ```
    */
  get produto(): Prisma.ProdutoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.maquinaEstoque`: Exposes CRUD operations for the **MaquinaEstoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MaquinaEstoques
    * const maquinaEstoques = await prisma.maquinaEstoque.findMany()
    * ```
    */
  get maquinaEstoque(): Prisma.MaquinaEstoqueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notasFiscalCabecalho`: Exposes CRUD operations for the **NotasFiscalCabecalho** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NotasFiscalCabecalhos
    * const notasFiscalCabecalhos = await prisma.notasFiscalCabecalho.findMany()
    * ```
    */
  get notasFiscalCabecalho(): Prisma.NotasFiscalCabecalhoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notaFiscalItem`: Exposes CRUD operations for the **NotaFiscalItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NotaFiscalItems
    * const notaFiscalItems = await prisma.notaFiscalItem.findMany()
    * ```
    */
  get notaFiscalItem(): Prisma.NotaFiscalItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rfvParameterSet`: Exposes CRUD operations for the **RfvParameterSet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RfvParameterSets
    * const rfvParameterSets = await prisma.rfvParameterSet.findMany()
    * ```
    */
  get rfvParameterSet(): Prisma.RfvParameterSetDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rfvSegment`: Exposes CRUD operations for the **RfvSegment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RfvSegments
    * const rfvSegments = await prisma.rfvSegment.findMany()
    * ```
    */
  get rfvSegment(): Prisma.RfvSegmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.receitaPeriodo`: Exposes CRUD operations for the **ReceitaPeriodo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReceitaPeriodos
    * const receitaPeriodos = await prisma.receitaPeriodo.findMany()
    * ```
    */
  get receitaPeriodo(): Prisma.ReceitaPeriodoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.receitaTipoProduto`: Exposes CRUD operations for the **ReceitaTipoProduto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReceitaTipoProdutos
    * const receitaTipoProdutos = await prisma.receitaTipoProduto.findMany()
    * ```
    */
  get receitaTipoProduto(): Prisma.ReceitaTipoProdutoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.receitaProdutoModelo`: Exposes CRUD operations for the **ReceitaProdutoModelo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReceitaProdutoModelos
    * const receitaProdutoModelos = await prisma.receitaProdutoModelo.findMany()
    * ```
    */
  get receitaProdutoModelo(): Prisma.ReceitaProdutoModeloDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.crescimentoVendas`: Exposes CRUD operations for the **CrescimentoVendas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CrescimentoVendas
    * const crescimentoVendas = await prisma.crescimentoVendas.findMany()
    * ```
    */
  get crescimentoVendas(): Prisma.CrescimentoVendasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticketMedio`: Exposes CRUD operations for the **TicketMedio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TicketMedios
    * const ticketMedios = await prisma.ticketMedio.findMany()
    * ```
    */
  get ticketMedio(): Prisma.TicketMedioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.itensPorNF`: Exposes CRUD operations for the **ItensPorNF** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ItensPorNFS
    * const itensPorNFS = await prisma.itensPorNF.findMany()
    * ```
    */
  get itensPorNF(): Prisma.ItensPorNFDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sazonalidade`: Exposes CRUD operations for the **Sazonalidade** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sazonalidades
    * const sazonalidades = await prisma.sazonalidade.findMany()
    * ```
    */
  get sazonalidade(): Prisma.SazonalidadeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.receitaLocalizacao`: Exposes CRUD operations for the **ReceitaLocalizacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReceitaLocalizacaos
    * const receitaLocalizacaos = await prisma.receitaLocalizacao.findMany()
    * ```
    */
  get receitaLocalizacao(): Prisma.ReceitaLocalizacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.receitaVendedor`: Exposes CRUD operations for the **ReceitaVendedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReceitaVendedors
    * const receitaVendedors = await prisma.receitaVendedor.findMany()
    * ```
    */
  get receitaVendedor(): Prisma.ReceitaVendedorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estatisticasNotasFiscais`: Exposes CRUD operations for the **EstatisticasNotasFiscais** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstatisticasNotasFiscais
    * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.findMany()
    * ```
    */
  get estatisticasNotasFiscais(): Prisma.EstatisticasNotasFiscaisDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.receitaVendedorDetalhada`: Exposes CRUD operations for the **ReceitaVendedorDetalhada** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReceitaVendedorDetalhadas
    * const receitaVendedorDetalhadas = await prisma.receitaVendedorDetalhada.findMany()
    * ```
    */
  get receitaVendedorDetalhada(): Prisma.ReceitaVendedorDetalhadaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticketMedioVendedor`: Exposes CRUD operations for the **TicketMedioVendedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TicketMedioVendedors
    * const ticketMedioVendedors = await prisma.ticketMedioVendedor.findMany()
    * ```
    */
  get ticketMedioVendedor(): Prisma.TicketMedioVendedorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mixVendedor`: Exposes CRUD operations for the **MixVendedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MixVendedors
    * const mixVendedors = await prisma.mixVendedor.findMany()
    * ```
    */
  get mixVendedor(): Prisma.MixVendedorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.coberturaCarteira`: Exposes CRUD operations for the **CoberturaCarteira** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CoberturaCarteiras
    * const coberturaCarteiras = await prisma.coberturaCarteira.findMany()
    * ```
    */
  get coberturaCarteira(): Prisma.CoberturaCarteiraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rankingVendedores`: Exposes CRUD operations for the **RankingVendedores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RankingVendedores
    * const rankingVendedores = await prisma.rankingVendedores.findMany()
    * ```
    */
  get rankingVendedores(): Prisma.RankingVendedoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.receitaFilial`: Exposes CRUD operations for the **ReceitaFilial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReceitaFilials
    * const receitaFilials = await prisma.receitaFilial.findMany()
    * ```
    */
  get receitaFilial(): Prisma.ReceitaFilialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mixFilial`: Exposes CRUD operations for the **MixFilial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MixFilials
    * const mixFilials = await prisma.mixFilial.findMany()
    * ```
    */
  get mixFilial(): Prisma.MixFilialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.participacaoReceitaFilial`: Exposes CRUD operations for the **ParticipacaoReceitaFilial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ParticipacaoReceitaFilials
    * const participacaoReceitaFilials = await prisma.participacaoReceitaFilial.findMany()
    * ```
    */
  get participacaoReceitaFilial(): Prisma.ParticipacaoReceitaFilialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.receitaFilialRegiao`: Exposes CRUD operations for the **ReceitaFilialRegiao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ReceitaFilialRegiaos
    * const receitaFilialRegiaos = await prisma.receitaFilialRegiao.findMany()
    * ```
    */
  get receitaFilialRegiao(): Prisma.ReceitaFilialRegiaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.configuracaoInatividade`: Exposes CRUD operations for the **ConfiguracaoInatividade** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConfiguracaoInatividades
    * const configuracaoInatividades = await prisma.configuracaoInatividade.findMany()
    * ```
    */
  get configuracaoInatividade(): Prisma.ConfiguracaoInatividadeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rFVTipoNegocio`: Exposes CRUD operations for the **RFVTipoNegocio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RFVTipoNegocios
    * const rFVTipoNegocios = await prisma.rFVTipoNegocio.findMany()
    * ```
    */
  get rFVTipoNegocio(): Prisma.RFVTipoNegocioDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.15.0
   * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    AssociacaoProduto: 'AssociacaoProduto',
    Empresa: 'Empresa',
    Cliente: 'Cliente',
    Filial: 'Filial',
    Vendedor: 'Vendedor',
    Produto: 'Produto',
    MaquinaEstoque: 'MaquinaEstoque',
    NotasFiscalCabecalho: 'NotasFiscalCabecalho',
    NotaFiscalItem: 'NotaFiscalItem',
    User: 'User',
    RfvParameterSet: 'RfvParameterSet',
    RfvSegment: 'RfvSegment',
    ReceitaPeriodo: 'ReceitaPeriodo',
    ReceitaTipoProduto: 'ReceitaTipoProduto',
    ReceitaProdutoModelo: 'ReceitaProdutoModelo',
    CrescimentoVendas: 'CrescimentoVendas',
    TicketMedio: 'TicketMedio',
    ItensPorNF: 'ItensPorNF',
    Sazonalidade: 'Sazonalidade',
    ReceitaLocalizacao: 'ReceitaLocalizacao',
    ReceitaVendedor: 'ReceitaVendedor',
    EstatisticasNotasFiscais: 'EstatisticasNotasFiscais',
    ReceitaVendedorDetalhada: 'ReceitaVendedorDetalhada',
    TicketMedioVendedor: 'TicketMedioVendedor',
    MixVendedor: 'MixVendedor',
    CoberturaCarteira: 'CoberturaCarteira',
    RankingVendedores: 'RankingVendedores',
    ReceitaFilial: 'ReceitaFilial',
    MixFilial: 'MixFilial',
    ParticipacaoReceitaFilial: 'ParticipacaoReceitaFilial',
    ReceitaFilialRegiao: 'ReceitaFilialRegiao',
    ConfiguracaoInatividade: 'ConfiguracaoInatividade',
    RFVTipoNegocio: 'RFVTipoNegocio'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "associacaoProduto" | "empresa" | "cliente" | "filial" | "vendedor" | "produto" | "maquinaEstoque" | "notasFiscalCabecalho" | "notaFiscalItem" | "user" | "rfvParameterSet" | "rfvSegment" | "receitaPeriodo" | "receitaTipoProduto" | "receitaProdutoModelo" | "crescimentoVendas" | "ticketMedio" | "itensPorNF" | "sazonalidade" | "receitaLocalizacao" | "receitaVendedor" | "estatisticasNotasFiscais" | "receitaVendedorDetalhada" | "ticketMedioVendedor" | "mixVendedor" | "coberturaCarteira" | "rankingVendedores" | "receitaFilial" | "mixFilial" | "participacaoReceitaFilial" | "receitaFilialRegiao" | "configuracaoInatividade" | "rFVTipoNegocio"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      AssociacaoProduto: {
        payload: Prisma.$AssociacaoProdutoPayload<ExtArgs>
        fields: Prisma.AssociacaoProdutoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssociacaoProdutoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssociacaoProdutoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload>
          }
          findFirst: {
            args: Prisma.AssociacaoProdutoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssociacaoProdutoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload>
          }
          findMany: {
            args: Prisma.AssociacaoProdutoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload>[]
          }
          create: {
            args: Prisma.AssociacaoProdutoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload>
          }
          createMany: {
            args: Prisma.AssociacaoProdutoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AssociacaoProdutoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload>
          }
          update: {
            args: Prisma.AssociacaoProdutoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload>
          }
          deleteMany: {
            args: Prisma.AssociacaoProdutoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssociacaoProdutoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AssociacaoProdutoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssociacaoProdutoPayload>
          }
          aggregate: {
            args: Prisma.AssociacaoProdutoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssociacaoProduto>
          }
          groupBy: {
            args: Prisma.AssociacaoProdutoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssociacaoProdutoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssociacaoProdutoCountArgs<ExtArgs>
            result: $Utils.Optional<AssociacaoProdutoCountAggregateOutputType> | number
          }
        }
      }
      Empresa: {
        payload: Prisma.$EmpresaPayload<ExtArgs>
        fields: Prisma.EmpresaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmpresaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmpresaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          findFirst: {
            args: Prisma.EmpresaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmpresaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          findMany: {
            args: Prisma.EmpresaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>[]
          }
          create: {
            args: Prisma.EmpresaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          createMany: {
            args: Prisma.EmpresaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EmpresaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          update: {
            args: Prisma.EmpresaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          deleteMany: {
            args: Prisma.EmpresaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmpresaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EmpresaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmpresaPayload>
          }
          aggregate: {
            args: Prisma.EmpresaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmpresa>
          }
          groupBy: {
            args: Prisma.EmpresaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmpresaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmpresaCountArgs<ExtArgs>
            result: $Utils.Optional<EmpresaCountAggregateOutputType> | number
          }
        }
      }
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Filial: {
        payload: Prisma.$FilialPayload<ExtArgs>
        fields: Prisma.FilialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FilialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FilialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload>
          }
          findFirst: {
            args: Prisma.FilialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FilialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload>
          }
          findMany: {
            args: Prisma.FilialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload>[]
          }
          create: {
            args: Prisma.FilialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload>
          }
          createMany: {
            args: Prisma.FilialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FilialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload>
          }
          update: {
            args: Prisma.FilialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload>
          }
          deleteMany: {
            args: Prisma.FilialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FilialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FilialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilialPayload>
          }
          aggregate: {
            args: Prisma.FilialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFilial>
          }
          groupBy: {
            args: Prisma.FilialGroupByArgs<ExtArgs>
            result: $Utils.Optional<FilialGroupByOutputType>[]
          }
          count: {
            args: Prisma.FilialCountArgs<ExtArgs>
            result: $Utils.Optional<FilialCountAggregateOutputType> | number
          }
        }
      }
      Vendedor: {
        payload: Prisma.$VendedorPayload<ExtArgs>
        fields: Prisma.VendedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VendedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VendedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          findFirst: {
            args: Prisma.VendedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VendedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          findMany: {
            args: Prisma.VendedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>[]
          }
          create: {
            args: Prisma.VendedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          createMany: {
            args: Prisma.VendedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.VendedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          update: {
            args: Prisma.VendedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          deleteMany: {
            args: Prisma.VendedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VendedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VendedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          aggregate: {
            args: Prisma.VendedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVendedor>
          }
          groupBy: {
            args: Prisma.VendedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<VendedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.VendedorCountArgs<ExtArgs>
            result: $Utils.Optional<VendedorCountAggregateOutputType> | number
          }
        }
      }
      Produto: {
        payload: Prisma.$ProdutoPayload<ExtArgs>
        fields: Prisma.ProdutoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProdutoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProdutoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload>
          }
          findFirst: {
            args: Prisma.ProdutoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProdutoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload>
          }
          findMany: {
            args: Prisma.ProdutoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload>[]
          }
          create: {
            args: Prisma.ProdutoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload>
          }
          createMany: {
            args: Prisma.ProdutoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProdutoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload>
          }
          update: {
            args: Prisma.ProdutoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload>
          }
          deleteMany: {
            args: Prisma.ProdutoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProdutoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProdutoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProdutoPayload>
          }
          aggregate: {
            args: Prisma.ProdutoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduto>
          }
          groupBy: {
            args: Prisma.ProdutoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProdutoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProdutoCountArgs<ExtArgs>
            result: $Utils.Optional<ProdutoCountAggregateOutputType> | number
          }
        }
      }
      MaquinaEstoque: {
        payload: Prisma.$MaquinaEstoquePayload<ExtArgs>
        fields: Prisma.MaquinaEstoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaquinaEstoqueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaquinaEstoqueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload>
          }
          findFirst: {
            args: Prisma.MaquinaEstoqueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaquinaEstoqueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload>
          }
          findMany: {
            args: Prisma.MaquinaEstoqueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload>[]
          }
          create: {
            args: Prisma.MaquinaEstoqueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload>
          }
          createMany: {
            args: Prisma.MaquinaEstoqueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MaquinaEstoqueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload>
          }
          update: {
            args: Prisma.MaquinaEstoqueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload>
          }
          deleteMany: {
            args: Prisma.MaquinaEstoqueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaquinaEstoqueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MaquinaEstoqueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaquinaEstoquePayload>
          }
          aggregate: {
            args: Prisma.MaquinaEstoqueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaquinaEstoque>
          }
          groupBy: {
            args: Prisma.MaquinaEstoqueGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaquinaEstoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaquinaEstoqueCountArgs<ExtArgs>
            result: $Utils.Optional<MaquinaEstoqueCountAggregateOutputType> | number
          }
        }
      }
      NotasFiscalCabecalho: {
        payload: Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>
        fields: Prisma.NotasFiscalCabecalhoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotasFiscalCabecalhoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotasFiscalCabecalhoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload>
          }
          findFirst: {
            args: Prisma.NotasFiscalCabecalhoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotasFiscalCabecalhoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload>
          }
          findMany: {
            args: Prisma.NotasFiscalCabecalhoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload>[]
          }
          create: {
            args: Prisma.NotasFiscalCabecalhoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload>
          }
          createMany: {
            args: Prisma.NotasFiscalCabecalhoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NotasFiscalCabecalhoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload>
          }
          update: {
            args: Prisma.NotasFiscalCabecalhoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload>
          }
          deleteMany: {
            args: Prisma.NotasFiscalCabecalhoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotasFiscalCabecalhoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotasFiscalCabecalhoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotasFiscalCabecalhoPayload>
          }
          aggregate: {
            args: Prisma.NotasFiscalCabecalhoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotasFiscalCabecalho>
          }
          groupBy: {
            args: Prisma.NotasFiscalCabecalhoGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotasFiscalCabecalhoGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotasFiscalCabecalhoCountArgs<ExtArgs>
            result: $Utils.Optional<NotasFiscalCabecalhoCountAggregateOutputType> | number
          }
        }
      }
      NotaFiscalItem: {
        payload: Prisma.$NotaFiscalItemPayload<ExtArgs>
        fields: Prisma.NotaFiscalItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotaFiscalItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotaFiscalItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload>
          }
          findFirst: {
            args: Prisma.NotaFiscalItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotaFiscalItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload>
          }
          findMany: {
            args: Prisma.NotaFiscalItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload>[]
          }
          create: {
            args: Prisma.NotaFiscalItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload>
          }
          createMany: {
            args: Prisma.NotaFiscalItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NotaFiscalItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload>
          }
          update: {
            args: Prisma.NotaFiscalItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload>
          }
          deleteMany: {
            args: Prisma.NotaFiscalItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotaFiscalItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotaFiscalItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotaFiscalItemPayload>
          }
          aggregate: {
            args: Prisma.NotaFiscalItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotaFiscalItem>
          }
          groupBy: {
            args: Prisma.NotaFiscalItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotaFiscalItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotaFiscalItemCountArgs<ExtArgs>
            result: $Utils.Optional<NotaFiscalItemCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      RfvParameterSet: {
        payload: Prisma.$RfvParameterSetPayload<ExtArgs>
        fields: Prisma.RfvParameterSetFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RfvParameterSetFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RfvParameterSetFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload>
          }
          findFirst: {
            args: Prisma.RfvParameterSetFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RfvParameterSetFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload>
          }
          findMany: {
            args: Prisma.RfvParameterSetFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload>[]
          }
          create: {
            args: Prisma.RfvParameterSetCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload>
          }
          createMany: {
            args: Prisma.RfvParameterSetCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RfvParameterSetDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload>
          }
          update: {
            args: Prisma.RfvParameterSetUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload>
          }
          deleteMany: {
            args: Prisma.RfvParameterSetDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RfvParameterSetUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RfvParameterSetUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvParameterSetPayload>
          }
          aggregate: {
            args: Prisma.RfvParameterSetAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRfvParameterSet>
          }
          groupBy: {
            args: Prisma.RfvParameterSetGroupByArgs<ExtArgs>
            result: $Utils.Optional<RfvParameterSetGroupByOutputType>[]
          }
          count: {
            args: Prisma.RfvParameterSetCountArgs<ExtArgs>
            result: $Utils.Optional<RfvParameterSetCountAggregateOutputType> | number
          }
        }
      }
      RfvSegment: {
        payload: Prisma.$RfvSegmentPayload<ExtArgs>
        fields: Prisma.RfvSegmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RfvSegmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RfvSegmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload>
          }
          findFirst: {
            args: Prisma.RfvSegmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RfvSegmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload>
          }
          findMany: {
            args: Prisma.RfvSegmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload>[]
          }
          create: {
            args: Prisma.RfvSegmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload>
          }
          createMany: {
            args: Prisma.RfvSegmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RfvSegmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload>
          }
          update: {
            args: Prisma.RfvSegmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload>
          }
          deleteMany: {
            args: Prisma.RfvSegmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RfvSegmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RfvSegmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RfvSegmentPayload>
          }
          aggregate: {
            args: Prisma.RfvSegmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRfvSegment>
          }
          groupBy: {
            args: Prisma.RfvSegmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<RfvSegmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.RfvSegmentCountArgs<ExtArgs>
            result: $Utils.Optional<RfvSegmentCountAggregateOutputType> | number
          }
        }
      }
      ReceitaPeriodo: {
        payload: Prisma.$ReceitaPeriodoPayload<ExtArgs>
        fields: Prisma.ReceitaPeriodoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceitaPeriodoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceitaPeriodoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload>
          }
          findFirst: {
            args: Prisma.ReceitaPeriodoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceitaPeriodoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload>
          }
          findMany: {
            args: Prisma.ReceitaPeriodoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload>[]
          }
          create: {
            args: Prisma.ReceitaPeriodoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload>
          }
          createMany: {
            args: Prisma.ReceitaPeriodoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReceitaPeriodoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload>
          }
          update: {
            args: Prisma.ReceitaPeriodoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload>
          }
          deleteMany: {
            args: Prisma.ReceitaPeriodoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceitaPeriodoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceitaPeriodoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaPeriodoPayload>
          }
          aggregate: {
            args: Prisma.ReceitaPeriodoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceitaPeriodo>
          }
          groupBy: {
            args: Prisma.ReceitaPeriodoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceitaPeriodoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceitaPeriodoCountArgs<ExtArgs>
            result: $Utils.Optional<ReceitaPeriodoCountAggregateOutputType> | number
          }
        }
      }
      ReceitaTipoProduto: {
        payload: Prisma.$ReceitaTipoProdutoPayload<ExtArgs>
        fields: Prisma.ReceitaTipoProdutoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceitaTipoProdutoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceitaTipoProdutoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload>
          }
          findFirst: {
            args: Prisma.ReceitaTipoProdutoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceitaTipoProdutoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload>
          }
          findMany: {
            args: Prisma.ReceitaTipoProdutoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload>[]
          }
          create: {
            args: Prisma.ReceitaTipoProdutoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload>
          }
          createMany: {
            args: Prisma.ReceitaTipoProdutoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReceitaTipoProdutoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload>
          }
          update: {
            args: Prisma.ReceitaTipoProdutoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload>
          }
          deleteMany: {
            args: Prisma.ReceitaTipoProdutoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceitaTipoProdutoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceitaTipoProdutoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaTipoProdutoPayload>
          }
          aggregate: {
            args: Prisma.ReceitaTipoProdutoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceitaTipoProduto>
          }
          groupBy: {
            args: Prisma.ReceitaTipoProdutoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceitaTipoProdutoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceitaTipoProdutoCountArgs<ExtArgs>
            result: $Utils.Optional<ReceitaTipoProdutoCountAggregateOutputType> | number
          }
        }
      }
      ReceitaProdutoModelo: {
        payload: Prisma.$ReceitaProdutoModeloPayload<ExtArgs>
        fields: Prisma.ReceitaProdutoModeloFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceitaProdutoModeloFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceitaProdutoModeloFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload>
          }
          findFirst: {
            args: Prisma.ReceitaProdutoModeloFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceitaProdutoModeloFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload>
          }
          findMany: {
            args: Prisma.ReceitaProdutoModeloFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload>[]
          }
          create: {
            args: Prisma.ReceitaProdutoModeloCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload>
          }
          createMany: {
            args: Prisma.ReceitaProdutoModeloCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReceitaProdutoModeloDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload>
          }
          update: {
            args: Prisma.ReceitaProdutoModeloUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload>
          }
          deleteMany: {
            args: Prisma.ReceitaProdutoModeloDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceitaProdutoModeloUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceitaProdutoModeloUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaProdutoModeloPayload>
          }
          aggregate: {
            args: Prisma.ReceitaProdutoModeloAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceitaProdutoModelo>
          }
          groupBy: {
            args: Prisma.ReceitaProdutoModeloGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceitaProdutoModeloGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceitaProdutoModeloCountArgs<ExtArgs>
            result: $Utils.Optional<ReceitaProdutoModeloCountAggregateOutputType> | number
          }
        }
      }
      CrescimentoVendas: {
        payload: Prisma.$CrescimentoVendasPayload<ExtArgs>
        fields: Prisma.CrescimentoVendasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CrescimentoVendasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CrescimentoVendasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload>
          }
          findFirst: {
            args: Prisma.CrescimentoVendasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CrescimentoVendasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload>
          }
          findMany: {
            args: Prisma.CrescimentoVendasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload>[]
          }
          create: {
            args: Prisma.CrescimentoVendasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload>
          }
          createMany: {
            args: Prisma.CrescimentoVendasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CrescimentoVendasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload>
          }
          update: {
            args: Prisma.CrescimentoVendasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload>
          }
          deleteMany: {
            args: Prisma.CrescimentoVendasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CrescimentoVendasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CrescimentoVendasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CrescimentoVendasPayload>
          }
          aggregate: {
            args: Prisma.CrescimentoVendasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCrescimentoVendas>
          }
          groupBy: {
            args: Prisma.CrescimentoVendasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CrescimentoVendasGroupByOutputType>[]
          }
          count: {
            args: Prisma.CrescimentoVendasCountArgs<ExtArgs>
            result: $Utils.Optional<CrescimentoVendasCountAggregateOutputType> | number
          }
        }
      }
      TicketMedio: {
        payload: Prisma.$TicketMedioPayload<ExtArgs>
        fields: Prisma.TicketMedioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TicketMedioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TicketMedioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload>
          }
          findFirst: {
            args: Prisma.TicketMedioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TicketMedioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload>
          }
          findMany: {
            args: Prisma.TicketMedioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload>[]
          }
          create: {
            args: Prisma.TicketMedioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload>
          }
          createMany: {
            args: Prisma.TicketMedioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TicketMedioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload>
          }
          update: {
            args: Prisma.TicketMedioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload>
          }
          deleteMany: {
            args: Prisma.TicketMedioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TicketMedioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TicketMedioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioPayload>
          }
          aggregate: {
            args: Prisma.TicketMedioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicketMedio>
          }
          groupBy: {
            args: Prisma.TicketMedioGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketMedioGroupByOutputType>[]
          }
          count: {
            args: Prisma.TicketMedioCountArgs<ExtArgs>
            result: $Utils.Optional<TicketMedioCountAggregateOutputType> | number
          }
        }
      }
      ItensPorNF: {
        payload: Prisma.$ItensPorNFPayload<ExtArgs>
        fields: Prisma.ItensPorNFFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItensPorNFFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItensPorNFFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload>
          }
          findFirst: {
            args: Prisma.ItensPorNFFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItensPorNFFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload>
          }
          findMany: {
            args: Prisma.ItensPorNFFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload>[]
          }
          create: {
            args: Prisma.ItensPorNFCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload>
          }
          createMany: {
            args: Prisma.ItensPorNFCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ItensPorNFDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload>
          }
          update: {
            args: Prisma.ItensPorNFUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload>
          }
          deleteMany: {
            args: Prisma.ItensPorNFDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ItensPorNFUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ItensPorNFUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItensPorNFPayload>
          }
          aggregate: {
            args: Prisma.ItensPorNFAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItensPorNF>
          }
          groupBy: {
            args: Prisma.ItensPorNFGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItensPorNFGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItensPorNFCountArgs<ExtArgs>
            result: $Utils.Optional<ItensPorNFCountAggregateOutputType> | number
          }
        }
      }
      Sazonalidade: {
        payload: Prisma.$SazonalidadePayload<ExtArgs>
        fields: Prisma.SazonalidadeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SazonalidadeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SazonalidadeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload>
          }
          findFirst: {
            args: Prisma.SazonalidadeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SazonalidadeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload>
          }
          findMany: {
            args: Prisma.SazonalidadeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload>[]
          }
          create: {
            args: Prisma.SazonalidadeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload>
          }
          createMany: {
            args: Prisma.SazonalidadeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SazonalidadeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload>
          }
          update: {
            args: Prisma.SazonalidadeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload>
          }
          deleteMany: {
            args: Prisma.SazonalidadeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SazonalidadeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SazonalidadeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SazonalidadePayload>
          }
          aggregate: {
            args: Prisma.SazonalidadeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSazonalidade>
          }
          groupBy: {
            args: Prisma.SazonalidadeGroupByArgs<ExtArgs>
            result: $Utils.Optional<SazonalidadeGroupByOutputType>[]
          }
          count: {
            args: Prisma.SazonalidadeCountArgs<ExtArgs>
            result: $Utils.Optional<SazonalidadeCountAggregateOutputType> | number
          }
        }
      }
      ReceitaLocalizacao: {
        payload: Prisma.$ReceitaLocalizacaoPayload<ExtArgs>
        fields: Prisma.ReceitaLocalizacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceitaLocalizacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceitaLocalizacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload>
          }
          findFirst: {
            args: Prisma.ReceitaLocalizacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceitaLocalizacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload>
          }
          findMany: {
            args: Prisma.ReceitaLocalizacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload>[]
          }
          create: {
            args: Prisma.ReceitaLocalizacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload>
          }
          createMany: {
            args: Prisma.ReceitaLocalizacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReceitaLocalizacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload>
          }
          update: {
            args: Prisma.ReceitaLocalizacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload>
          }
          deleteMany: {
            args: Prisma.ReceitaLocalizacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceitaLocalizacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceitaLocalizacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaLocalizacaoPayload>
          }
          aggregate: {
            args: Prisma.ReceitaLocalizacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceitaLocalizacao>
          }
          groupBy: {
            args: Prisma.ReceitaLocalizacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceitaLocalizacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceitaLocalizacaoCountArgs<ExtArgs>
            result: $Utils.Optional<ReceitaLocalizacaoCountAggregateOutputType> | number
          }
        }
      }
      ReceitaVendedor: {
        payload: Prisma.$ReceitaVendedorPayload<ExtArgs>
        fields: Prisma.ReceitaVendedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceitaVendedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceitaVendedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload>
          }
          findFirst: {
            args: Prisma.ReceitaVendedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceitaVendedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload>
          }
          findMany: {
            args: Prisma.ReceitaVendedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload>[]
          }
          create: {
            args: Prisma.ReceitaVendedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload>
          }
          createMany: {
            args: Prisma.ReceitaVendedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReceitaVendedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload>
          }
          update: {
            args: Prisma.ReceitaVendedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload>
          }
          deleteMany: {
            args: Prisma.ReceitaVendedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceitaVendedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceitaVendedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorPayload>
          }
          aggregate: {
            args: Prisma.ReceitaVendedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceitaVendedor>
          }
          groupBy: {
            args: Prisma.ReceitaVendedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceitaVendedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceitaVendedorCountArgs<ExtArgs>
            result: $Utils.Optional<ReceitaVendedorCountAggregateOutputType> | number
          }
        }
      }
      EstatisticasNotasFiscais: {
        payload: Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>
        fields: Prisma.EstatisticasNotasFiscaisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstatisticasNotasFiscaisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstatisticasNotasFiscaisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload>
          }
          findFirst: {
            args: Prisma.EstatisticasNotasFiscaisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstatisticasNotasFiscaisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload>
          }
          findMany: {
            args: Prisma.EstatisticasNotasFiscaisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload>[]
          }
          create: {
            args: Prisma.EstatisticasNotasFiscaisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload>
          }
          createMany: {
            args: Prisma.EstatisticasNotasFiscaisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EstatisticasNotasFiscaisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload>
          }
          update: {
            args: Prisma.EstatisticasNotasFiscaisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload>
          }
          deleteMany: {
            args: Prisma.EstatisticasNotasFiscaisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstatisticasNotasFiscaisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EstatisticasNotasFiscaisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstatisticasNotasFiscaisPayload>
          }
          aggregate: {
            args: Prisma.EstatisticasNotasFiscaisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstatisticasNotasFiscais>
          }
          groupBy: {
            args: Prisma.EstatisticasNotasFiscaisGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstatisticasNotasFiscaisGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstatisticasNotasFiscaisCountArgs<ExtArgs>
            result: $Utils.Optional<EstatisticasNotasFiscaisCountAggregateOutputType> | number
          }
        }
      }
      ReceitaVendedorDetalhada: {
        payload: Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>
        fields: Prisma.ReceitaVendedorDetalhadaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceitaVendedorDetalhadaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceitaVendedorDetalhadaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload>
          }
          findFirst: {
            args: Prisma.ReceitaVendedorDetalhadaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceitaVendedorDetalhadaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload>
          }
          findMany: {
            args: Prisma.ReceitaVendedorDetalhadaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload>[]
          }
          create: {
            args: Prisma.ReceitaVendedorDetalhadaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload>
          }
          createMany: {
            args: Prisma.ReceitaVendedorDetalhadaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReceitaVendedorDetalhadaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload>
          }
          update: {
            args: Prisma.ReceitaVendedorDetalhadaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload>
          }
          deleteMany: {
            args: Prisma.ReceitaVendedorDetalhadaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceitaVendedorDetalhadaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceitaVendedorDetalhadaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaVendedorDetalhadaPayload>
          }
          aggregate: {
            args: Prisma.ReceitaVendedorDetalhadaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceitaVendedorDetalhada>
          }
          groupBy: {
            args: Prisma.ReceitaVendedorDetalhadaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceitaVendedorDetalhadaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceitaVendedorDetalhadaCountArgs<ExtArgs>
            result: $Utils.Optional<ReceitaVendedorDetalhadaCountAggregateOutputType> | number
          }
        }
      }
      TicketMedioVendedor: {
        payload: Prisma.$TicketMedioVendedorPayload<ExtArgs>
        fields: Prisma.TicketMedioVendedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TicketMedioVendedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TicketMedioVendedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload>
          }
          findFirst: {
            args: Prisma.TicketMedioVendedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TicketMedioVendedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload>
          }
          findMany: {
            args: Prisma.TicketMedioVendedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload>[]
          }
          create: {
            args: Prisma.TicketMedioVendedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload>
          }
          createMany: {
            args: Prisma.TicketMedioVendedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TicketMedioVendedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload>
          }
          update: {
            args: Prisma.TicketMedioVendedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload>
          }
          deleteMany: {
            args: Prisma.TicketMedioVendedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TicketMedioVendedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TicketMedioVendedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketMedioVendedorPayload>
          }
          aggregate: {
            args: Prisma.TicketMedioVendedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicketMedioVendedor>
          }
          groupBy: {
            args: Prisma.TicketMedioVendedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketMedioVendedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.TicketMedioVendedorCountArgs<ExtArgs>
            result: $Utils.Optional<TicketMedioVendedorCountAggregateOutputType> | number
          }
        }
      }
      MixVendedor: {
        payload: Prisma.$MixVendedorPayload<ExtArgs>
        fields: Prisma.MixVendedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MixVendedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MixVendedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload>
          }
          findFirst: {
            args: Prisma.MixVendedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MixVendedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload>
          }
          findMany: {
            args: Prisma.MixVendedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload>[]
          }
          create: {
            args: Prisma.MixVendedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload>
          }
          createMany: {
            args: Prisma.MixVendedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MixVendedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload>
          }
          update: {
            args: Prisma.MixVendedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload>
          }
          deleteMany: {
            args: Prisma.MixVendedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MixVendedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MixVendedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixVendedorPayload>
          }
          aggregate: {
            args: Prisma.MixVendedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMixVendedor>
          }
          groupBy: {
            args: Prisma.MixVendedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<MixVendedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.MixVendedorCountArgs<ExtArgs>
            result: $Utils.Optional<MixVendedorCountAggregateOutputType> | number
          }
        }
      }
      CoberturaCarteira: {
        payload: Prisma.$CoberturaCarteiraPayload<ExtArgs>
        fields: Prisma.CoberturaCarteiraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CoberturaCarteiraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CoberturaCarteiraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload>
          }
          findFirst: {
            args: Prisma.CoberturaCarteiraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CoberturaCarteiraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload>
          }
          findMany: {
            args: Prisma.CoberturaCarteiraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload>[]
          }
          create: {
            args: Prisma.CoberturaCarteiraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload>
          }
          createMany: {
            args: Prisma.CoberturaCarteiraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CoberturaCarteiraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload>
          }
          update: {
            args: Prisma.CoberturaCarteiraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload>
          }
          deleteMany: {
            args: Prisma.CoberturaCarteiraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CoberturaCarteiraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CoberturaCarteiraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoberturaCarteiraPayload>
          }
          aggregate: {
            args: Prisma.CoberturaCarteiraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCoberturaCarteira>
          }
          groupBy: {
            args: Prisma.CoberturaCarteiraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CoberturaCarteiraGroupByOutputType>[]
          }
          count: {
            args: Prisma.CoberturaCarteiraCountArgs<ExtArgs>
            result: $Utils.Optional<CoberturaCarteiraCountAggregateOutputType> | number
          }
        }
      }
      RankingVendedores: {
        payload: Prisma.$RankingVendedoresPayload<ExtArgs>
        fields: Prisma.RankingVendedoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RankingVendedoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RankingVendedoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload>
          }
          findFirst: {
            args: Prisma.RankingVendedoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RankingVendedoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload>
          }
          findMany: {
            args: Prisma.RankingVendedoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload>[]
          }
          create: {
            args: Prisma.RankingVendedoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload>
          }
          createMany: {
            args: Prisma.RankingVendedoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RankingVendedoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload>
          }
          update: {
            args: Prisma.RankingVendedoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload>
          }
          deleteMany: {
            args: Prisma.RankingVendedoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RankingVendedoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RankingVendedoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RankingVendedoresPayload>
          }
          aggregate: {
            args: Prisma.RankingVendedoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRankingVendedores>
          }
          groupBy: {
            args: Prisma.RankingVendedoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<RankingVendedoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.RankingVendedoresCountArgs<ExtArgs>
            result: $Utils.Optional<RankingVendedoresCountAggregateOutputType> | number
          }
        }
      }
      ReceitaFilial: {
        payload: Prisma.$ReceitaFilialPayload<ExtArgs>
        fields: Prisma.ReceitaFilialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceitaFilialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceitaFilialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload>
          }
          findFirst: {
            args: Prisma.ReceitaFilialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceitaFilialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload>
          }
          findMany: {
            args: Prisma.ReceitaFilialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload>[]
          }
          create: {
            args: Prisma.ReceitaFilialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload>
          }
          createMany: {
            args: Prisma.ReceitaFilialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReceitaFilialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload>
          }
          update: {
            args: Prisma.ReceitaFilialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload>
          }
          deleteMany: {
            args: Prisma.ReceitaFilialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceitaFilialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceitaFilialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialPayload>
          }
          aggregate: {
            args: Prisma.ReceitaFilialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceitaFilial>
          }
          groupBy: {
            args: Prisma.ReceitaFilialGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceitaFilialGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceitaFilialCountArgs<ExtArgs>
            result: $Utils.Optional<ReceitaFilialCountAggregateOutputType> | number
          }
        }
      }
      MixFilial: {
        payload: Prisma.$MixFilialPayload<ExtArgs>
        fields: Prisma.MixFilialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MixFilialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MixFilialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload>
          }
          findFirst: {
            args: Prisma.MixFilialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MixFilialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload>
          }
          findMany: {
            args: Prisma.MixFilialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload>[]
          }
          create: {
            args: Prisma.MixFilialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload>
          }
          createMany: {
            args: Prisma.MixFilialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MixFilialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload>
          }
          update: {
            args: Prisma.MixFilialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload>
          }
          deleteMany: {
            args: Prisma.MixFilialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MixFilialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MixFilialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MixFilialPayload>
          }
          aggregate: {
            args: Prisma.MixFilialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMixFilial>
          }
          groupBy: {
            args: Prisma.MixFilialGroupByArgs<ExtArgs>
            result: $Utils.Optional<MixFilialGroupByOutputType>[]
          }
          count: {
            args: Prisma.MixFilialCountArgs<ExtArgs>
            result: $Utils.Optional<MixFilialCountAggregateOutputType> | number
          }
        }
      }
      ParticipacaoReceitaFilial: {
        payload: Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>
        fields: Prisma.ParticipacaoReceitaFilialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ParticipacaoReceitaFilialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ParticipacaoReceitaFilialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload>
          }
          findFirst: {
            args: Prisma.ParticipacaoReceitaFilialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ParticipacaoReceitaFilialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload>
          }
          findMany: {
            args: Prisma.ParticipacaoReceitaFilialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload>[]
          }
          create: {
            args: Prisma.ParticipacaoReceitaFilialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload>
          }
          createMany: {
            args: Prisma.ParticipacaoReceitaFilialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ParticipacaoReceitaFilialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload>
          }
          update: {
            args: Prisma.ParticipacaoReceitaFilialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload>
          }
          deleteMany: {
            args: Prisma.ParticipacaoReceitaFilialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ParticipacaoReceitaFilialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ParticipacaoReceitaFilialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ParticipacaoReceitaFilialPayload>
          }
          aggregate: {
            args: Prisma.ParticipacaoReceitaFilialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateParticipacaoReceitaFilial>
          }
          groupBy: {
            args: Prisma.ParticipacaoReceitaFilialGroupByArgs<ExtArgs>
            result: $Utils.Optional<ParticipacaoReceitaFilialGroupByOutputType>[]
          }
          count: {
            args: Prisma.ParticipacaoReceitaFilialCountArgs<ExtArgs>
            result: $Utils.Optional<ParticipacaoReceitaFilialCountAggregateOutputType> | number
          }
        }
      }
      ReceitaFilialRegiao: {
        payload: Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>
        fields: Prisma.ReceitaFilialRegiaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceitaFilialRegiaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceitaFilialRegiaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload>
          }
          findFirst: {
            args: Prisma.ReceitaFilialRegiaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceitaFilialRegiaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload>
          }
          findMany: {
            args: Prisma.ReceitaFilialRegiaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload>[]
          }
          create: {
            args: Prisma.ReceitaFilialRegiaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload>
          }
          createMany: {
            args: Prisma.ReceitaFilialRegiaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReceitaFilialRegiaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload>
          }
          update: {
            args: Prisma.ReceitaFilialRegiaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload>
          }
          deleteMany: {
            args: Prisma.ReceitaFilialRegiaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceitaFilialRegiaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceitaFilialRegiaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceitaFilialRegiaoPayload>
          }
          aggregate: {
            args: Prisma.ReceitaFilialRegiaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceitaFilialRegiao>
          }
          groupBy: {
            args: Prisma.ReceitaFilialRegiaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceitaFilialRegiaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceitaFilialRegiaoCountArgs<ExtArgs>
            result: $Utils.Optional<ReceitaFilialRegiaoCountAggregateOutputType> | number
          }
        }
      }
      ConfiguracaoInatividade: {
        payload: Prisma.$ConfiguracaoInatividadePayload<ExtArgs>
        fields: Prisma.ConfiguracaoInatividadeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfiguracaoInatividadeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfiguracaoInatividadeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload>
          }
          findFirst: {
            args: Prisma.ConfiguracaoInatividadeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfiguracaoInatividadeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload>
          }
          findMany: {
            args: Prisma.ConfiguracaoInatividadeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload>[]
          }
          create: {
            args: Prisma.ConfiguracaoInatividadeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload>
          }
          createMany: {
            args: Prisma.ConfiguracaoInatividadeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ConfiguracaoInatividadeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload>
          }
          update: {
            args: Prisma.ConfiguracaoInatividadeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload>
          }
          deleteMany: {
            args: Prisma.ConfiguracaoInatividadeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfiguracaoInatividadeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConfiguracaoInatividadeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfiguracaoInatividadePayload>
          }
          aggregate: {
            args: Prisma.ConfiguracaoInatividadeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracaoInatividade>
          }
          groupBy: {
            args: Prisma.ConfiguracaoInatividadeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracaoInatividadeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfiguracaoInatividadeCountArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracaoInatividadeCountAggregateOutputType> | number
          }
        }
      }
      RFVTipoNegocio: {
        payload: Prisma.$RFVTipoNegocioPayload<ExtArgs>
        fields: Prisma.RFVTipoNegocioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RFVTipoNegocioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RFVTipoNegocioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload>
          }
          findFirst: {
            args: Prisma.RFVTipoNegocioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RFVTipoNegocioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload>
          }
          findMany: {
            args: Prisma.RFVTipoNegocioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload>[]
          }
          create: {
            args: Prisma.RFVTipoNegocioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload>
          }
          createMany: {
            args: Prisma.RFVTipoNegocioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RFVTipoNegocioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload>
          }
          update: {
            args: Prisma.RFVTipoNegocioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload>
          }
          deleteMany: {
            args: Prisma.RFVTipoNegocioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RFVTipoNegocioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RFVTipoNegocioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RFVTipoNegocioPayload>
          }
          aggregate: {
            args: Prisma.RFVTipoNegocioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRFVTipoNegocio>
          }
          groupBy: {
            args: Prisma.RFVTipoNegocioGroupByArgs<ExtArgs>
            result: $Utils.Optional<RFVTipoNegocioGroupByOutputType>[]
          }
          count: {
            args: Prisma.RFVTipoNegocioCountArgs<ExtArgs>
            result: $Utils.Optional<RFVTipoNegocioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    associacaoProduto?: AssociacaoProdutoOmit
    empresa?: EmpresaOmit
    cliente?: ClienteOmit
    filial?: FilialOmit
    vendedor?: VendedorOmit
    produto?: ProdutoOmit
    maquinaEstoque?: MaquinaEstoqueOmit
    notasFiscalCabecalho?: NotasFiscalCabecalhoOmit
    notaFiscalItem?: NotaFiscalItemOmit
    user?: UserOmit
    rfvParameterSet?: RfvParameterSetOmit
    rfvSegment?: RfvSegmentOmit
    receitaPeriodo?: ReceitaPeriodoOmit
    receitaTipoProduto?: ReceitaTipoProdutoOmit
    receitaProdutoModelo?: ReceitaProdutoModeloOmit
    crescimentoVendas?: CrescimentoVendasOmit
    ticketMedio?: TicketMedioOmit
    itensPorNF?: ItensPorNFOmit
    sazonalidade?: SazonalidadeOmit
    receitaLocalizacao?: ReceitaLocalizacaoOmit
    receitaVendedor?: ReceitaVendedorOmit
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisOmit
    receitaVendedorDetalhada?: ReceitaVendedorDetalhadaOmit
    ticketMedioVendedor?: TicketMedioVendedorOmit
    mixVendedor?: MixVendedorOmit
    coberturaCarteira?: CoberturaCarteiraOmit
    rankingVendedores?: RankingVendedoresOmit
    receitaFilial?: ReceitaFilialOmit
    mixFilial?: MixFilialOmit
    participacaoReceitaFilial?: ParticipacaoReceitaFilialOmit
    receitaFilialRegiao?: ReceitaFilialRegiaoOmit
    configuracaoInatividade?: ConfiguracaoInatividadeOmit
    rFVTipoNegocio?: RFVTipoNegocioOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type EmpresaCountOutputType
   */

  export type EmpresaCountOutputType = {
    filiais: number
  }

  export type EmpresaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filiais?: boolean | EmpresaCountOutputTypeCountFiliaisArgs
  }

  // Custom InputTypes
  /**
   * EmpresaCountOutputType without action
   */
  export type EmpresaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmpresaCountOutputType
     */
    select?: EmpresaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmpresaCountOutputType without action
   */
  export type EmpresaCountOutputTypeCountFiliaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FilialWhereInput
  }


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    notasFiscais: number
    rfvTipoNegocio: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notasFiscais?: boolean | ClienteCountOutputTypeCountNotasFiscaisArgs
    rfvTipoNegocio?: boolean | ClienteCountOutputTypeCountRfvTipoNegocioArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountNotasFiscaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotasFiscalCabecalhoWhereInput
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountRfvTipoNegocioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RFVTipoNegocioWhereInput
  }


  /**
   * Count Type FilialCountOutputType
   */

  export type FilialCountOutputType = {
    notasFiscais: number
    vendedores: number
    rfvParameterSets: number
    maquinasEstoque: number
    receitasPeriodo: number
    receitasTipoProduto: number
    receitasProdutoModelo: number
    crescimentoVendas: number
    ticketsMedios: number
    itensPorNF: number
    sazonalidades: number
    receitasLocalizacao: number
    receitasVendedor: number
    estatisticasNotasFiscais: number
    receitasVendedorDetalhadas: number
    ticketsMediosVendedor: number
    mixVendedores: number
    coberturaCarteiras: number
    rankingVendedores: number
    receitasFilial: number
    mixFiliais: number
    participacaoReceita: number
    receitasRegioes: number
  }

  export type FilialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notasFiscais?: boolean | FilialCountOutputTypeCountNotasFiscaisArgs
    vendedores?: boolean | FilialCountOutputTypeCountVendedoresArgs
    rfvParameterSets?: boolean | FilialCountOutputTypeCountRfvParameterSetsArgs
    maquinasEstoque?: boolean | FilialCountOutputTypeCountMaquinasEstoqueArgs
    receitasPeriodo?: boolean | FilialCountOutputTypeCountReceitasPeriodoArgs
    receitasTipoProduto?: boolean | FilialCountOutputTypeCountReceitasTipoProdutoArgs
    receitasProdutoModelo?: boolean | FilialCountOutputTypeCountReceitasProdutoModeloArgs
    crescimentoVendas?: boolean | FilialCountOutputTypeCountCrescimentoVendasArgs
    ticketsMedios?: boolean | FilialCountOutputTypeCountTicketsMediosArgs
    itensPorNF?: boolean | FilialCountOutputTypeCountItensPorNFArgs
    sazonalidades?: boolean | FilialCountOutputTypeCountSazonalidadesArgs
    receitasLocalizacao?: boolean | FilialCountOutputTypeCountReceitasLocalizacaoArgs
    receitasVendedor?: boolean | FilialCountOutputTypeCountReceitasVendedorArgs
    estatisticasNotasFiscais?: boolean | FilialCountOutputTypeCountEstatisticasNotasFiscaisArgs
    receitasVendedorDetalhadas?: boolean | FilialCountOutputTypeCountReceitasVendedorDetalhadasArgs
    ticketsMediosVendedor?: boolean | FilialCountOutputTypeCountTicketsMediosVendedorArgs
    mixVendedores?: boolean | FilialCountOutputTypeCountMixVendedoresArgs
    coberturaCarteiras?: boolean | FilialCountOutputTypeCountCoberturaCarteirasArgs
    rankingVendedores?: boolean | FilialCountOutputTypeCountRankingVendedoresArgs
    receitasFilial?: boolean | FilialCountOutputTypeCountReceitasFilialArgs
    mixFiliais?: boolean | FilialCountOutputTypeCountMixFiliaisArgs
    participacaoReceita?: boolean | FilialCountOutputTypeCountParticipacaoReceitaArgs
    receitasRegioes?: boolean | FilialCountOutputTypeCountReceitasRegioesArgs
  }

  // Custom InputTypes
  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FilialCountOutputType
     */
    select?: FilialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountNotasFiscaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotasFiscalCabecalhoWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountVendedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VendedorWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountRfvParameterSetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RfvParameterSetWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountMaquinasEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaquinaEstoqueWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountReceitasPeriodoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaPeriodoWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountReceitasTipoProdutoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaTipoProdutoWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountReceitasProdutoModeloArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaProdutoModeloWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountCrescimentoVendasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CrescimentoVendasWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountTicketsMediosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketMedioWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountItensPorNFArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItensPorNFWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountSazonalidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SazonalidadeWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountReceitasLocalizacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaLocalizacaoWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountReceitasVendedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaVendedorWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountEstatisticasNotasFiscaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstatisticasNotasFiscaisWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountReceitasVendedorDetalhadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaVendedorDetalhadaWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountTicketsMediosVendedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketMedioVendedorWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountMixVendedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MixVendedorWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountCoberturaCarteirasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CoberturaCarteiraWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountRankingVendedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RankingVendedoresWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountReceitasFilialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaFilialWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountMixFiliaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MixFilialWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountParticipacaoReceitaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ParticipacaoReceitaFilialWhereInput
  }

  /**
   * FilialCountOutputType without action
   */
  export type FilialCountOutputTypeCountReceitasRegioesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaFilialRegiaoWhereInput
  }


  /**
   * Count Type VendedorCountOutputType
   */

  export type VendedorCountOutputType = {
    notasFiscais: number
    receitasVendedor: number
    receitasDetalhadas: number
    ticketsMedios: number
    mixVendas: number
    coberturaCarteira: number
    rankings: number
  }

  export type VendedorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notasFiscais?: boolean | VendedorCountOutputTypeCountNotasFiscaisArgs
    receitasVendedor?: boolean | VendedorCountOutputTypeCountReceitasVendedorArgs
    receitasDetalhadas?: boolean | VendedorCountOutputTypeCountReceitasDetalhadasArgs
    ticketsMedios?: boolean | VendedorCountOutputTypeCountTicketsMediosArgs
    mixVendas?: boolean | VendedorCountOutputTypeCountMixVendasArgs
    coberturaCarteira?: boolean | VendedorCountOutputTypeCountCoberturaCarteiraArgs
    rankings?: boolean | VendedorCountOutputTypeCountRankingsArgs
  }

  // Custom InputTypes
  /**
   * VendedorCountOutputType without action
   */
  export type VendedorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VendedorCountOutputType
     */
    select?: VendedorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VendedorCountOutputType without action
   */
  export type VendedorCountOutputTypeCountNotasFiscaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotasFiscalCabecalhoWhereInput
  }

  /**
   * VendedorCountOutputType without action
   */
  export type VendedorCountOutputTypeCountReceitasVendedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaVendedorWhereInput
  }

  /**
   * VendedorCountOutputType without action
   */
  export type VendedorCountOutputTypeCountReceitasDetalhadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaVendedorDetalhadaWhereInput
  }

  /**
   * VendedorCountOutputType without action
   */
  export type VendedorCountOutputTypeCountTicketsMediosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketMedioVendedorWhereInput
  }

  /**
   * VendedorCountOutputType without action
   */
  export type VendedorCountOutputTypeCountMixVendasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MixVendedorWhereInput
  }

  /**
   * VendedorCountOutputType without action
   */
  export type VendedorCountOutputTypeCountCoberturaCarteiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CoberturaCarteiraWhereInput
  }

  /**
   * VendedorCountOutputType without action
   */
  export type VendedorCountOutputTypeCountRankingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RankingVendedoresWhereInput
  }


  /**
   * Count Type ProdutoCountOutputType
   */

  export type ProdutoCountOutputType = {
    maquinasEstoque: number
    notasFiscaisItens: number
    receitasTipo: number
    receitasModelo: number
    associacoesA: number
    associacoesB: number
  }

  export type ProdutoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maquinasEstoque?: boolean | ProdutoCountOutputTypeCountMaquinasEstoqueArgs
    notasFiscaisItens?: boolean | ProdutoCountOutputTypeCountNotasFiscaisItensArgs
    receitasTipo?: boolean | ProdutoCountOutputTypeCountReceitasTipoArgs
    receitasModelo?: boolean | ProdutoCountOutputTypeCountReceitasModeloArgs
    associacoesA?: boolean | ProdutoCountOutputTypeCountAssociacoesAArgs
    associacoesB?: boolean | ProdutoCountOutputTypeCountAssociacoesBArgs
  }

  // Custom InputTypes
  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProdutoCountOutputType
     */
    select?: ProdutoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountMaquinasEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaquinaEstoqueWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountNotasFiscaisItensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotaFiscalItemWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountReceitasTipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaTipoProdutoWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountReceitasModeloArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaProdutoModeloWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountAssociacoesAArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssociacaoProdutoWhereInput
  }

  /**
   * ProdutoCountOutputType without action
   */
  export type ProdutoCountOutputTypeCountAssociacoesBArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssociacaoProdutoWhereInput
  }


  /**
   * Count Type MaquinaEstoqueCountOutputType
   */

  export type MaquinaEstoqueCountOutputType = {
    Notas_Fiscais_Itens: number
  }

  export type MaquinaEstoqueCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Notas_Fiscais_Itens?: boolean | MaquinaEstoqueCountOutputTypeCountNotas_Fiscais_ItensArgs
  }

  // Custom InputTypes
  /**
   * MaquinaEstoqueCountOutputType without action
   */
  export type MaquinaEstoqueCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoqueCountOutputType
     */
    select?: MaquinaEstoqueCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaquinaEstoqueCountOutputType without action
   */
  export type MaquinaEstoqueCountOutputTypeCountNotas_Fiscais_ItensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotaFiscalItemWhereInput
  }


  /**
   * Count Type NotasFiscalCabecalhoCountOutputType
   */

  export type NotasFiscalCabecalhoCountOutputType = {
    itens: number
  }

  export type NotasFiscalCabecalhoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    itens?: boolean | NotasFiscalCabecalhoCountOutputTypeCountItensArgs
  }

  // Custom InputTypes
  /**
   * NotasFiscalCabecalhoCountOutputType without action
   */
  export type NotasFiscalCabecalhoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalhoCountOutputType
     */
    select?: NotasFiscalCabecalhoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * NotasFiscalCabecalhoCountOutputType without action
   */
  export type NotasFiscalCabecalhoCountOutputTypeCountItensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotaFiscalItemWhereInput
  }


  /**
   * Count Type RfvParameterSetCountOutputType
   */

  export type RfvParameterSetCountOutputType = {
    segments: number
  }

  export type RfvParameterSetCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    segments?: boolean | RfvParameterSetCountOutputTypeCountSegmentsArgs
  }

  // Custom InputTypes
  /**
   * RfvParameterSetCountOutputType without action
   */
  export type RfvParameterSetCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSetCountOutputType
     */
    select?: RfvParameterSetCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RfvParameterSetCountOutputType without action
   */
  export type RfvParameterSetCountOutputTypeCountSegmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RfvSegmentWhereInput
  }


  /**
   * Models
   */

  /**
   * Model AssociacaoProduto
   */

  export type AggregateAssociacaoProduto = {
    _count: AssociacaoProdutoCountAggregateOutputType | null
    _avg: AssociacaoProdutoAvgAggregateOutputType | null
    _sum: AssociacaoProdutoSumAggregateOutputType | null
    _min: AssociacaoProdutoMinAggregateOutputType | null
    _max: AssociacaoProdutoMaxAggregateOutputType | null
  }

  export type AssociacaoProdutoAvgAggregateOutputType = {
    id: number | null
    produto_a_id: number | null
    produto_b_id: number | null
    suporte: number | null
    confianca: number | null
    lift: number | null
    vendas_produto_a: number | null
    vendas_produto_b: number | null
  }

  export type AssociacaoProdutoSumAggregateOutputType = {
    id: bigint | null
    produto_a_id: number | null
    produto_b_id: number | null
    suporte: number | null
    confianca: number | null
    lift: number | null
    vendas_produto_a: number | null
    vendas_produto_b: number | null
  }

  export type AssociacaoProdutoMinAggregateOutputType = {
    id: bigint | null
    produto_a_id: number | null
    produto_b_id: number | null
    suporte: number | null
    confianca: number | null
    lift: number | null
    a_nome: string | null
    b_nome: string | null
    a_tipo: string | null
    b_tipo: string | null
    vendas_produto_a: number | null
    vendas_produto_b: number | null
    atualizado_em: Date | null
  }

  export type AssociacaoProdutoMaxAggregateOutputType = {
    id: bigint | null
    produto_a_id: number | null
    produto_b_id: number | null
    suporte: number | null
    confianca: number | null
    lift: number | null
    a_nome: string | null
    b_nome: string | null
    a_tipo: string | null
    b_tipo: string | null
    vendas_produto_a: number | null
    vendas_produto_b: number | null
    atualizado_em: Date | null
  }

  export type AssociacaoProdutoCountAggregateOutputType = {
    id: number
    produto_a_id: number
    produto_b_id: number
    suporte: number
    confianca: number
    lift: number
    a_nome: number
    b_nome: number
    a_tipo: number
    b_tipo: number
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em: number
    _all: number
  }


  export type AssociacaoProdutoAvgAggregateInputType = {
    id?: true
    produto_a_id?: true
    produto_b_id?: true
    suporte?: true
    confianca?: true
    lift?: true
    vendas_produto_a?: true
    vendas_produto_b?: true
  }

  export type AssociacaoProdutoSumAggregateInputType = {
    id?: true
    produto_a_id?: true
    produto_b_id?: true
    suporte?: true
    confianca?: true
    lift?: true
    vendas_produto_a?: true
    vendas_produto_b?: true
  }

  export type AssociacaoProdutoMinAggregateInputType = {
    id?: true
    produto_a_id?: true
    produto_b_id?: true
    suporte?: true
    confianca?: true
    lift?: true
    a_nome?: true
    b_nome?: true
    a_tipo?: true
    b_tipo?: true
    vendas_produto_a?: true
    vendas_produto_b?: true
    atualizado_em?: true
  }

  export type AssociacaoProdutoMaxAggregateInputType = {
    id?: true
    produto_a_id?: true
    produto_b_id?: true
    suporte?: true
    confianca?: true
    lift?: true
    a_nome?: true
    b_nome?: true
    a_tipo?: true
    b_tipo?: true
    vendas_produto_a?: true
    vendas_produto_b?: true
    atualizado_em?: true
  }

  export type AssociacaoProdutoCountAggregateInputType = {
    id?: true
    produto_a_id?: true
    produto_b_id?: true
    suporte?: true
    confianca?: true
    lift?: true
    a_nome?: true
    b_nome?: true
    a_tipo?: true
    b_tipo?: true
    vendas_produto_a?: true
    vendas_produto_b?: true
    atualizado_em?: true
    _all?: true
  }

  export type AssociacaoProdutoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssociacaoProduto to aggregate.
     */
    where?: AssociacaoProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssociacaoProdutos to fetch.
     */
    orderBy?: AssociacaoProdutoOrderByWithRelationInput | AssociacaoProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssociacaoProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssociacaoProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssociacaoProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AssociacaoProdutos
    **/
    _count?: true | AssociacaoProdutoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AssociacaoProdutoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AssociacaoProdutoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssociacaoProdutoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssociacaoProdutoMaxAggregateInputType
  }

  export type GetAssociacaoProdutoAggregateType<T extends AssociacaoProdutoAggregateArgs> = {
        [P in keyof T & keyof AggregateAssociacaoProduto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssociacaoProduto[P]>
      : GetScalarType<T[P], AggregateAssociacaoProduto[P]>
  }




  export type AssociacaoProdutoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssociacaoProdutoWhereInput
    orderBy?: AssociacaoProdutoOrderByWithAggregationInput | AssociacaoProdutoOrderByWithAggregationInput[]
    by: AssociacaoProdutoScalarFieldEnum[] | AssociacaoProdutoScalarFieldEnum
    having?: AssociacaoProdutoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssociacaoProdutoCountAggregateInputType | true
    _avg?: AssociacaoProdutoAvgAggregateInputType
    _sum?: AssociacaoProdutoSumAggregateInputType
    _min?: AssociacaoProdutoMinAggregateInputType
    _max?: AssociacaoProdutoMaxAggregateInputType
  }

  export type AssociacaoProdutoGroupByOutputType = {
    id: bigint
    produto_a_id: number
    produto_b_id: number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em: Date
    _count: AssociacaoProdutoCountAggregateOutputType | null
    _avg: AssociacaoProdutoAvgAggregateOutputType | null
    _sum: AssociacaoProdutoSumAggregateOutputType | null
    _min: AssociacaoProdutoMinAggregateOutputType | null
    _max: AssociacaoProdutoMaxAggregateOutputType | null
  }

  type GetAssociacaoProdutoGroupByPayload<T extends AssociacaoProdutoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssociacaoProdutoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssociacaoProdutoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssociacaoProdutoGroupByOutputType[P]>
            : GetScalarType<T[P], AssociacaoProdutoGroupByOutputType[P]>
        }
      >
    >


  export type AssociacaoProdutoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    produto_a_id?: boolean
    produto_b_id?: boolean
    suporte?: boolean
    confianca?: boolean
    lift?: boolean
    a_nome?: boolean
    b_nome?: boolean
    a_tipo?: boolean
    b_tipo?: boolean
    vendas_produto_a?: boolean
    vendas_produto_b?: boolean
    atualizado_em?: boolean
    produtoA?: boolean | ProdutoDefaultArgs<ExtArgs>
    produtoB?: boolean | ProdutoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["associacaoProduto"]>



  export type AssociacaoProdutoSelectScalar = {
    id?: boolean
    produto_a_id?: boolean
    produto_b_id?: boolean
    suporte?: boolean
    confianca?: boolean
    lift?: boolean
    a_nome?: boolean
    b_nome?: boolean
    a_tipo?: boolean
    b_tipo?: boolean
    vendas_produto_a?: boolean
    vendas_produto_b?: boolean
    atualizado_em?: boolean
  }

  export type AssociacaoProdutoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "produto_a_id" | "produto_b_id" | "suporte" | "confianca" | "lift" | "a_nome" | "b_nome" | "a_tipo" | "b_tipo" | "vendas_produto_a" | "vendas_produto_b" | "atualizado_em", ExtArgs["result"]["associacaoProduto"]>
  export type AssociacaoProdutoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produtoA?: boolean | ProdutoDefaultArgs<ExtArgs>
    produtoB?: boolean | ProdutoDefaultArgs<ExtArgs>
  }

  export type $AssociacaoProdutoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AssociacaoProduto"
    objects: {
      produtoA: Prisma.$ProdutoPayload<ExtArgs>
      produtoB: Prisma.$ProdutoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      produto_a_id: number
      produto_b_id: number
      suporte: number
      confianca: number
      lift: number
      a_nome: string
      b_nome: string
      a_tipo: string
      b_tipo: string
      vendas_produto_a: number
      vendas_produto_b: number
      atualizado_em: Date
    }, ExtArgs["result"]["associacaoProduto"]>
    composites: {}
  }

  type AssociacaoProdutoGetPayload<S extends boolean | null | undefined | AssociacaoProdutoDefaultArgs> = $Result.GetResult<Prisma.$AssociacaoProdutoPayload, S>

  type AssociacaoProdutoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AssociacaoProdutoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssociacaoProdutoCountAggregateInputType | true
    }

  export interface AssociacaoProdutoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AssociacaoProduto'], meta: { name: 'AssociacaoProduto' } }
    /**
     * Find zero or one AssociacaoProduto that matches the filter.
     * @param {AssociacaoProdutoFindUniqueArgs} args - Arguments to find a AssociacaoProduto
     * @example
     * // Get one AssociacaoProduto
     * const associacaoProduto = await prisma.associacaoProduto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssociacaoProdutoFindUniqueArgs>(args: SelectSubset<T, AssociacaoProdutoFindUniqueArgs<ExtArgs>>): Prisma__AssociacaoProdutoClient<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AssociacaoProduto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AssociacaoProdutoFindUniqueOrThrowArgs} args - Arguments to find a AssociacaoProduto
     * @example
     * // Get one AssociacaoProduto
     * const associacaoProduto = await prisma.associacaoProduto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssociacaoProdutoFindUniqueOrThrowArgs>(args: SelectSubset<T, AssociacaoProdutoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssociacaoProdutoClient<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssociacaoProduto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssociacaoProdutoFindFirstArgs} args - Arguments to find a AssociacaoProduto
     * @example
     * // Get one AssociacaoProduto
     * const associacaoProduto = await prisma.associacaoProduto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssociacaoProdutoFindFirstArgs>(args?: SelectSubset<T, AssociacaoProdutoFindFirstArgs<ExtArgs>>): Prisma__AssociacaoProdutoClient<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssociacaoProduto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssociacaoProdutoFindFirstOrThrowArgs} args - Arguments to find a AssociacaoProduto
     * @example
     * // Get one AssociacaoProduto
     * const associacaoProduto = await prisma.associacaoProduto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssociacaoProdutoFindFirstOrThrowArgs>(args?: SelectSubset<T, AssociacaoProdutoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssociacaoProdutoClient<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AssociacaoProdutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssociacaoProdutoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AssociacaoProdutos
     * const associacaoProdutos = await prisma.associacaoProduto.findMany()
     * 
     * // Get first 10 AssociacaoProdutos
     * const associacaoProdutos = await prisma.associacaoProduto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const associacaoProdutoWithIdOnly = await prisma.associacaoProduto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AssociacaoProdutoFindManyArgs>(args?: SelectSubset<T, AssociacaoProdutoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AssociacaoProduto.
     * @param {AssociacaoProdutoCreateArgs} args - Arguments to create a AssociacaoProduto.
     * @example
     * // Create one AssociacaoProduto
     * const AssociacaoProduto = await prisma.associacaoProduto.create({
     *   data: {
     *     // ... data to create a AssociacaoProduto
     *   }
     * })
     * 
     */
    create<T extends AssociacaoProdutoCreateArgs>(args: SelectSubset<T, AssociacaoProdutoCreateArgs<ExtArgs>>): Prisma__AssociacaoProdutoClient<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AssociacaoProdutos.
     * @param {AssociacaoProdutoCreateManyArgs} args - Arguments to create many AssociacaoProdutos.
     * @example
     * // Create many AssociacaoProdutos
     * const associacaoProduto = await prisma.associacaoProduto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssociacaoProdutoCreateManyArgs>(args?: SelectSubset<T, AssociacaoProdutoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AssociacaoProduto.
     * @param {AssociacaoProdutoDeleteArgs} args - Arguments to delete one AssociacaoProduto.
     * @example
     * // Delete one AssociacaoProduto
     * const AssociacaoProduto = await prisma.associacaoProduto.delete({
     *   where: {
     *     // ... filter to delete one AssociacaoProduto
     *   }
     * })
     * 
     */
    delete<T extends AssociacaoProdutoDeleteArgs>(args: SelectSubset<T, AssociacaoProdutoDeleteArgs<ExtArgs>>): Prisma__AssociacaoProdutoClient<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AssociacaoProduto.
     * @param {AssociacaoProdutoUpdateArgs} args - Arguments to update one AssociacaoProduto.
     * @example
     * // Update one AssociacaoProduto
     * const associacaoProduto = await prisma.associacaoProduto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssociacaoProdutoUpdateArgs>(args: SelectSubset<T, AssociacaoProdutoUpdateArgs<ExtArgs>>): Prisma__AssociacaoProdutoClient<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AssociacaoProdutos.
     * @param {AssociacaoProdutoDeleteManyArgs} args - Arguments to filter AssociacaoProdutos to delete.
     * @example
     * // Delete a few AssociacaoProdutos
     * const { count } = await prisma.associacaoProduto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssociacaoProdutoDeleteManyArgs>(args?: SelectSubset<T, AssociacaoProdutoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssociacaoProdutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssociacaoProdutoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AssociacaoProdutos
     * const associacaoProduto = await prisma.associacaoProduto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssociacaoProdutoUpdateManyArgs>(args: SelectSubset<T, AssociacaoProdutoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AssociacaoProduto.
     * @param {AssociacaoProdutoUpsertArgs} args - Arguments to update or create a AssociacaoProduto.
     * @example
     * // Update or create a AssociacaoProduto
     * const associacaoProduto = await prisma.associacaoProduto.upsert({
     *   create: {
     *     // ... data to create a AssociacaoProduto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AssociacaoProduto we want to update
     *   }
     * })
     */
    upsert<T extends AssociacaoProdutoUpsertArgs>(args: SelectSubset<T, AssociacaoProdutoUpsertArgs<ExtArgs>>): Prisma__AssociacaoProdutoClient<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AssociacaoProdutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssociacaoProdutoCountArgs} args - Arguments to filter AssociacaoProdutos to count.
     * @example
     * // Count the number of AssociacaoProdutos
     * const count = await prisma.associacaoProduto.count({
     *   where: {
     *     // ... the filter for the AssociacaoProdutos we want to count
     *   }
     * })
    **/
    count<T extends AssociacaoProdutoCountArgs>(
      args?: Subset<T, AssociacaoProdutoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssociacaoProdutoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AssociacaoProduto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssociacaoProdutoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssociacaoProdutoAggregateArgs>(args: Subset<T, AssociacaoProdutoAggregateArgs>): Prisma.PrismaPromise<GetAssociacaoProdutoAggregateType<T>>

    /**
     * Group by AssociacaoProduto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssociacaoProdutoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssociacaoProdutoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssociacaoProdutoGroupByArgs['orderBy'] }
        : { orderBy?: AssociacaoProdutoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssociacaoProdutoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssociacaoProdutoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AssociacaoProduto model
   */
  readonly fields: AssociacaoProdutoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AssociacaoProduto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssociacaoProdutoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produtoA<T extends ProdutoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProdutoDefaultArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    produtoB<T extends ProdutoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProdutoDefaultArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AssociacaoProduto model
   */
  interface AssociacaoProdutoFieldRefs {
    readonly id: FieldRef<"AssociacaoProduto", 'BigInt'>
    readonly produto_a_id: FieldRef<"AssociacaoProduto", 'Int'>
    readonly produto_b_id: FieldRef<"AssociacaoProduto", 'Int'>
    readonly suporte: FieldRef<"AssociacaoProduto", 'Int'>
    readonly confianca: FieldRef<"AssociacaoProduto", 'Float'>
    readonly lift: FieldRef<"AssociacaoProduto", 'Float'>
    readonly a_nome: FieldRef<"AssociacaoProduto", 'String'>
    readonly b_nome: FieldRef<"AssociacaoProduto", 'String'>
    readonly a_tipo: FieldRef<"AssociacaoProduto", 'String'>
    readonly b_tipo: FieldRef<"AssociacaoProduto", 'String'>
    readonly vendas_produto_a: FieldRef<"AssociacaoProduto", 'Int'>
    readonly vendas_produto_b: FieldRef<"AssociacaoProduto", 'Int'>
    readonly atualizado_em: FieldRef<"AssociacaoProduto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AssociacaoProduto findUnique
   */
  export type AssociacaoProdutoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which AssociacaoProduto to fetch.
     */
    where: AssociacaoProdutoWhereUniqueInput
  }

  /**
   * AssociacaoProduto findUniqueOrThrow
   */
  export type AssociacaoProdutoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which AssociacaoProduto to fetch.
     */
    where: AssociacaoProdutoWhereUniqueInput
  }

  /**
   * AssociacaoProduto findFirst
   */
  export type AssociacaoProdutoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which AssociacaoProduto to fetch.
     */
    where?: AssociacaoProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssociacaoProdutos to fetch.
     */
    orderBy?: AssociacaoProdutoOrderByWithRelationInput | AssociacaoProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssociacaoProdutos.
     */
    cursor?: AssociacaoProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssociacaoProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssociacaoProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssociacaoProdutos.
     */
    distinct?: AssociacaoProdutoScalarFieldEnum | AssociacaoProdutoScalarFieldEnum[]
  }

  /**
   * AssociacaoProduto findFirstOrThrow
   */
  export type AssociacaoProdutoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which AssociacaoProduto to fetch.
     */
    where?: AssociacaoProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssociacaoProdutos to fetch.
     */
    orderBy?: AssociacaoProdutoOrderByWithRelationInput | AssociacaoProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssociacaoProdutos.
     */
    cursor?: AssociacaoProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssociacaoProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssociacaoProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssociacaoProdutos.
     */
    distinct?: AssociacaoProdutoScalarFieldEnum | AssociacaoProdutoScalarFieldEnum[]
  }

  /**
   * AssociacaoProduto findMany
   */
  export type AssociacaoProdutoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which AssociacaoProdutos to fetch.
     */
    where?: AssociacaoProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssociacaoProdutos to fetch.
     */
    orderBy?: AssociacaoProdutoOrderByWithRelationInput | AssociacaoProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AssociacaoProdutos.
     */
    cursor?: AssociacaoProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssociacaoProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssociacaoProdutos.
     */
    skip?: number
    distinct?: AssociacaoProdutoScalarFieldEnum | AssociacaoProdutoScalarFieldEnum[]
  }

  /**
   * AssociacaoProduto create
   */
  export type AssociacaoProdutoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * The data needed to create a AssociacaoProduto.
     */
    data: XOR<AssociacaoProdutoCreateInput, AssociacaoProdutoUncheckedCreateInput>
  }

  /**
   * AssociacaoProduto createMany
   */
  export type AssociacaoProdutoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AssociacaoProdutos.
     */
    data: AssociacaoProdutoCreateManyInput | AssociacaoProdutoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AssociacaoProduto update
   */
  export type AssociacaoProdutoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * The data needed to update a AssociacaoProduto.
     */
    data: XOR<AssociacaoProdutoUpdateInput, AssociacaoProdutoUncheckedUpdateInput>
    /**
     * Choose, which AssociacaoProduto to update.
     */
    where: AssociacaoProdutoWhereUniqueInput
  }

  /**
   * AssociacaoProduto updateMany
   */
  export type AssociacaoProdutoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AssociacaoProdutos.
     */
    data: XOR<AssociacaoProdutoUpdateManyMutationInput, AssociacaoProdutoUncheckedUpdateManyInput>
    /**
     * Filter which AssociacaoProdutos to update
     */
    where?: AssociacaoProdutoWhereInput
    /**
     * Limit how many AssociacaoProdutos to update.
     */
    limit?: number
  }

  /**
   * AssociacaoProduto upsert
   */
  export type AssociacaoProdutoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * The filter to search for the AssociacaoProduto to update in case it exists.
     */
    where: AssociacaoProdutoWhereUniqueInput
    /**
     * In case the AssociacaoProduto found by the `where` argument doesn't exist, create a new AssociacaoProduto with this data.
     */
    create: XOR<AssociacaoProdutoCreateInput, AssociacaoProdutoUncheckedCreateInput>
    /**
     * In case the AssociacaoProduto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssociacaoProdutoUpdateInput, AssociacaoProdutoUncheckedUpdateInput>
  }

  /**
   * AssociacaoProduto delete
   */
  export type AssociacaoProdutoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    /**
     * Filter which AssociacaoProduto to delete.
     */
    where: AssociacaoProdutoWhereUniqueInput
  }

  /**
   * AssociacaoProduto deleteMany
   */
  export type AssociacaoProdutoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssociacaoProdutos to delete
     */
    where?: AssociacaoProdutoWhereInput
    /**
     * Limit how many AssociacaoProdutos to delete.
     */
    limit?: number
  }

  /**
   * AssociacaoProduto without action
   */
  export type AssociacaoProdutoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
  }


  /**
   * Model Empresa
   */

  export type AggregateEmpresa = {
    _count: EmpresaCountAggregateOutputType | null
    _avg: EmpresaAvgAggregateOutputType | null
    _sum: EmpresaSumAggregateOutputType | null
    _min: EmpresaMinAggregateOutputType | null
    _max: EmpresaMaxAggregateOutputType | null
  }

  export type EmpresaAvgAggregateOutputType = {
    id: number | null
  }

  export type EmpresaSumAggregateOutputType = {
    id: number | null
  }

  export type EmpresaMinAggregateOutputType = {
    id: number | null
    razaoSocial: string | null
    nomeFantasia: string | null
    cnpjMatriz: string | null
    inscricaoEstadual: string | null
    cidade: string | null
    estado: string | null
    logradouro: string | null
    numero: string | null
    bairro: string | null
    cep: string | null
    telefone: string | null
    email: string | null
    ativo: boolean | null
    dataCriacao: Date | null
    dataAtualizacao: Date | null
  }

  export type EmpresaMaxAggregateOutputType = {
    id: number | null
    razaoSocial: string | null
    nomeFantasia: string | null
    cnpjMatriz: string | null
    inscricaoEstadual: string | null
    cidade: string | null
    estado: string | null
    logradouro: string | null
    numero: string | null
    bairro: string | null
    cep: string | null
    telefone: string | null
    email: string | null
    ativo: boolean | null
    dataCriacao: Date | null
    dataAtualizacao: Date | null
  }

  export type EmpresaCountAggregateOutputType = {
    id: number
    razaoSocial: number
    nomeFantasia: number
    cnpjMatriz: number
    inscricaoEstadual: number
    cidade: number
    estado: number
    logradouro: number
    numero: number
    bairro: number
    cep: number
    telefone: number
    email: number
    ativo: number
    dataCriacao: number
    dataAtualizacao: number
    _all: number
  }


  export type EmpresaAvgAggregateInputType = {
    id?: true
  }

  export type EmpresaSumAggregateInputType = {
    id?: true
  }

  export type EmpresaMinAggregateInputType = {
    id?: true
    razaoSocial?: true
    nomeFantasia?: true
    cnpjMatriz?: true
    inscricaoEstadual?: true
    cidade?: true
    estado?: true
    logradouro?: true
    numero?: true
    bairro?: true
    cep?: true
    telefone?: true
    email?: true
    ativo?: true
    dataCriacao?: true
    dataAtualizacao?: true
  }

  export type EmpresaMaxAggregateInputType = {
    id?: true
    razaoSocial?: true
    nomeFantasia?: true
    cnpjMatriz?: true
    inscricaoEstadual?: true
    cidade?: true
    estado?: true
    logradouro?: true
    numero?: true
    bairro?: true
    cep?: true
    telefone?: true
    email?: true
    ativo?: true
    dataCriacao?: true
    dataAtualizacao?: true
  }

  export type EmpresaCountAggregateInputType = {
    id?: true
    razaoSocial?: true
    nomeFantasia?: true
    cnpjMatriz?: true
    inscricaoEstadual?: true
    cidade?: true
    estado?: true
    logradouro?: true
    numero?: true
    bairro?: true
    cep?: true
    telefone?: true
    email?: true
    ativo?: true
    dataCriacao?: true
    dataAtualizacao?: true
    _all?: true
  }

  export type EmpresaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Empresa to aggregate.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Empresas
    **/
    _count?: true | EmpresaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmpresaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmpresaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmpresaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmpresaMaxAggregateInputType
  }

  export type GetEmpresaAggregateType<T extends EmpresaAggregateArgs> = {
        [P in keyof T & keyof AggregateEmpresa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmpresa[P]>
      : GetScalarType<T[P], AggregateEmpresa[P]>
  }




  export type EmpresaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmpresaWhereInput
    orderBy?: EmpresaOrderByWithAggregationInput | EmpresaOrderByWithAggregationInput[]
    by: EmpresaScalarFieldEnum[] | EmpresaScalarFieldEnum
    having?: EmpresaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmpresaCountAggregateInputType | true
    _avg?: EmpresaAvgAggregateInputType
    _sum?: EmpresaSumAggregateInputType
    _min?: EmpresaMinAggregateInputType
    _max?: EmpresaMaxAggregateInputType
  }

  export type EmpresaGroupByOutputType = {
    id: number
    razaoSocial: string
    nomeFantasia: string | null
    cnpjMatriz: string
    inscricaoEstadual: string | null
    cidade: string | null
    estado: string | null
    logradouro: string | null
    numero: string | null
    bairro: string | null
    cep: string | null
    telefone: string | null
    email: string | null
    ativo: boolean
    dataCriacao: Date
    dataAtualizacao: Date
    _count: EmpresaCountAggregateOutputType | null
    _avg: EmpresaAvgAggregateOutputType | null
    _sum: EmpresaSumAggregateOutputType | null
    _min: EmpresaMinAggregateOutputType | null
    _max: EmpresaMaxAggregateOutputType | null
  }

  type GetEmpresaGroupByPayload<T extends EmpresaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmpresaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmpresaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmpresaGroupByOutputType[P]>
            : GetScalarType<T[P], EmpresaGroupByOutputType[P]>
        }
      >
    >


  export type EmpresaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    razaoSocial?: boolean
    nomeFantasia?: boolean
    cnpjMatriz?: boolean
    inscricaoEstadual?: boolean
    cidade?: boolean
    estado?: boolean
    logradouro?: boolean
    numero?: boolean
    bairro?: boolean
    cep?: boolean
    telefone?: boolean
    email?: boolean
    ativo?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
    filiais?: boolean | Empresa$filiaisArgs<ExtArgs>
    configuracaoInatividade?: boolean | Empresa$configuracaoInatividadeArgs<ExtArgs>
    _count?: boolean | EmpresaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["empresa"]>



  export type EmpresaSelectScalar = {
    id?: boolean
    razaoSocial?: boolean
    nomeFantasia?: boolean
    cnpjMatriz?: boolean
    inscricaoEstadual?: boolean
    cidade?: boolean
    estado?: boolean
    logradouro?: boolean
    numero?: boolean
    bairro?: boolean
    cep?: boolean
    telefone?: boolean
    email?: boolean
    ativo?: boolean
    dataCriacao?: boolean
    dataAtualizacao?: boolean
  }

  export type EmpresaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "razaoSocial" | "nomeFantasia" | "cnpjMatriz" | "inscricaoEstadual" | "cidade" | "estado" | "logradouro" | "numero" | "bairro" | "cep" | "telefone" | "email" | "ativo" | "dataCriacao" | "dataAtualizacao", ExtArgs["result"]["empresa"]>
  export type EmpresaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filiais?: boolean | Empresa$filiaisArgs<ExtArgs>
    configuracaoInatividade?: boolean | Empresa$configuracaoInatividadeArgs<ExtArgs>
    _count?: boolean | EmpresaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $EmpresaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Empresa"
    objects: {
      filiais: Prisma.$FilialPayload<ExtArgs>[]
      configuracaoInatividade: Prisma.$ConfiguracaoInatividadePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      razaoSocial: string
      nomeFantasia: string | null
      cnpjMatriz: string
      inscricaoEstadual: string | null
      cidade: string | null
      estado: string | null
      logradouro: string | null
      numero: string | null
      bairro: string | null
      cep: string | null
      telefone: string | null
      email: string | null
      ativo: boolean
      dataCriacao: Date
      dataAtualizacao: Date
    }, ExtArgs["result"]["empresa"]>
    composites: {}
  }

  type EmpresaGetPayload<S extends boolean | null | undefined | EmpresaDefaultArgs> = $Result.GetResult<Prisma.$EmpresaPayload, S>

  type EmpresaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmpresaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmpresaCountAggregateInputType | true
    }

  export interface EmpresaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Empresa'], meta: { name: 'Empresa' } }
    /**
     * Find zero or one Empresa that matches the filter.
     * @param {EmpresaFindUniqueArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmpresaFindUniqueArgs>(args: SelectSubset<T, EmpresaFindUniqueArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Empresa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmpresaFindUniqueOrThrowArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmpresaFindUniqueOrThrowArgs>(args: SelectSubset<T, EmpresaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empresa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindFirstArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmpresaFindFirstArgs>(args?: SelectSubset<T, EmpresaFindFirstArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Empresa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindFirstOrThrowArgs} args - Arguments to find a Empresa
     * @example
     * // Get one Empresa
     * const empresa = await prisma.empresa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmpresaFindFirstOrThrowArgs>(args?: SelectSubset<T, EmpresaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Empresas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Empresas
     * const empresas = await prisma.empresa.findMany()
     * 
     * // Get first 10 Empresas
     * const empresas = await prisma.empresa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const empresaWithIdOnly = await prisma.empresa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmpresaFindManyArgs>(args?: SelectSubset<T, EmpresaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Empresa.
     * @param {EmpresaCreateArgs} args - Arguments to create a Empresa.
     * @example
     * // Create one Empresa
     * const Empresa = await prisma.empresa.create({
     *   data: {
     *     // ... data to create a Empresa
     *   }
     * })
     * 
     */
    create<T extends EmpresaCreateArgs>(args: SelectSubset<T, EmpresaCreateArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Empresas.
     * @param {EmpresaCreateManyArgs} args - Arguments to create many Empresas.
     * @example
     * // Create many Empresas
     * const empresa = await prisma.empresa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmpresaCreateManyArgs>(args?: SelectSubset<T, EmpresaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Empresa.
     * @param {EmpresaDeleteArgs} args - Arguments to delete one Empresa.
     * @example
     * // Delete one Empresa
     * const Empresa = await prisma.empresa.delete({
     *   where: {
     *     // ... filter to delete one Empresa
     *   }
     * })
     * 
     */
    delete<T extends EmpresaDeleteArgs>(args: SelectSubset<T, EmpresaDeleteArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Empresa.
     * @param {EmpresaUpdateArgs} args - Arguments to update one Empresa.
     * @example
     * // Update one Empresa
     * const empresa = await prisma.empresa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmpresaUpdateArgs>(args: SelectSubset<T, EmpresaUpdateArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Empresas.
     * @param {EmpresaDeleteManyArgs} args - Arguments to filter Empresas to delete.
     * @example
     * // Delete a few Empresas
     * const { count } = await prisma.empresa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmpresaDeleteManyArgs>(args?: SelectSubset<T, EmpresaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Empresas
     * const empresa = await prisma.empresa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmpresaUpdateManyArgs>(args: SelectSubset<T, EmpresaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Empresa.
     * @param {EmpresaUpsertArgs} args - Arguments to update or create a Empresa.
     * @example
     * // Update or create a Empresa
     * const empresa = await prisma.empresa.upsert({
     *   create: {
     *     // ... data to create a Empresa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Empresa we want to update
     *   }
     * })
     */
    upsert<T extends EmpresaUpsertArgs>(args: SelectSubset<T, EmpresaUpsertArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Empresas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaCountArgs} args - Arguments to filter Empresas to count.
     * @example
     * // Count the number of Empresas
     * const count = await prisma.empresa.count({
     *   where: {
     *     // ... the filter for the Empresas we want to count
     *   }
     * })
    **/
    count<T extends EmpresaCountArgs>(
      args?: Subset<T, EmpresaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmpresaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Empresa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmpresaAggregateArgs>(args: Subset<T, EmpresaAggregateArgs>): Prisma.PrismaPromise<GetEmpresaAggregateType<T>>

    /**
     * Group by Empresa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmpresaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmpresaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmpresaGroupByArgs['orderBy'] }
        : { orderBy?: EmpresaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmpresaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmpresaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Empresa model
   */
  readonly fields: EmpresaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Empresa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmpresaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filiais<T extends Empresa$filiaisArgs<ExtArgs> = {}>(args?: Subset<T, Empresa$filiaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    configuracaoInatividade<T extends Empresa$configuracaoInatividadeArgs<ExtArgs> = {}>(args?: Subset<T, Empresa$configuracaoInatividadeArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Empresa model
   */
  interface EmpresaFieldRefs {
    readonly id: FieldRef<"Empresa", 'Int'>
    readonly razaoSocial: FieldRef<"Empresa", 'String'>
    readonly nomeFantasia: FieldRef<"Empresa", 'String'>
    readonly cnpjMatriz: FieldRef<"Empresa", 'String'>
    readonly inscricaoEstadual: FieldRef<"Empresa", 'String'>
    readonly cidade: FieldRef<"Empresa", 'String'>
    readonly estado: FieldRef<"Empresa", 'String'>
    readonly logradouro: FieldRef<"Empresa", 'String'>
    readonly numero: FieldRef<"Empresa", 'String'>
    readonly bairro: FieldRef<"Empresa", 'String'>
    readonly cep: FieldRef<"Empresa", 'String'>
    readonly telefone: FieldRef<"Empresa", 'String'>
    readonly email: FieldRef<"Empresa", 'String'>
    readonly ativo: FieldRef<"Empresa", 'Boolean'>
    readonly dataCriacao: FieldRef<"Empresa", 'DateTime'>
    readonly dataAtualizacao: FieldRef<"Empresa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Empresa findUnique
   */
  export type EmpresaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa findUniqueOrThrow
   */
  export type EmpresaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa findFirst
   */
  export type EmpresaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Empresas.
     */
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa findFirstOrThrow
   */
  export type EmpresaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresa to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Empresas.
     */
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa findMany
   */
  export type EmpresaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter, which Empresas to fetch.
     */
    where?: EmpresaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Empresas to fetch.
     */
    orderBy?: EmpresaOrderByWithRelationInput | EmpresaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Empresas.
     */
    cursor?: EmpresaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Empresas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Empresas.
     */
    skip?: number
    distinct?: EmpresaScalarFieldEnum | EmpresaScalarFieldEnum[]
  }

  /**
   * Empresa create
   */
  export type EmpresaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The data needed to create a Empresa.
     */
    data: XOR<EmpresaCreateInput, EmpresaUncheckedCreateInput>
  }

  /**
   * Empresa createMany
   */
  export type EmpresaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Empresas.
     */
    data: EmpresaCreateManyInput | EmpresaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Empresa update
   */
  export type EmpresaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The data needed to update a Empresa.
     */
    data: XOR<EmpresaUpdateInput, EmpresaUncheckedUpdateInput>
    /**
     * Choose, which Empresa to update.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa updateMany
   */
  export type EmpresaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Empresas.
     */
    data: XOR<EmpresaUpdateManyMutationInput, EmpresaUncheckedUpdateManyInput>
    /**
     * Filter which Empresas to update
     */
    where?: EmpresaWhereInput
    /**
     * Limit how many Empresas to update.
     */
    limit?: number
  }

  /**
   * Empresa upsert
   */
  export type EmpresaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * The filter to search for the Empresa to update in case it exists.
     */
    where: EmpresaWhereUniqueInput
    /**
     * In case the Empresa found by the `where` argument doesn't exist, create a new Empresa with this data.
     */
    create: XOR<EmpresaCreateInput, EmpresaUncheckedCreateInput>
    /**
     * In case the Empresa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmpresaUpdateInput, EmpresaUncheckedUpdateInput>
  }

  /**
   * Empresa delete
   */
  export type EmpresaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
    /**
     * Filter which Empresa to delete.
     */
    where: EmpresaWhereUniqueInput
  }

  /**
   * Empresa deleteMany
   */
  export type EmpresaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Empresas to delete
     */
    where?: EmpresaWhereInput
    /**
     * Limit how many Empresas to delete.
     */
    limit?: number
  }

  /**
   * Empresa.filiais
   */
  export type Empresa$filiaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
    orderBy?: FilialOrderByWithRelationInput | FilialOrderByWithRelationInput[]
    cursor?: FilialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FilialScalarFieldEnum | FilialScalarFieldEnum[]
  }

  /**
   * Empresa.configuracaoInatividade
   */
  export type Empresa$configuracaoInatividadeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    where?: ConfiguracaoInatividadeWhereInput
  }

  /**
   * Empresa without action
   */
  export type EmpresaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Empresa
     */
    select?: EmpresaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Empresa
     */
    omit?: EmpresaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmpresaInclude<ExtArgs> | null
  }


  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    id: number | null
  }

  export type ClienteSumAggregateOutputType = {
    id: number | null
  }

  export type ClienteMinAggregateOutputType = {
    id: number | null
    nome: string | null
    cpfCnpj: string | null
    cidade: string | null
    estado: string | null
    logradouro: string | null
    numero: string | null
    bairro: string | null
    cep: string | null
    telefone: string | null
  }

  export type ClienteMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    cpfCnpj: string | null
    cidade: string | null
    estado: string | null
    logradouro: string | null
    numero: string | null
    bairro: string | null
    cep: string | null
    telefone: string | null
  }

  export type ClienteCountAggregateOutputType = {
    id: number
    nome: number
    cpfCnpj: number
    cidade: number
    estado: number
    logradouro: number
    numero: number
    bairro: number
    cep: number
    telefone: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    id?: true
  }

  export type ClienteSumAggregateInputType = {
    id?: true
  }

  export type ClienteMinAggregateInputType = {
    id?: true
    nome?: true
    cpfCnpj?: true
    cidade?: true
    estado?: true
    logradouro?: true
    numero?: true
    bairro?: true
    cep?: true
    telefone?: true
  }

  export type ClienteMaxAggregateInputType = {
    id?: true
    nome?: true
    cpfCnpj?: true
    cidade?: true
    estado?: true
    logradouro?: true
    numero?: true
    bairro?: true
    cep?: true
    telefone?: true
  }

  export type ClienteCountAggregateInputType = {
    id?: true
    nome?: true
    cpfCnpj?: true
    cidade?: true
    estado?: true
    logradouro?: true
    numero?: true
    bairro?: true
    cep?: true
    telefone?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id: number
    nome: string
    cpfCnpj: string
    cidade: string | null
    estado: string | null
    logradouro: string | null
    numero: string | null
    bairro: string | null
    cep: string | null
    telefone: string | null
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cpfCnpj?: boolean
    cidade?: boolean
    estado?: boolean
    logradouro?: boolean
    numero?: boolean
    bairro?: boolean
    cep?: boolean
    telefone?: boolean
    notasFiscais?: boolean | Cliente$notasFiscaisArgs<ExtArgs>
    rfvTipoNegocio?: boolean | Cliente$rfvTipoNegocioArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>



  export type ClienteSelectScalar = {
    id?: boolean
    nome?: boolean
    cpfCnpj?: boolean
    cidade?: boolean
    estado?: boolean
    logradouro?: boolean
    numero?: boolean
    bairro?: boolean
    cep?: boolean
    telefone?: boolean
  }

  export type ClienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "cpfCnpj" | "cidade" | "estado" | "logradouro" | "numero" | "bairro" | "cep" | "telefone", ExtArgs["result"]["cliente"]>
  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notasFiscais?: boolean | Cliente$notasFiscaisArgs<ExtArgs>
    rfvTipoNegocio?: boolean | Cliente$rfvTipoNegocioArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      notasFiscais: Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>[]
      rfvTipoNegocio: Prisma.$RFVTipoNegocioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      cpfCnpj: string
      cidade: string | null
      estado: string | null
      logradouro: string | null
      numero: string | null
      bairro: string | null
      cep: string | null
      telefone: string | null
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteFindUniqueArgs>(args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteFindFirstArgs>(args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clienteWithIdOnly = await prisma.cliente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClienteFindManyArgs>(args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends ClienteCreateArgs>(args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteCreateManyArgs>(args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends ClienteDeleteArgs>(args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteUpdateArgs>(args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteDeleteManyArgs>(args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteUpdateManyArgs>(args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends ClienteUpsertArgs>(args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    notasFiscais<T extends Cliente$notasFiscaisArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$notasFiscaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rfvTipoNegocio<T extends Cliente$rfvTipoNegocioArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$rfvTipoNegocioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cliente model
   */
  interface ClienteFieldRefs {
    readonly id: FieldRef<"Cliente", 'Int'>
    readonly nome: FieldRef<"Cliente", 'String'>
    readonly cpfCnpj: FieldRef<"Cliente", 'String'>
    readonly cidade: FieldRef<"Cliente", 'String'>
    readonly estado: FieldRef<"Cliente", 'String'>
    readonly logradouro: FieldRef<"Cliente", 'String'>
    readonly numero: FieldRef<"Cliente", 'String'>
    readonly bairro: FieldRef<"Cliente", 'String'>
    readonly cep: FieldRef<"Cliente", 'String'>
    readonly telefone: FieldRef<"Cliente", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }

  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }

  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to delete.
     */
    limit?: number
  }

  /**
   * Cliente.notasFiscais
   */
  export type Cliente$notasFiscaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    where?: NotasFiscalCabecalhoWhereInput
    orderBy?: NotasFiscalCabecalhoOrderByWithRelationInput | NotasFiscalCabecalhoOrderByWithRelationInput[]
    cursor?: NotasFiscalCabecalhoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotasFiscalCabecalhoScalarFieldEnum | NotasFiscalCabecalhoScalarFieldEnum[]
  }

  /**
   * Cliente.rfvTipoNegocio
   */
  export type Cliente$rfvTipoNegocioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    where?: RFVTipoNegocioWhereInput
    orderBy?: RFVTipoNegocioOrderByWithRelationInput | RFVTipoNegocioOrderByWithRelationInput[]
    cursor?: RFVTipoNegocioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RFVTipoNegocioScalarFieldEnum | RFVTipoNegocioScalarFieldEnum[]
  }

  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
  }


  /**
   * Model Filial
   */

  export type AggregateFilial = {
    _count: FilialCountAggregateOutputType | null
    _avg: FilialAvgAggregateOutputType | null
    _sum: FilialSumAggregateOutputType | null
    _min: FilialMinAggregateOutputType | null
    _max: FilialMaxAggregateOutputType | null
  }

  export type FilialAvgAggregateOutputType = {
    id: number | null
    empresaId: number | null
  }

  export type FilialSumAggregateOutputType = {
    id: number | null
    empresaId: number | null
  }

  export type FilialMinAggregateOutputType = {
    id: number | null
    empresaId: number | null
    nome: string | null
    cnpj: string | null
    cidade: string | null
    estado: string | null
  }

  export type FilialMaxAggregateOutputType = {
    id: number | null
    empresaId: number | null
    nome: string | null
    cnpj: string | null
    cidade: string | null
    estado: string | null
  }

  export type FilialCountAggregateOutputType = {
    id: number
    empresaId: number
    nome: number
    cnpj: number
    cidade: number
    estado: number
    _all: number
  }


  export type FilialAvgAggregateInputType = {
    id?: true
    empresaId?: true
  }

  export type FilialSumAggregateInputType = {
    id?: true
    empresaId?: true
  }

  export type FilialMinAggregateInputType = {
    id?: true
    empresaId?: true
    nome?: true
    cnpj?: true
    cidade?: true
    estado?: true
  }

  export type FilialMaxAggregateInputType = {
    id?: true
    empresaId?: true
    nome?: true
    cnpj?: true
    cidade?: true
    estado?: true
  }

  export type FilialCountAggregateInputType = {
    id?: true
    empresaId?: true
    nome?: true
    cnpj?: true
    cidade?: true
    estado?: true
    _all?: true
  }

  export type FilialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Filial to aggregate.
     */
    where?: FilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Filials to fetch.
     */
    orderBy?: FilialOrderByWithRelationInput | FilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Filials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Filials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Filials
    **/
    _count?: true | FilialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FilialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FilialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FilialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FilialMaxAggregateInputType
  }

  export type GetFilialAggregateType<T extends FilialAggregateArgs> = {
        [P in keyof T & keyof AggregateFilial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFilial[P]>
      : GetScalarType<T[P], AggregateFilial[P]>
  }




  export type FilialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FilialWhereInput
    orderBy?: FilialOrderByWithAggregationInput | FilialOrderByWithAggregationInput[]
    by: FilialScalarFieldEnum[] | FilialScalarFieldEnum
    having?: FilialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FilialCountAggregateInputType | true
    _avg?: FilialAvgAggregateInputType
    _sum?: FilialSumAggregateInputType
    _min?: FilialMinAggregateInputType
    _max?: FilialMaxAggregateInputType
  }

  export type FilialGroupByOutputType = {
    id: number
    empresaId: number
    nome: string
    cnpj: string
    cidade: string | null
    estado: string | null
    _count: FilialCountAggregateOutputType | null
    _avg: FilialAvgAggregateOutputType | null
    _sum: FilialSumAggregateOutputType | null
    _min: FilialMinAggregateOutputType | null
    _max: FilialMaxAggregateOutputType | null
  }

  type GetFilialGroupByPayload<T extends FilialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FilialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FilialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FilialGroupByOutputType[P]>
            : GetScalarType<T[P], FilialGroupByOutputType[P]>
        }
      >
    >


  export type FilialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empresaId?: boolean
    nome?: boolean
    cnpj?: boolean
    cidade?: boolean
    estado?: boolean
    empresa?: boolean | EmpresaDefaultArgs<ExtArgs>
    notasFiscais?: boolean | Filial$notasFiscaisArgs<ExtArgs>
    vendedores?: boolean | Filial$vendedoresArgs<ExtArgs>
    rfvParameterSets?: boolean | Filial$rfvParameterSetsArgs<ExtArgs>
    maquinasEstoque?: boolean | Filial$maquinasEstoqueArgs<ExtArgs>
    receitasPeriodo?: boolean | Filial$receitasPeriodoArgs<ExtArgs>
    receitasTipoProduto?: boolean | Filial$receitasTipoProdutoArgs<ExtArgs>
    receitasProdutoModelo?: boolean | Filial$receitasProdutoModeloArgs<ExtArgs>
    crescimentoVendas?: boolean | Filial$crescimentoVendasArgs<ExtArgs>
    ticketsMedios?: boolean | Filial$ticketsMediosArgs<ExtArgs>
    itensPorNF?: boolean | Filial$itensPorNFArgs<ExtArgs>
    sazonalidades?: boolean | Filial$sazonalidadesArgs<ExtArgs>
    receitasLocalizacao?: boolean | Filial$receitasLocalizacaoArgs<ExtArgs>
    receitasVendedor?: boolean | Filial$receitasVendedorArgs<ExtArgs>
    estatisticasNotasFiscais?: boolean | Filial$estatisticasNotasFiscaisArgs<ExtArgs>
    receitasVendedorDetalhadas?: boolean | Filial$receitasVendedorDetalhadasArgs<ExtArgs>
    ticketsMediosVendedor?: boolean | Filial$ticketsMediosVendedorArgs<ExtArgs>
    mixVendedores?: boolean | Filial$mixVendedoresArgs<ExtArgs>
    coberturaCarteiras?: boolean | Filial$coberturaCarteirasArgs<ExtArgs>
    rankingVendedores?: boolean | Filial$rankingVendedoresArgs<ExtArgs>
    receitasFilial?: boolean | Filial$receitasFilialArgs<ExtArgs>
    mixFiliais?: boolean | Filial$mixFiliaisArgs<ExtArgs>
    participacaoReceita?: boolean | Filial$participacaoReceitaArgs<ExtArgs>
    receitasRegioes?: boolean | Filial$receitasRegioesArgs<ExtArgs>
    _count?: boolean | FilialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["filial"]>



  export type FilialSelectScalar = {
    id?: boolean
    empresaId?: boolean
    nome?: boolean
    cnpj?: boolean
    cidade?: boolean
    estado?: boolean
  }

  export type FilialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empresaId" | "nome" | "cnpj" | "cidade" | "estado", ExtArgs["result"]["filial"]>
  export type FilialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresa?: boolean | EmpresaDefaultArgs<ExtArgs>
    notasFiscais?: boolean | Filial$notasFiscaisArgs<ExtArgs>
    vendedores?: boolean | Filial$vendedoresArgs<ExtArgs>
    rfvParameterSets?: boolean | Filial$rfvParameterSetsArgs<ExtArgs>
    maquinasEstoque?: boolean | Filial$maquinasEstoqueArgs<ExtArgs>
    receitasPeriodo?: boolean | Filial$receitasPeriodoArgs<ExtArgs>
    receitasTipoProduto?: boolean | Filial$receitasTipoProdutoArgs<ExtArgs>
    receitasProdutoModelo?: boolean | Filial$receitasProdutoModeloArgs<ExtArgs>
    crescimentoVendas?: boolean | Filial$crescimentoVendasArgs<ExtArgs>
    ticketsMedios?: boolean | Filial$ticketsMediosArgs<ExtArgs>
    itensPorNF?: boolean | Filial$itensPorNFArgs<ExtArgs>
    sazonalidades?: boolean | Filial$sazonalidadesArgs<ExtArgs>
    receitasLocalizacao?: boolean | Filial$receitasLocalizacaoArgs<ExtArgs>
    receitasVendedor?: boolean | Filial$receitasVendedorArgs<ExtArgs>
    estatisticasNotasFiscais?: boolean | Filial$estatisticasNotasFiscaisArgs<ExtArgs>
    receitasVendedorDetalhadas?: boolean | Filial$receitasVendedorDetalhadasArgs<ExtArgs>
    ticketsMediosVendedor?: boolean | Filial$ticketsMediosVendedorArgs<ExtArgs>
    mixVendedores?: boolean | Filial$mixVendedoresArgs<ExtArgs>
    coberturaCarteiras?: boolean | Filial$coberturaCarteirasArgs<ExtArgs>
    rankingVendedores?: boolean | Filial$rankingVendedoresArgs<ExtArgs>
    receitasFilial?: boolean | Filial$receitasFilialArgs<ExtArgs>
    mixFiliais?: boolean | Filial$mixFiliaisArgs<ExtArgs>
    participacaoReceita?: boolean | Filial$participacaoReceitaArgs<ExtArgs>
    receitasRegioes?: boolean | Filial$receitasRegioesArgs<ExtArgs>
    _count?: boolean | FilialCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $FilialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Filial"
    objects: {
      empresa: Prisma.$EmpresaPayload<ExtArgs>
      notasFiscais: Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>[]
      vendedores: Prisma.$VendedorPayload<ExtArgs>[]
      rfvParameterSets: Prisma.$RfvParameterSetPayload<ExtArgs>[]
      maquinasEstoque: Prisma.$MaquinaEstoquePayload<ExtArgs>[]
      receitasPeriodo: Prisma.$ReceitaPeriodoPayload<ExtArgs>[]
      receitasTipoProduto: Prisma.$ReceitaTipoProdutoPayload<ExtArgs>[]
      receitasProdutoModelo: Prisma.$ReceitaProdutoModeloPayload<ExtArgs>[]
      crescimentoVendas: Prisma.$CrescimentoVendasPayload<ExtArgs>[]
      ticketsMedios: Prisma.$TicketMedioPayload<ExtArgs>[]
      itensPorNF: Prisma.$ItensPorNFPayload<ExtArgs>[]
      sazonalidades: Prisma.$SazonalidadePayload<ExtArgs>[]
      receitasLocalizacao: Prisma.$ReceitaLocalizacaoPayload<ExtArgs>[]
      receitasVendedor: Prisma.$ReceitaVendedorPayload<ExtArgs>[]
      estatisticasNotasFiscais: Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>[]
      receitasVendedorDetalhadas: Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>[]
      ticketsMediosVendedor: Prisma.$TicketMedioVendedorPayload<ExtArgs>[]
      mixVendedores: Prisma.$MixVendedorPayload<ExtArgs>[]
      coberturaCarteiras: Prisma.$CoberturaCarteiraPayload<ExtArgs>[]
      rankingVendedores: Prisma.$RankingVendedoresPayload<ExtArgs>[]
      receitasFilial: Prisma.$ReceitaFilialPayload<ExtArgs>[]
      mixFiliais: Prisma.$MixFilialPayload<ExtArgs>[]
      participacaoReceita: Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>[]
      receitasRegioes: Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empresaId: number
      nome: string
      cnpj: string
      cidade: string | null
      estado: string | null
    }, ExtArgs["result"]["filial"]>
    composites: {}
  }

  type FilialGetPayload<S extends boolean | null | undefined | FilialDefaultArgs> = $Result.GetResult<Prisma.$FilialPayload, S>

  type FilialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FilialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FilialCountAggregateInputType | true
    }

  export interface FilialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Filial'], meta: { name: 'Filial' } }
    /**
     * Find zero or one Filial that matches the filter.
     * @param {FilialFindUniqueArgs} args - Arguments to find a Filial
     * @example
     * // Get one Filial
     * const filial = await prisma.filial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FilialFindUniqueArgs>(args: SelectSubset<T, FilialFindUniqueArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Filial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FilialFindUniqueOrThrowArgs} args - Arguments to find a Filial
     * @example
     * // Get one Filial
     * const filial = await prisma.filial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FilialFindUniqueOrThrowArgs>(args: SelectSubset<T, FilialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Filial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilialFindFirstArgs} args - Arguments to find a Filial
     * @example
     * // Get one Filial
     * const filial = await prisma.filial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FilialFindFirstArgs>(args?: SelectSubset<T, FilialFindFirstArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Filial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilialFindFirstOrThrowArgs} args - Arguments to find a Filial
     * @example
     * // Get one Filial
     * const filial = await prisma.filial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FilialFindFirstOrThrowArgs>(args?: SelectSubset<T, FilialFindFirstOrThrowArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Filials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Filials
     * const filials = await prisma.filial.findMany()
     * 
     * // Get first 10 Filials
     * const filials = await prisma.filial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const filialWithIdOnly = await prisma.filial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FilialFindManyArgs>(args?: SelectSubset<T, FilialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Filial.
     * @param {FilialCreateArgs} args - Arguments to create a Filial.
     * @example
     * // Create one Filial
     * const Filial = await prisma.filial.create({
     *   data: {
     *     // ... data to create a Filial
     *   }
     * })
     * 
     */
    create<T extends FilialCreateArgs>(args: SelectSubset<T, FilialCreateArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Filials.
     * @param {FilialCreateManyArgs} args - Arguments to create many Filials.
     * @example
     * // Create many Filials
     * const filial = await prisma.filial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FilialCreateManyArgs>(args?: SelectSubset<T, FilialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Filial.
     * @param {FilialDeleteArgs} args - Arguments to delete one Filial.
     * @example
     * // Delete one Filial
     * const Filial = await prisma.filial.delete({
     *   where: {
     *     // ... filter to delete one Filial
     *   }
     * })
     * 
     */
    delete<T extends FilialDeleteArgs>(args: SelectSubset<T, FilialDeleteArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Filial.
     * @param {FilialUpdateArgs} args - Arguments to update one Filial.
     * @example
     * // Update one Filial
     * const filial = await prisma.filial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FilialUpdateArgs>(args: SelectSubset<T, FilialUpdateArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Filials.
     * @param {FilialDeleteManyArgs} args - Arguments to filter Filials to delete.
     * @example
     * // Delete a few Filials
     * const { count } = await prisma.filial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FilialDeleteManyArgs>(args?: SelectSubset<T, FilialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Filials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Filials
     * const filial = await prisma.filial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FilialUpdateManyArgs>(args: SelectSubset<T, FilialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Filial.
     * @param {FilialUpsertArgs} args - Arguments to update or create a Filial.
     * @example
     * // Update or create a Filial
     * const filial = await prisma.filial.upsert({
     *   create: {
     *     // ... data to create a Filial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Filial we want to update
     *   }
     * })
     */
    upsert<T extends FilialUpsertArgs>(args: SelectSubset<T, FilialUpsertArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Filials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilialCountArgs} args - Arguments to filter Filials to count.
     * @example
     * // Count the number of Filials
     * const count = await prisma.filial.count({
     *   where: {
     *     // ... the filter for the Filials we want to count
     *   }
     * })
    **/
    count<T extends FilialCountArgs>(
      args?: Subset<T, FilialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FilialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Filial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FilialAggregateArgs>(args: Subset<T, FilialAggregateArgs>): Prisma.PrismaPromise<GetFilialAggregateType<T>>

    /**
     * Group by Filial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FilialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FilialGroupByArgs['orderBy'] }
        : { orderBy?: FilialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FilialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFilialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Filial model
   */
  readonly fields: FilialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Filial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FilialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empresa<T extends EmpresaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpresaDefaultArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    notasFiscais<T extends Filial$notasFiscaisArgs<ExtArgs> = {}>(args?: Subset<T, Filial$notasFiscaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    vendedores<T extends Filial$vendedoresArgs<ExtArgs> = {}>(args?: Subset<T, Filial$vendedoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rfvParameterSets<T extends Filial$rfvParameterSetsArgs<ExtArgs> = {}>(args?: Subset<T, Filial$rfvParameterSetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    maquinasEstoque<T extends Filial$maquinasEstoqueArgs<ExtArgs> = {}>(args?: Subset<T, Filial$maquinasEstoqueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasPeriodo<T extends Filial$receitasPeriodoArgs<ExtArgs> = {}>(args?: Subset<T, Filial$receitasPeriodoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasTipoProduto<T extends Filial$receitasTipoProdutoArgs<ExtArgs> = {}>(args?: Subset<T, Filial$receitasTipoProdutoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasProdutoModelo<T extends Filial$receitasProdutoModeloArgs<ExtArgs> = {}>(args?: Subset<T, Filial$receitasProdutoModeloArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    crescimentoVendas<T extends Filial$crescimentoVendasArgs<ExtArgs> = {}>(args?: Subset<T, Filial$crescimentoVendasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticketsMedios<T extends Filial$ticketsMediosArgs<ExtArgs> = {}>(args?: Subset<T, Filial$ticketsMediosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    itensPorNF<T extends Filial$itensPorNFArgs<ExtArgs> = {}>(args?: Subset<T, Filial$itensPorNFArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sazonalidades<T extends Filial$sazonalidadesArgs<ExtArgs> = {}>(args?: Subset<T, Filial$sazonalidadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasLocalizacao<T extends Filial$receitasLocalizacaoArgs<ExtArgs> = {}>(args?: Subset<T, Filial$receitasLocalizacaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasVendedor<T extends Filial$receitasVendedorArgs<ExtArgs> = {}>(args?: Subset<T, Filial$receitasVendedorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estatisticasNotasFiscais<T extends Filial$estatisticasNotasFiscaisArgs<ExtArgs> = {}>(args?: Subset<T, Filial$estatisticasNotasFiscaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasVendedorDetalhadas<T extends Filial$receitasVendedorDetalhadasArgs<ExtArgs> = {}>(args?: Subset<T, Filial$receitasVendedorDetalhadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticketsMediosVendedor<T extends Filial$ticketsMediosVendedorArgs<ExtArgs> = {}>(args?: Subset<T, Filial$ticketsMediosVendedorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mixVendedores<T extends Filial$mixVendedoresArgs<ExtArgs> = {}>(args?: Subset<T, Filial$mixVendedoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    coberturaCarteiras<T extends Filial$coberturaCarteirasArgs<ExtArgs> = {}>(args?: Subset<T, Filial$coberturaCarteirasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rankingVendedores<T extends Filial$rankingVendedoresArgs<ExtArgs> = {}>(args?: Subset<T, Filial$rankingVendedoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasFilial<T extends Filial$receitasFilialArgs<ExtArgs> = {}>(args?: Subset<T, Filial$receitasFilialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mixFiliais<T extends Filial$mixFiliaisArgs<ExtArgs> = {}>(args?: Subset<T, Filial$mixFiliaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    participacaoReceita<T extends Filial$participacaoReceitaArgs<ExtArgs> = {}>(args?: Subset<T, Filial$participacaoReceitaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasRegioes<T extends Filial$receitasRegioesArgs<ExtArgs> = {}>(args?: Subset<T, Filial$receitasRegioesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Filial model
   */
  interface FilialFieldRefs {
    readonly id: FieldRef<"Filial", 'Int'>
    readonly empresaId: FieldRef<"Filial", 'Int'>
    readonly nome: FieldRef<"Filial", 'String'>
    readonly cnpj: FieldRef<"Filial", 'String'>
    readonly cidade: FieldRef<"Filial", 'String'>
    readonly estado: FieldRef<"Filial", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Filial findUnique
   */
  export type FilialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * Filter, which Filial to fetch.
     */
    where: FilialWhereUniqueInput
  }

  /**
   * Filial findUniqueOrThrow
   */
  export type FilialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * Filter, which Filial to fetch.
     */
    where: FilialWhereUniqueInput
  }

  /**
   * Filial findFirst
   */
  export type FilialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * Filter, which Filial to fetch.
     */
    where?: FilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Filials to fetch.
     */
    orderBy?: FilialOrderByWithRelationInput | FilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Filials.
     */
    cursor?: FilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Filials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Filials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Filials.
     */
    distinct?: FilialScalarFieldEnum | FilialScalarFieldEnum[]
  }

  /**
   * Filial findFirstOrThrow
   */
  export type FilialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * Filter, which Filial to fetch.
     */
    where?: FilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Filials to fetch.
     */
    orderBy?: FilialOrderByWithRelationInput | FilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Filials.
     */
    cursor?: FilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Filials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Filials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Filials.
     */
    distinct?: FilialScalarFieldEnum | FilialScalarFieldEnum[]
  }

  /**
   * Filial findMany
   */
  export type FilialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * Filter, which Filials to fetch.
     */
    where?: FilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Filials to fetch.
     */
    orderBy?: FilialOrderByWithRelationInput | FilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Filials.
     */
    cursor?: FilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Filials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Filials.
     */
    skip?: number
    distinct?: FilialScalarFieldEnum | FilialScalarFieldEnum[]
  }

  /**
   * Filial create
   */
  export type FilialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * The data needed to create a Filial.
     */
    data: XOR<FilialCreateInput, FilialUncheckedCreateInput>
  }

  /**
   * Filial createMany
   */
  export type FilialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Filials.
     */
    data: FilialCreateManyInput | FilialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Filial update
   */
  export type FilialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * The data needed to update a Filial.
     */
    data: XOR<FilialUpdateInput, FilialUncheckedUpdateInput>
    /**
     * Choose, which Filial to update.
     */
    where: FilialWhereUniqueInput
  }

  /**
   * Filial updateMany
   */
  export type FilialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Filials.
     */
    data: XOR<FilialUpdateManyMutationInput, FilialUncheckedUpdateManyInput>
    /**
     * Filter which Filials to update
     */
    where?: FilialWhereInput
    /**
     * Limit how many Filials to update.
     */
    limit?: number
  }

  /**
   * Filial upsert
   */
  export type FilialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * The filter to search for the Filial to update in case it exists.
     */
    where: FilialWhereUniqueInput
    /**
     * In case the Filial found by the `where` argument doesn't exist, create a new Filial with this data.
     */
    create: XOR<FilialCreateInput, FilialUncheckedCreateInput>
    /**
     * In case the Filial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FilialUpdateInput, FilialUncheckedUpdateInput>
  }

  /**
   * Filial delete
   */
  export type FilialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    /**
     * Filter which Filial to delete.
     */
    where: FilialWhereUniqueInput
  }

  /**
   * Filial deleteMany
   */
  export type FilialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Filials to delete
     */
    where?: FilialWhereInput
    /**
     * Limit how many Filials to delete.
     */
    limit?: number
  }

  /**
   * Filial.notasFiscais
   */
  export type Filial$notasFiscaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    where?: NotasFiscalCabecalhoWhereInput
    orderBy?: NotasFiscalCabecalhoOrderByWithRelationInput | NotasFiscalCabecalhoOrderByWithRelationInput[]
    cursor?: NotasFiscalCabecalhoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotasFiscalCabecalhoScalarFieldEnum | NotasFiscalCabecalhoScalarFieldEnum[]
  }

  /**
   * Filial.vendedores
   */
  export type Filial$vendedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    where?: VendedorWhereInput
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    cursor?: VendedorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VendedorScalarFieldEnum | VendedorScalarFieldEnum[]
  }

  /**
   * Filial.rfvParameterSets
   */
  export type Filial$rfvParameterSetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    where?: RfvParameterSetWhereInput
    orderBy?: RfvParameterSetOrderByWithRelationInput | RfvParameterSetOrderByWithRelationInput[]
    cursor?: RfvParameterSetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RfvParameterSetScalarFieldEnum | RfvParameterSetScalarFieldEnum[]
  }

  /**
   * Filial.maquinasEstoque
   */
  export type Filial$maquinasEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    where?: MaquinaEstoqueWhereInput
    orderBy?: MaquinaEstoqueOrderByWithRelationInput | MaquinaEstoqueOrderByWithRelationInput[]
    cursor?: MaquinaEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaquinaEstoqueScalarFieldEnum | MaquinaEstoqueScalarFieldEnum[]
  }

  /**
   * Filial.receitasPeriodo
   */
  export type Filial$receitasPeriodoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    where?: ReceitaPeriodoWhereInput
    orderBy?: ReceitaPeriodoOrderByWithRelationInput | ReceitaPeriodoOrderByWithRelationInput[]
    cursor?: ReceitaPeriodoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaPeriodoScalarFieldEnum | ReceitaPeriodoScalarFieldEnum[]
  }

  /**
   * Filial.receitasTipoProduto
   */
  export type Filial$receitasTipoProdutoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    where?: ReceitaTipoProdutoWhereInput
    orderBy?: ReceitaTipoProdutoOrderByWithRelationInput | ReceitaTipoProdutoOrderByWithRelationInput[]
    cursor?: ReceitaTipoProdutoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaTipoProdutoScalarFieldEnum | ReceitaTipoProdutoScalarFieldEnum[]
  }

  /**
   * Filial.receitasProdutoModelo
   */
  export type Filial$receitasProdutoModeloArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    where?: ReceitaProdutoModeloWhereInput
    orderBy?: ReceitaProdutoModeloOrderByWithRelationInput | ReceitaProdutoModeloOrderByWithRelationInput[]
    cursor?: ReceitaProdutoModeloWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaProdutoModeloScalarFieldEnum | ReceitaProdutoModeloScalarFieldEnum[]
  }

  /**
   * Filial.crescimentoVendas
   */
  export type Filial$crescimentoVendasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    where?: CrescimentoVendasWhereInput
    orderBy?: CrescimentoVendasOrderByWithRelationInput | CrescimentoVendasOrderByWithRelationInput[]
    cursor?: CrescimentoVendasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CrescimentoVendasScalarFieldEnum | CrescimentoVendasScalarFieldEnum[]
  }

  /**
   * Filial.ticketsMedios
   */
  export type Filial$ticketsMediosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    where?: TicketMedioWhereInput
    orderBy?: TicketMedioOrderByWithRelationInput | TicketMedioOrderByWithRelationInput[]
    cursor?: TicketMedioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketMedioScalarFieldEnum | TicketMedioScalarFieldEnum[]
  }

  /**
   * Filial.itensPorNF
   */
  export type Filial$itensPorNFArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    where?: ItensPorNFWhereInput
    orderBy?: ItensPorNFOrderByWithRelationInput | ItensPorNFOrderByWithRelationInput[]
    cursor?: ItensPorNFWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItensPorNFScalarFieldEnum | ItensPorNFScalarFieldEnum[]
  }

  /**
   * Filial.sazonalidades
   */
  export type Filial$sazonalidadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    where?: SazonalidadeWhereInput
    orderBy?: SazonalidadeOrderByWithRelationInput | SazonalidadeOrderByWithRelationInput[]
    cursor?: SazonalidadeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SazonalidadeScalarFieldEnum | SazonalidadeScalarFieldEnum[]
  }

  /**
   * Filial.receitasLocalizacao
   */
  export type Filial$receitasLocalizacaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    where?: ReceitaLocalizacaoWhereInput
    orderBy?: ReceitaLocalizacaoOrderByWithRelationInput | ReceitaLocalizacaoOrderByWithRelationInput[]
    cursor?: ReceitaLocalizacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaLocalizacaoScalarFieldEnum | ReceitaLocalizacaoScalarFieldEnum[]
  }

  /**
   * Filial.receitasVendedor
   */
  export type Filial$receitasVendedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    where?: ReceitaVendedorWhereInput
    orderBy?: ReceitaVendedorOrderByWithRelationInput | ReceitaVendedorOrderByWithRelationInput[]
    cursor?: ReceitaVendedorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaVendedorScalarFieldEnum | ReceitaVendedorScalarFieldEnum[]
  }

  /**
   * Filial.estatisticasNotasFiscais
   */
  export type Filial$estatisticasNotasFiscaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    where?: EstatisticasNotasFiscaisWhereInput
    orderBy?: EstatisticasNotasFiscaisOrderByWithRelationInput | EstatisticasNotasFiscaisOrderByWithRelationInput[]
    cursor?: EstatisticasNotasFiscaisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EstatisticasNotasFiscaisScalarFieldEnum | EstatisticasNotasFiscaisScalarFieldEnum[]
  }

  /**
   * Filial.receitasVendedorDetalhadas
   */
  export type Filial$receitasVendedorDetalhadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    where?: ReceitaVendedorDetalhadaWhereInput
    orderBy?: ReceitaVendedorDetalhadaOrderByWithRelationInput | ReceitaVendedorDetalhadaOrderByWithRelationInput[]
    cursor?: ReceitaVendedorDetalhadaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaVendedorDetalhadaScalarFieldEnum | ReceitaVendedorDetalhadaScalarFieldEnum[]
  }

  /**
   * Filial.ticketsMediosVendedor
   */
  export type Filial$ticketsMediosVendedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    where?: TicketMedioVendedorWhereInput
    orderBy?: TicketMedioVendedorOrderByWithRelationInput | TicketMedioVendedorOrderByWithRelationInput[]
    cursor?: TicketMedioVendedorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketMedioVendedorScalarFieldEnum | TicketMedioVendedorScalarFieldEnum[]
  }

  /**
   * Filial.mixVendedores
   */
  export type Filial$mixVendedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    where?: MixVendedorWhereInput
    orderBy?: MixVendedorOrderByWithRelationInput | MixVendedorOrderByWithRelationInput[]
    cursor?: MixVendedorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MixVendedorScalarFieldEnum | MixVendedorScalarFieldEnum[]
  }

  /**
   * Filial.coberturaCarteiras
   */
  export type Filial$coberturaCarteirasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    where?: CoberturaCarteiraWhereInput
    orderBy?: CoberturaCarteiraOrderByWithRelationInput | CoberturaCarteiraOrderByWithRelationInput[]
    cursor?: CoberturaCarteiraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CoberturaCarteiraScalarFieldEnum | CoberturaCarteiraScalarFieldEnum[]
  }

  /**
   * Filial.rankingVendedores
   */
  export type Filial$rankingVendedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    where?: RankingVendedoresWhereInput
    orderBy?: RankingVendedoresOrderByWithRelationInput | RankingVendedoresOrderByWithRelationInput[]
    cursor?: RankingVendedoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RankingVendedoresScalarFieldEnum | RankingVendedoresScalarFieldEnum[]
  }

  /**
   * Filial.receitasFilial
   */
  export type Filial$receitasFilialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    where?: ReceitaFilialWhereInput
    orderBy?: ReceitaFilialOrderByWithRelationInput | ReceitaFilialOrderByWithRelationInput[]
    cursor?: ReceitaFilialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaFilialScalarFieldEnum | ReceitaFilialScalarFieldEnum[]
  }

  /**
   * Filial.mixFiliais
   */
  export type Filial$mixFiliaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    where?: MixFilialWhereInput
    orderBy?: MixFilialOrderByWithRelationInput | MixFilialOrderByWithRelationInput[]
    cursor?: MixFilialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MixFilialScalarFieldEnum | MixFilialScalarFieldEnum[]
  }

  /**
   * Filial.participacaoReceita
   */
  export type Filial$participacaoReceitaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    where?: ParticipacaoReceitaFilialWhereInput
    orderBy?: ParticipacaoReceitaFilialOrderByWithRelationInput | ParticipacaoReceitaFilialOrderByWithRelationInput[]
    cursor?: ParticipacaoReceitaFilialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ParticipacaoReceitaFilialScalarFieldEnum | ParticipacaoReceitaFilialScalarFieldEnum[]
  }

  /**
   * Filial.receitasRegioes
   */
  export type Filial$receitasRegioesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    where?: ReceitaFilialRegiaoWhereInput
    orderBy?: ReceitaFilialRegiaoOrderByWithRelationInput | ReceitaFilialRegiaoOrderByWithRelationInput[]
    cursor?: ReceitaFilialRegiaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaFilialRegiaoScalarFieldEnum | ReceitaFilialRegiaoScalarFieldEnum[]
  }

  /**
   * Filial without action
   */
  export type FilialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
  }


  /**
   * Model Vendedor
   */

  export type AggregateVendedor = {
    _count: VendedorCountAggregateOutputType | null
    _avg: VendedorAvgAggregateOutputType | null
    _sum: VendedorSumAggregateOutputType | null
    _min: VendedorMinAggregateOutputType | null
    _max: VendedorMaxAggregateOutputType | null
  }

  export type VendedorAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
  }

  export type VendedorSumAggregateOutputType = {
    id: number | null
    filialId: number | null
  }

  export type VendedorMinAggregateOutputType = {
    id: number | null
    nome: string | null
    cpf: string | null
    filialId: number | null
  }

  export type VendedorMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    cpf: string | null
    filialId: number | null
  }

  export type VendedorCountAggregateOutputType = {
    id: number
    nome: number
    cpf: number
    filialId: number
    _all: number
  }


  export type VendedorAvgAggregateInputType = {
    id?: true
    filialId?: true
  }

  export type VendedorSumAggregateInputType = {
    id?: true
    filialId?: true
  }

  export type VendedorMinAggregateInputType = {
    id?: true
    nome?: true
    cpf?: true
    filialId?: true
  }

  export type VendedorMaxAggregateInputType = {
    id?: true
    nome?: true
    cpf?: true
    filialId?: true
  }

  export type VendedorCountAggregateInputType = {
    id?: true
    nome?: true
    cpf?: true
    filialId?: true
    _all?: true
  }

  export type VendedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vendedor to aggregate.
     */
    where?: VendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendedors to fetch.
     */
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vendedors
    **/
    _count?: true | VendedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VendedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VendedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VendedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VendedorMaxAggregateInputType
  }

  export type GetVendedorAggregateType<T extends VendedorAggregateArgs> = {
        [P in keyof T & keyof AggregateVendedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVendedor[P]>
      : GetScalarType<T[P], AggregateVendedor[P]>
  }




  export type VendedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VendedorWhereInput
    orderBy?: VendedorOrderByWithAggregationInput | VendedorOrderByWithAggregationInput[]
    by: VendedorScalarFieldEnum[] | VendedorScalarFieldEnum
    having?: VendedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VendedorCountAggregateInputType | true
    _avg?: VendedorAvgAggregateInputType
    _sum?: VendedorSumAggregateInputType
    _min?: VendedorMinAggregateInputType
    _max?: VendedorMaxAggregateInputType
  }

  export type VendedorGroupByOutputType = {
    id: number
    nome: string
    cpf: string
    filialId: number | null
    _count: VendedorCountAggregateOutputType | null
    _avg: VendedorAvgAggregateOutputType | null
    _sum: VendedorSumAggregateOutputType | null
    _min: VendedorMinAggregateOutputType | null
    _max: VendedorMaxAggregateOutputType | null
  }

  type GetVendedorGroupByPayload<T extends VendedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VendedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VendedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VendedorGroupByOutputType[P]>
            : GetScalarType<T[P], VendedorGroupByOutputType[P]>
        }
      >
    >


  export type VendedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    cpf?: boolean
    filialId?: boolean
    notasFiscais?: boolean | Vendedor$notasFiscaisArgs<ExtArgs>
    receitasVendedor?: boolean | Vendedor$receitasVendedorArgs<ExtArgs>
    receitasDetalhadas?: boolean | Vendedor$receitasDetalhadasArgs<ExtArgs>
    ticketsMedios?: boolean | Vendedor$ticketsMediosArgs<ExtArgs>
    mixVendas?: boolean | Vendedor$mixVendasArgs<ExtArgs>
    coberturaCarteira?: boolean | Vendedor$coberturaCarteiraArgs<ExtArgs>
    rankings?: boolean | Vendedor$rankingsArgs<ExtArgs>
    filial?: boolean | Vendedor$filialArgs<ExtArgs>
    _count?: boolean | VendedorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vendedor"]>



  export type VendedorSelectScalar = {
    id?: boolean
    nome?: boolean
    cpf?: boolean
    filialId?: boolean
  }

  export type VendedorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "cpf" | "filialId", ExtArgs["result"]["vendedor"]>
  export type VendedorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notasFiscais?: boolean | Vendedor$notasFiscaisArgs<ExtArgs>
    receitasVendedor?: boolean | Vendedor$receitasVendedorArgs<ExtArgs>
    receitasDetalhadas?: boolean | Vendedor$receitasDetalhadasArgs<ExtArgs>
    ticketsMedios?: boolean | Vendedor$ticketsMediosArgs<ExtArgs>
    mixVendas?: boolean | Vendedor$mixVendasArgs<ExtArgs>
    coberturaCarteira?: boolean | Vendedor$coberturaCarteiraArgs<ExtArgs>
    rankings?: boolean | Vendedor$rankingsArgs<ExtArgs>
    filial?: boolean | Vendedor$filialArgs<ExtArgs>
    _count?: boolean | VendedorCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $VendedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Vendedor"
    objects: {
      notasFiscais: Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>[]
      receitasVendedor: Prisma.$ReceitaVendedorPayload<ExtArgs>[]
      receitasDetalhadas: Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>[]
      ticketsMedios: Prisma.$TicketMedioVendedorPayload<ExtArgs>[]
      mixVendas: Prisma.$MixVendedorPayload<ExtArgs>[]
      coberturaCarteira: Prisma.$CoberturaCarteiraPayload<ExtArgs>[]
      rankings: Prisma.$RankingVendedoresPayload<ExtArgs>[]
      filial: Prisma.$FilialPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      cpf: string
      filialId: number | null
    }, ExtArgs["result"]["vendedor"]>
    composites: {}
  }

  type VendedorGetPayload<S extends boolean | null | undefined | VendedorDefaultArgs> = $Result.GetResult<Prisma.$VendedorPayload, S>

  type VendedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VendedorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VendedorCountAggregateInputType | true
    }

  export interface VendedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vendedor'], meta: { name: 'Vendedor' } }
    /**
     * Find zero or one Vendedor that matches the filter.
     * @param {VendedorFindUniqueArgs} args - Arguments to find a Vendedor
     * @example
     * // Get one Vendedor
     * const vendedor = await prisma.vendedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VendedorFindUniqueArgs>(args: SelectSubset<T, VendedorFindUniqueArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Vendedor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VendedorFindUniqueOrThrowArgs} args - Arguments to find a Vendedor
     * @example
     * // Get one Vendedor
     * const vendedor = await prisma.vendedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VendedorFindUniqueOrThrowArgs>(args: SelectSubset<T, VendedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vendedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorFindFirstArgs} args - Arguments to find a Vendedor
     * @example
     * // Get one Vendedor
     * const vendedor = await prisma.vendedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VendedorFindFirstArgs>(args?: SelectSubset<T, VendedorFindFirstArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vendedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorFindFirstOrThrowArgs} args - Arguments to find a Vendedor
     * @example
     * // Get one Vendedor
     * const vendedor = await prisma.vendedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VendedorFindFirstOrThrowArgs>(args?: SelectSubset<T, VendedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Vendedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vendedors
     * const vendedors = await prisma.vendedor.findMany()
     * 
     * // Get first 10 Vendedors
     * const vendedors = await prisma.vendedor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vendedorWithIdOnly = await prisma.vendedor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VendedorFindManyArgs>(args?: SelectSubset<T, VendedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Vendedor.
     * @param {VendedorCreateArgs} args - Arguments to create a Vendedor.
     * @example
     * // Create one Vendedor
     * const Vendedor = await prisma.vendedor.create({
     *   data: {
     *     // ... data to create a Vendedor
     *   }
     * })
     * 
     */
    create<T extends VendedorCreateArgs>(args: SelectSubset<T, VendedorCreateArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Vendedors.
     * @param {VendedorCreateManyArgs} args - Arguments to create many Vendedors.
     * @example
     * // Create many Vendedors
     * const vendedor = await prisma.vendedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VendedorCreateManyArgs>(args?: SelectSubset<T, VendedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Vendedor.
     * @param {VendedorDeleteArgs} args - Arguments to delete one Vendedor.
     * @example
     * // Delete one Vendedor
     * const Vendedor = await prisma.vendedor.delete({
     *   where: {
     *     // ... filter to delete one Vendedor
     *   }
     * })
     * 
     */
    delete<T extends VendedorDeleteArgs>(args: SelectSubset<T, VendedorDeleteArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Vendedor.
     * @param {VendedorUpdateArgs} args - Arguments to update one Vendedor.
     * @example
     * // Update one Vendedor
     * const vendedor = await prisma.vendedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VendedorUpdateArgs>(args: SelectSubset<T, VendedorUpdateArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Vendedors.
     * @param {VendedorDeleteManyArgs} args - Arguments to filter Vendedors to delete.
     * @example
     * // Delete a few Vendedors
     * const { count } = await prisma.vendedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VendedorDeleteManyArgs>(args?: SelectSubset<T, VendedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vendedors
     * const vendedor = await prisma.vendedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VendedorUpdateManyArgs>(args: SelectSubset<T, VendedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Vendedor.
     * @param {VendedorUpsertArgs} args - Arguments to update or create a Vendedor.
     * @example
     * // Update or create a Vendedor
     * const vendedor = await prisma.vendedor.upsert({
     *   create: {
     *     // ... data to create a Vendedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vendedor we want to update
     *   }
     * })
     */
    upsert<T extends VendedorUpsertArgs>(args: SelectSubset<T, VendedorUpsertArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Vendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorCountArgs} args - Arguments to filter Vendedors to count.
     * @example
     * // Count the number of Vendedors
     * const count = await prisma.vendedor.count({
     *   where: {
     *     // ... the filter for the Vendedors we want to count
     *   }
     * })
    **/
    count<T extends VendedorCountArgs>(
      args?: Subset<T, VendedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VendedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VendedorAggregateArgs>(args: Subset<T, VendedorAggregateArgs>): Prisma.PrismaPromise<GetVendedorAggregateType<T>>

    /**
     * Group by Vendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VendedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VendedorGroupByArgs['orderBy'] }
        : { orderBy?: VendedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VendedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVendedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vendedor model
   */
  readonly fields: VendedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vendedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VendedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    notasFiscais<T extends Vendedor$notasFiscaisArgs<ExtArgs> = {}>(args?: Subset<T, Vendedor$notasFiscaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasVendedor<T extends Vendedor$receitasVendedorArgs<ExtArgs> = {}>(args?: Subset<T, Vendedor$receitasVendedorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasDetalhadas<T extends Vendedor$receitasDetalhadasArgs<ExtArgs> = {}>(args?: Subset<T, Vendedor$receitasDetalhadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticketsMedios<T extends Vendedor$ticketsMediosArgs<ExtArgs> = {}>(args?: Subset<T, Vendedor$ticketsMediosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mixVendas<T extends Vendedor$mixVendasArgs<ExtArgs> = {}>(args?: Subset<T, Vendedor$mixVendasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    coberturaCarteira<T extends Vendedor$coberturaCarteiraArgs<ExtArgs> = {}>(args?: Subset<T, Vendedor$coberturaCarteiraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rankings<T extends Vendedor$rankingsArgs<ExtArgs> = {}>(args?: Subset<T, Vendedor$rankingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    filial<T extends Vendedor$filialArgs<ExtArgs> = {}>(args?: Subset<T, Vendedor$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Vendedor model
   */
  interface VendedorFieldRefs {
    readonly id: FieldRef<"Vendedor", 'Int'>
    readonly nome: FieldRef<"Vendedor", 'String'>
    readonly cpf: FieldRef<"Vendedor", 'String'>
    readonly filialId: FieldRef<"Vendedor", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Vendedor findUnique
   */
  export type VendedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * Filter, which Vendedor to fetch.
     */
    where: VendedorWhereUniqueInput
  }

  /**
   * Vendedor findUniqueOrThrow
   */
  export type VendedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * Filter, which Vendedor to fetch.
     */
    where: VendedorWhereUniqueInput
  }

  /**
   * Vendedor findFirst
   */
  export type VendedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * Filter, which Vendedor to fetch.
     */
    where?: VendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendedors to fetch.
     */
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vendedors.
     */
    cursor?: VendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vendedors.
     */
    distinct?: VendedorScalarFieldEnum | VendedorScalarFieldEnum[]
  }

  /**
   * Vendedor findFirstOrThrow
   */
  export type VendedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * Filter, which Vendedor to fetch.
     */
    where?: VendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendedors to fetch.
     */
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vendedors.
     */
    cursor?: VendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vendedors.
     */
    distinct?: VendedorScalarFieldEnum | VendedorScalarFieldEnum[]
  }

  /**
   * Vendedor findMany
   */
  export type VendedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * Filter, which Vendedors to fetch.
     */
    where?: VendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendedors to fetch.
     */
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vendedors.
     */
    cursor?: VendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendedors.
     */
    skip?: number
    distinct?: VendedorScalarFieldEnum | VendedorScalarFieldEnum[]
  }

  /**
   * Vendedor create
   */
  export type VendedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * The data needed to create a Vendedor.
     */
    data: XOR<VendedorCreateInput, VendedorUncheckedCreateInput>
  }

  /**
   * Vendedor createMany
   */
  export type VendedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Vendedors.
     */
    data: VendedorCreateManyInput | VendedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Vendedor update
   */
  export type VendedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * The data needed to update a Vendedor.
     */
    data: XOR<VendedorUpdateInput, VendedorUncheckedUpdateInput>
    /**
     * Choose, which Vendedor to update.
     */
    where: VendedorWhereUniqueInput
  }

  /**
   * Vendedor updateMany
   */
  export type VendedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Vendedors.
     */
    data: XOR<VendedorUpdateManyMutationInput, VendedorUncheckedUpdateManyInput>
    /**
     * Filter which Vendedors to update
     */
    where?: VendedorWhereInput
    /**
     * Limit how many Vendedors to update.
     */
    limit?: number
  }

  /**
   * Vendedor upsert
   */
  export type VendedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * The filter to search for the Vendedor to update in case it exists.
     */
    where: VendedorWhereUniqueInput
    /**
     * In case the Vendedor found by the `where` argument doesn't exist, create a new Vendedor with this data.
     */
    create: XOR<VendedorCreateInput, VendedorUncheckedCreateInput>
    /**
     * In case the Vendedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VendedorUpdateInput, VendedorUncheckedUpdateInput>
  }

  /**
   * Vendedor delete
   */
  export type VendedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    /**
     * Filter which Vendedor to delete.
     */
    where: VendedorWhereUniqueInput
  }

  /**
   * Vendedor deleteMany
   */
  export type VendedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vendedors to delete
     */
    where?: VendedorWhereInput
    /**
     * Limit how many Vendedors to delete.
     */
    limit?: number
  }

  /**
   * Vendedor.notasFiscais
   */
  export type Vendedor$notasFiscaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    where?: NotasFiscalCabecalhoWhereInput
    orderBy?: NotasFiscalCabecalhoOrderByWithRelationInput | NotasFiscalCabecalhoOrderByWithRelationInput[]
    cursor?: NotasFiscalCabecalhoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotasFiscalCabecalhoScalarFieldEnum | NotasFiscalCabecalhoScalarFieldEnum[]
  }

  /**
   * Vendedor.receitasVendedor
   */
  export type Vendedor$receitasVendedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    where?: ReceitaVendedorWhereInput
    orderBy?: ReceitaVendedorOrderByWithRelationInput | ReceitaVendedorOrderByWithRelationInput[]
    cursor?: ReceitaVendedorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaVendedorScalarFieldEnum | ReceitaVendedorScalarFieldEnum[]
  }

  /**
   * Vendedor.receitasDetalhadas
   */
  export type Vendedor$receitasDetalhadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    where?: ReceitaVendedorDetalhadaWhereInput
    orderBy?: ReceitaVendedorDetalhadaOrderByWithRelationInput | ReceitaVendedorDetalhadaOrderByWithRelationInput[]
    cursor?: ReceitaVendedorDetalhadaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaVendedorDetalhadaScalarFieldEnum | ReceitaVendedorDetalhadaScalarFieldEnum[]
  }

  /**
   * Vendedor.ticketsMedios
   */
  export type Vendedor$ticketsMediosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    where?: TicketMedioVendedorWhereInput
    orderBy?: TicketMedioVendedorOrderByWithRelationInput | TicketMedioVendedorOrderByWithRelationInput[]
    cursor?: TicketMedioVendedorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketMedioVendedorScalarFieldEnum | TicketMedioVendedorScalarFieldEnum[]
  }

  /**
   * Vendedor.mixVendas
   */
  export type Vendedor$mixVendasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    where?: MixVendedorWhereInput
    orderBy?: MixVendedorOrderByWithRelationInput | MixVendedorOrderByWithRelationInput[]
    cursor?: MixVendedorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MixVendedorScalarFieldEnum | MixVendedorScalarFieldEnum[]
  }

  /**
   * Vendedor.coberturaCarteira
   */
  export type Vendedor$coberturaCarteiraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    where?: CoberturaCarteiraWhereInput
    orderBy?: CoberturaCarteiraOrderByWithRelationInput | CoberturaCarteiraOrderByWithRelationInput[]
    cursor?: CoberturaCarteiraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CoberturaCarteiraScalarFieldEnum | CoberturaCarteiraScalarFieldEnum[]
  }

  /**
   * Vendedor.rankings
   */
  export type Vendedor$rankingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    where?: RankingVendedoresWhereInput
    orderBy?: RankingVendedoresOrderByWithRelationInput | RankingVendedoresOrderByWithRelationInput[]
    cursor?: RankingVendedoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RankingVendedoresScalarFieldEnum | RankingVendedoresScalarFieldEnum[]
  }

  /**
   * Vendedor.filial
   */
  export type Vendedor$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * Vendedor without action
   */
  export type VendedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
  }


  /**
   * Model Produto
   */

  export type AggregateProduto = {
    _count: ProdutoCountAggregateOutputType | null
    _avg: ProdutoAvgAggregateOutputType | null
    _sum: ProdutoSumAggregateOutputType | null
    _min: ProdutoMinAggregateOutputType | null
    _max: ProdutoMaxAggregateOutputType | null
  }

  export type ProdutoAvgAggregateOutputType = {
    id: number | null
    preco: Decimal | null
  }

  export type ProdutoSumAggregateOutputType = {
    id: number | null
    preco: Decimal | null
  }

  export type ProdutoMinAggregateOutputType = {
    id: number | null
    descricao: string | null
    tipo: string | null
    preco: Decimal | null
  }

  export type ProdutoMaxAggregateOutputType = {
    id: number | null
    descricao: string | null
    tipo: string | null
    preco: Decimal | null
  }

  export type ProdutoCountAggregateOutputType = {
    id: number
    descricao: number
    tipo: number
    preco: number
    _all: number
  }


  export type ProdutoAvgAggregateInputType = {
    id?: true
    preco?: true
  }

  export type ProdutoSumAggregateInputType = {
    id?: true
    preco?: true
  }

  export type ProdutoMinAggregateInputType = {
    id?: true
    descricao?: true
    tipo?: true
    preco?: true
  }

  export type ProdutoMaxAggregateInputType = {
    id?: true
    descricao?: true
    tipo?: true
    preco?: true
  }

  export type ProdutoCountAggregateInputType = {
    id?: true
    descricao?: true
    tipo?: true
    preco?: true
    _all?: true
  }

  export type ProdutoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Produto to aggregate.
     */
    where?: ProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Produtos to fetch.
     */
    orderBy?: ProdutoOrderByWithRelationInput | ProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Produtos
    **/
    _count?: true | ProdutoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProdutoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProdutoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProdutoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProdutoMaxAggregateInputType
  }

  export type GetProdutoAggregateType<T extends ProdutoAggregateArgs> = {
        [P in keyof T & keyof AggregateProduto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduto[P]>
      : GetScalarType<T[P], AggregateProduto[P]>
  }




  export type ProdutoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProdutoWhereInput
    orderBy?: ProdutoOrderByWithAggregationInput | ProdutoOrderByWithAggregationInput[]
    by: ProdutoScalarFieldEnum[] | ProdutoScalarFieldEnum
    having?: ProdutoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProdutoCountAggregateInputType | true
    _avg?: ProdutoAvgAggregateInputType
    _sum?: ProdutoSumAggregateInputType
    _min?: ProdutoMinAggregateInputType
    _max?: ProdutoMaxAggregateInputType
  }

  export type ProdutoGroupByOutputType = {
    id: number
    descricao: string
    tipo: string
    preco: Decimal
    _count: ProdutoCountAggregateOutputType | null
    _avg: ProdutoAvgAggregateOutputType | null
    _sum: ProdutoSumAggregateOutputType | null
    _min: ProdutoMinAggregateOutputType | null
    _max: ProdutoMaxAggregateOutputType | null
  }

  type GetProdutoGroupByPayload<T extends ProdutoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProdutoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProdutoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProdutoGroupByOutputType[P]>
            : GetScalarType<T[P], ProdutoGroupByOutputType[P]>
        }
      >
    >


  export type ProdutoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descricao?: boolean
    tipo?: boolean
    preco?: boolean
    maquinasEstoque?: boolean | Produto$maquinasEstoqueArgs<ExtArgs>
    notasFiscaisItens?: boolean | Produto$notasFiscaisItensArgs<ExtArgs>
    receitasTipo?: boolean | Produto$receitasTipoArgs<ExtArgs>
    receitasModelo?: boolean | Produto$receitasModeloArgs<ExtArgs>
    associacoesA?: boolean | Produto$associacoesAArgs<ExtArgs>
    associacoesB?: boolean | Produto$associacoesBArgs<ExtArgs>
    _count?: boolean | ProdutoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produto"]>



  export type ProdutoSelectScalar = {
    id?: boolean
    descricao?: boolean
    tipo?: boolean
    preco?: boolean
  }

  export type ProdutoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "descricao" | "tipo" | "preco", ExtArgs["result"]["produto"]>
  export type ProdutoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maquinasEstoque?: boolean | Produto$maquinasEstoqueArgs<ExtArgs>
    notasFiscaisItens?: boolean | Produto$notasFiscaisItensArgs<ExtArgs>
    receitasTipo?: boolean | Produto$receitasTipoArgs<ExtArgs>
    receitasModelo?: boolean | Produto$receitasModeloArgs<ExtArgs>
    associacoesA?: boolean | Produto$associacoesAArgs<ExtArgs>
    associacoesB?: boolean | Produto$associacoesBArgs<ExtArgs>
    _count?: boolean | ProdutoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ProdutoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Produto"
    objects: {
      maquinasEstoque: Prisma.$MaquinaEstoquePayload<ExtArgs>[]
      notasFiscaisItens: Prisma.$NotaFiscalItemPayload<ExtArgs>[]
      receitasTipo: Prisma.$ReceitaTipoProdutoPayload<ExtArgs>[]
      receitasModelo: Prisma.$ReceitaProdutoModeloPayload<ExtArgs>[]
      associacoesA: Prisma.$AssociacaoProdutoPayload<ExtArgs>[]
      associacoesB: Prisma.$AssociacaoProdutoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descricao: string
      tipo: string
      preco: Prisma.Decimal
    }, ExtArgs["result"]["produto"]>
    composites: {}
  }

  type ProdutoGetPayload<S extends boolean | null | undefined | ProdutoDefaultArgs> = $Result.GetResult<Prisma.$ProdutoPayload, S>

  type ProdutoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProdutoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProdutoCountAggregateInputType | true
    }

  export interface ProdutoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Produto'], meta: { name: 'Produto' } }
    /**
     * Find zero or one Produto that matches the filter.
     * @param {ProdutoFindUniqueArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProdutoFindUniqueArgs>(args: SelectSubset<T, ProdutoFindUniqueArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Produto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProdutoFindUniqueOrThrowArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProdutoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProdutoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Produto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoFindFirstArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProdutoFindFirstArgs>(args?: SelectSubset<T, ProdutoFindFirstArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Produto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoFindFirstOrThrowArgs} args - Arguments to find a Produto
     * @example
     * // Get one Produto
     * const produto = await prisma.produto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProdutoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProdutoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Produtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Produtos
     * const produtos = await prisma.produto.findMany()
     * 
     * // Get first 10 Produtos
     * const produtos = await prisma.produto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const produtoWithIdOnly = await prisma.produto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProdutoFindManyArgs>(args?: SelectSubset<T, ProdutoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Produto.
     * @param {ProdutoCreateArgs} args - Arguments to create a Produto.
     * @example
     * // Create one Produto
     * const Produto = await prisma.produto.create({
     *   data: {
     *     // ... data to create a Produto
     *   }
     * })
     * 
     */
    create<T extends ProdutoCreateArgs>(args: SelectSubset<T, ProdutoCreateArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Produtos.
     * @param {ProdutoCreateManyArgs} args - Arguments to create many Produtos.
     * @example
     * // Create many Produtos
     * const produto = await prisma.produto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProdutoCreateManyArgs>(args?: SelectSubset<T, ProdutoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Produto.
     * @param {ProdutoDeleteArgs} args - Arguments to delete one Produto.
     * @example
     * // Delete one Produto
     * const Produto = await prisma.produto.delete({
     *   where: {
     *     // ... filter to delete one Produto
     *   }
     * })
     * 
     */
    delete<T extends ProdutoDeleteArgs>(args: SelectSubset<T, ProdutoDeleteArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Produto.
     * @param {ProdutoUpdateArgs} args - Arguments to update one Produto.
     * @example
     * // Update one Produto
     * const produto = await prisma.produto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProdutoUpdateArgs>(args: SelectSubset<T, ProdutoUpdateArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Produtos.
     * @param {ProdutoDeleteManyArgs} args - Arguments to filter Produtos to delete.
     * @example
     * // Delete a few Produtos
     * const { count } = await prisma.produto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProdutoDeleteManyArgs>(args?: SelectSubset<T, ProdutoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Produtos
     * const produto = await prisma.produto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProdutoUpdateManyArgs>(args: SelectSubset<T, ProdutoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Produto.
     * @param {ProdutoUpsertArgs} args - Arguments to update or create a Produto.
     * @example
     * // Update or create a Produto
     * const produto = await prisma.produto.upsert({
     *   create: {
     *     // ... data to create a Produto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Produto we want to update
     *   }
     * })
     */
    upsert<T extends ProdutoUpsertArgs>(args: SelectSubset<T, ProdutoUpsertArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoCountArgs} args - Arguments to filter Produtos to count.
     * @example
     * // Count the number of Produtos
     * const count = await prisma.produto.count({
     *   where: {
     *     // ... the filter for the Produtos we want to count
     *   }
     * })
    **/
    count<T extends ProdutoCountArgs>(
      args?: Subset<T, ProdutoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProdutoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Produto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProdutoAggregateArgs>(args: Subset<T, ProdutoAggregateArgs>): Prisma.PrismaPromise<GetProdutoAggregateType<T>>

    /**
     * Group by Produto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdutoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProdutoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProdutoGroupByArgs['orderBy'] }
        : { orderBy?: ProdutoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProdutoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProdutoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Produto model
   */
  readonly fields: ProdutoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Produto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProdutoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    maquinasEstoque<T extends Produto$maquinasEstoqueArgs<ExtArgs> = {}>(args?: Subset<T, Produto$maquinasEstoqueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notasFiscaisItens<T extends Produto$notasFiscaisItensArgs<ExtArgs> = {}>(args?: Subset<T, Produto$notasFiscaisItensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasTipo<T extends Produto$receitasTipoArgs<ExtArgs> = {}>(args?: Subset<T, Produto$receitasTipoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receitasModelo<T extends Produto$receitasModeloArgs<ExtArgs> = {}>(args?: Subset<T, Produto$receitasModeloArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    associacoesA<T extends Produto$associacoesAArgs<ExtArgs> = {}>(args?: Subset<T, Produto$associacoesAArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    associacoesB<T extends Produto$associacoesBArgs<ExtArgs> = {}>(args?: Subset<T, Produto$associacoesBArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssociacaoProdutoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Produto model
   */
  interface ProdutoFieldRefs {
    readonly id: FieldRef<"Produto", 'Int'>
    readonly descricao: FieldRef<"Produto", 'String'>
    readonly tipo: FieldRef<"Produto", 'String'>
    readonly preco: FieldRef<"Produto", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Produto findUnique
   */
  export type ProdutoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * Filter, which Produto to fetch.
     */
    where: ProdutoWhereUniqueInput
  }

  /**
   * Produto findUniqueOrThrow
   */
  export type ProdutoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * Filter, which Produto to fetch.
     */
    where: ProdutoWhereUniqueInput
  }

  /**
   * Produto findFirst
   */
  export type ProdutoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * Filter, which Produto to fetch.
     */
    where?: ProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Produtos to fetch.
     */
    orderBy?: ProdutoOrderByWithRelationInput | ProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Produtos.
     */
    cursor?: ProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Produtos.
     */
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * Produto findFirstOrThrow
   */
  export type ProdutoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * Filter, which Produto to fetch.
     */
    where?: ProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Produtos to fetch.
     */
    orderBy?: ProdutoOrderByWithRelationInput | ProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Produtos.
     */
    cursor?: ProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Produtos.
     */
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * Produto findMany
   */
  export type ProdutoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * Filter, which Produtos to fetch.
     */
    where?: ProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Produtos to fetch.
     */
    orderBy?: ProdutoOrderByWithRelationInput | ProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Produtos.
     */
    cursor?: ProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Produtos.
     */
    skip?: number
    distinct?: ProdutoScalarFieldEnum | ProdutoScalarFieldEnum[]
  }

  /**
   * Produto create
   */
  export type ProdutoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * The data needed to create a Produto.
     */
    data: XOR<ProdutoCreateInput, ProdutoUncheckedCreateInput>
  }

  /**
   * Produto createMany
   */
  export type ProdutoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Produtos.
     */
    data: ProdutoCreateManyInput | ProdutoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Produto update
   */
  export type ProdutoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * The data needed to update a Produto.
     */
    data: XOR<ProdutoUpdateInput, ProdutoUncheckedUpdateInput>
    /**
     * Choose, which Produto to update.
     */
    where: ProdutoWhereUniqueInput
  }

  /**
   * Produto updateMany
   */
  export type ProdutoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Produtos.
     */
    data: XOR<ProdutoUpdateManyMutationInput, ProdutoUncheckedUpdateManyInput>
    /**
     * Filter which Produtos to update
     */
    where?: ProdutoWhereInput
    /**
     * Limit how many Produtos to update.
     */
    limit?: number
  }

  /**
   * Produto upsert
   */
  export type ProdutoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * The filter to search for the Produto to update in case it exists.
     */
    where: ProdutoWhereUniqueInput
    /**
     * In case the Produto found by the `where` argument doesn't exist, create a new Produto with this data.
     */
    create: XOR<ProdutoCreateInput, ProdutoUncheckedCreateInput>
    /**
     * In case the Produto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProdutoUpdateInput, ProdutoUncheckedUpdateInput>
  }

  /**
   * Produto delete
   */
  export type ProdutoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    /**
     * Filter which Produto to delete.
     */
    where: ProdutoWhereUniqueInput
  }

  /**
   * Produto deleteMany
   */
  export type ProdutoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Produtos to delete
     */
    where?: ProdutoWhereInput
    /**
     * Limit how many Produtos to delete.
     */
    limit?: number
  }

  /**
   * Produto.maquinasEstoque
   */
  export type Produto$maquinasEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    where?: MaquinaEstoqueWhereInput
    orderBy?: MaquinaEstoqueOrderByWithRelationInput | MaquinaEstoqueOrderByWithRelationInput[]
    cursor?: MaquinaEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaquinaEstoqueScalarFieldEnum | MaquinaEstoqueScalarFieldEnum[]
  }

  /**
   * Produto.notasFiscaisItens
   */
  export type Produto$notasFiscaisItensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    where?: NotaFiscalItemWhereInput
    orderBy?: NotaFiscalItemOrderByWithRelationInput | NotaFiscalItemOrderByWithRelationInput[]
    cursor?: NotaFiscalItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotaFiscalItemScalarFieldEnum | NotaFiscalItemScalarFieldEnum[]
  }

  /**
   * Produto.receitasTipo
   */
  export type Produto$receitasTipoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    where?: ReceitaTipoProdutoWhereInput
    orderBy?: ReceitaTipoProdutoOrderByWithRelationInput | ReceitaTipoProdutoOrderByWithRelationInput[]
    cursor?: ReceitaTipoProdutoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaTipoProdutoScalarFieldEnum | ReceitaTipoProdutoScalarFieldEnum[]
  }

  /**
   * Produto.receitasModelo
   */
  export type Produto$receitasModeloArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    where?: ReceitaProdutoModeloWhereInput
    orderBy?: ReceitaProdutoModeloOrderByWithRelationInput | ReceitaProdutoModeloOrderByWithRelationInput[]
    cursor?: ReceitaProdutoModeloWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceitaProdutoModeloScalarFieldEnum | ReceitaProdutoModeloScalarFieldEnum[]
  }

  /**
   * Produto.associacoesA
   */
  export type Produto$associacoesAArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    where?: AssociacaoProdutoWhereInput
    orderBy?: AssociacaoProdutoOrderByWithRelationInput | AssociacaoProdutoOrderByWithRelationInput[]
    cursor?: AssociacaoProdutoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssociacaoProdutoScalarFieldEnum | AssociacaoProdutoScalarFieldEnum[]
  }

  /**
   * Produto.associacoesB
   */
  export type Produto$associacoesBArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssociacaoProduto
     */
    select?: AssociacaoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssociacaoProduto
     */
    omit?: AssociacaoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssociacaoProdutoInclude<ExtArgs> | null
    where?: AssociacaoProdutoWhereInput
    orderBy?: AssociacaoProdutoOrderByWithRelationInput | AssociacaoProdutoOrderByWithRelationInput[]
    cursor?: AssociacaoProdutoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssociacaoProdutoScalarFieldEnum | AssociacaoProdutoScalarFieldEnum[]
  }

  /**
   * Produto without action
   */
  export type ProdutoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
  }


  /**
   * Model MaquinaEstoque
   */

  export type AggregateMaquinaEstoque = {
    _count: MaquinaEstoqueCountAggregateOutputType | null
    _avg: MaquinaEstoqueAvgAggregateOutputType | null
    _sum: MaquinaEstoqueSumAggregateOutputType | null
    _min: MaquinaEstoqueMinAggregateOutputType | null
    _max: MaquinaEstoqueMaxAggregateOutputType | null
  }

  export type MaquinaEstoqueAvgAggregateOutputType = {
    produtoId: number | null
    filialId: number | null
  }

  export type MaquinaEstoqueSumAggregateOutputType = {
    produtoId: number | null
    filialId: number | null
  }

  export type MaquinaEstoqueMinAggregateOutputType = {
    Chassi: string | null
    produtoId: number | null
    filialId: number | null
    Status: string | null
  }

  export type MaquinaEstoqueMaxAggregateOutputType = {
    Chassi: string | null
    produtoId: number | null
    filialId: number | null
    Status: string | null
  }

  export type MaquinaEstoqueCountAggregateOutputType = {
    Chassi: number
    produtoId: number
    filialId: number
    Status: number
    _all: number
  }


  export type MaquinaEstoqueAvgAggregateInputType = {
    produtoId?: true
    filialId?: true
  }

  export type MaquinaEstoqueSumAggregateInputType = {
    produtoId?: true
    filialId?: true
  }

  export type MaquinaEstoqueMinAggregateInputType = {
    Chassi?: true
    produtoId?: true
    filialId?: true
    Status?: true
  }

  export type MaquinaEstoqueMaxAggregateInputType = {
    Chassi?: true
    produtoId?: true
    filialId?: true
    Status?: true
  }

  export type MaquinaEstoqueCountAggregateInputType = {
    Chassi?: true
    produtoId?: true
    filialId?: true
    Status?: true
    _all?: true
  }

  export type MaquinaEstoqueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaquinaEstoque to aggregate.
     */
    where?: MaquinaEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaquinaEstoques to fetch.
     */
    orderBy?: MaquinaEstoqueOrderByWithRelationInput | MaquinaEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaquinaEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaquinaEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaquinaEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MaquinaEstoques
    **/
    _count?: true | MaquinaEstoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaquinaEstoqueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaquinaEstoqueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaquinaEstoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaquinaEstoqueMaxAggregateInputType
  }

  export type GetMaquinaEstoqueAggregateType<T extends MaquinaEstoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateMaquinaEstoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaquinaEstoque[P]>
      : GetScalarType<T[P], AggregateMaquinaEstoque[P]>
  }




  export type MaquinaEstoqueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaquinaEstoqueWhereInput
    orderBy?: MaquinaEstoqueOrderByWithAggregationInput | MaquinaEstoqueOrderByWithAggregationInput[]
    by: MaquinaEstoqueScalarFieldEnum[] | MaquinaEstoqueScalarFieldEnum
    having?: MaquinaEstoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaquinaEstoqueCountAggregateInputType | true
    _avg?: MaquinaEstoqueAvgAggregateInputType
    _sum?: MaquinaEstoqueSumAggregateInputType
    _min?: MaquinaEstoqueMinAggregateInputType
    _max?: MaquinaEstoqueMaxAggregateInputType
  }

  export type MaquinaEstoqueGroupByOutputType = {
    Chassi: string
    produtoId: number
    filialId: number | null
    Status: string | null
    _count: MaquinaEstoqueCountAggregateOutputType | null
    _avg: MaquinaEstoqueAvgAggregateOutputType | null
    _sum: MaquinaEstoqueSumAggregateOutputType | null
    _min: MaquinaEstoqueMinAggregateOutputType | null
    _max: MaquinaEstoqueMaxAggregateOutputType | null
  }

  type GetMaquinaEstoqueGroupByPayload<T extends MaquinaEstoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaquinaEstoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaquinaEstoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaquinaEstoqueGroupByOutputType[P]>
            : GetScalarType<T[P], MaquinaEstoqueGroupByOutputType[P]>
        }
      >
    >


  export type MaquinaEstoqueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Chassi?: boolean
    produtoId?: boolean
    filialId?: boolean
    Status?: boolean
    produto?: boolean | ProdutoDefaultArgs<ExtArgs>
    filial?: boolean | MaquinaEstoque$filialArgs<ExtArgs>
    Notas_Fiscais_Itens?: boolean | MaquinaEstoque$Notas_Fiscais_ItensArgs<ExtArgs>
    _count?: boolean | MaquinaEstoqueCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["maquinaEstoque"]>



  export type MaquinaEstoqueSelectScalar = {
    Chassi?: boolean
    produtoId?: boolean
    filialId?: boolean
    Status?: boolean
  }

  export type MaquinaEstoqueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Chassi" | "produtoId" | "filialId" | "Status", ExtArgs["result"]["maquinaEstoque"]>
  export type MaquinaEstoqueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    produto?: boolean | ProdutoDefaultArgs<ExtArgs>
    filial?: boolean | MaquinaEstoque$filialArgs<ExtArgs>
    Notas_Fiscais_Itens?: boolean | MaquinaEstoque$Notas_Fiscais_ItensArgs<ExtArgs>
    _count?: boolean | MaquinaEstoqueCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $MaquinaEstoquePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MaquinaEstoque"
    objects: {
      produto: Prisma.$ProdutoPayload<ExtArgs>
      filial: Prisma.$FilialPayload<ExtArgs> | null
      Notas_Fiscais_Itens: Prisma.$NotaFiscalItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      Chassi: string
      produtoId: number
      filialId: number | null
      Status: string | null
    }, ExtArgs["result"]["maquinaEstoque"]>
    composites: {}
  }

  type MaquinaEstoqueGetPayload<S extends boolean | null | undefined | MaquinaEstoqueDefaultArgs> = $Result.GetResult<Prisma.$MaquinaEstoquePayload, S>

  type MaquinaEstoqueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MaquinaEstoqueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MaquinaEstoqueCountAggregateInputType | true
    }

  export interface MaquinaEstoqueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MaquinaEstoque'], meta: { name: 'MaquinaEstoque' } }
    /**
     * Find zero or one MaquinaEstoque that matches the filter.
     * @param {MaquinaEstoqueFindUniqueArgs} args - Arguments to find a MaquinaEstoque
     * @example
     * // Get one MaquinaEstoque
     * const maquinaEstoque = await prisma.maquinaEstoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaquinaEstoqueFindUniqueArgs>(args: SelectSubset<T, MaquinaEstoqueFindUniqueArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MaquinaEstoque that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MaquinaEstoqueFindUniqueOrThrowArgs} args - Arguments to find a MaquinaEstoque
     * @example
     * // Get one MaquinaEstoque
     * const maquinaEstoque = await prisma.maquinaEstoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaquinaEstoqueFindUniqueOrThrowArgs>(args: SelectSubset<T, MaquinaEstoqueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MaquinaEstoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaquinaEstoqueFindFirstArgs} args - Arguments to find a MaquinaEstoque
     * @example
     * // Get one MaquinaEstoque
     * const maquinaEstoque = await prisma.maquinaEstoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaquinaEstoqueFindFirstArgs>(args?: SelectSubset<T, MaquinaEstoqueFindFirstArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MaquinaEstoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaquinaEstoqueFindFirstOrThrowArgs} args - Arguments to find a MaquinaEstoque
     * @example
     * // Get one MaquinaEstoque
     * const maquinaEstoque = await prisma.maquinaEstoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaquinaEstoqueFindFirstOrThrowArgs>(args?: SelectSubset<T, MaquinaEstoqueFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MaquinaEstoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaquinaEstoqueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MaquinaEstoques
     * const maquinaEstoques = await prisma.maquinaEstoque.findMany()
     * 
     * // Get first 10 MaquinaEstoques
     * const maquinaEstoques = await prisma.maquinaEstoque.findMany({ take: 10 })
     * 
     * // Only select the `Chassi`
     * const maquinaEstoqueWithChassiOnly = await prisma.maquinaEstoque.findMany({ select: { Chassi: true } })
     * 
     */
    findMany<T extends MaquinaEstoqueFindManyArgs>(args?: SelectSubset<T, MaquinaEstoqueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MaquinaEstoque.
     * @param {MaquinaEstoqueCreateArgs} args - Arguments to create a MaquinaEstoque.
     * @example
     * // Create one MaquinaEstoque
     * const MaquinaEstoque = await prisma.maquinaEstoque.create({
     *   data: {
     *     // ... data to create a MaquinaEstoque
     *   }
     * })
     * 
     */
    create<T extends MaquinaEstoqueCreateArgs>(args: SelectSubset<T, MaquinaEstoqueCreateArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MaquinaEstoques.
     * @param {MaquinaEstoqueCreateManyArgs} args - Arguments to create many MaquinaEstoques.
     * @example
     * // Create many MaquinaEstoques
     * const maquinaEstoque = await prisma.maquinaEstoque.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaquinaEstoqueCreateManyArgs>(args?: SelectSubset<T, MaquinaEstoqueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MaquinaEstoque.
     * @param {MaquinaEstoqueDeleteArgs} args - Arguments to delete one MaquinaEstoque.
     * @example
     * // Delete one MaquinaEstoque
     * const MaquinaEstoque = await prisma.maquinaEstoque.delete({
     *   where: {
     *     // ... filter to delete one MaquinaEstoque
     *   }
     * })
     * 
     */
    delete<T extends MaquinaEstoqueDeleteArgs>(args: SelectSubset<T, MaquinaEstoqueDeleteArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MaquinaEstoque.
     * @param {MaquinaEstoqueUpdateArgs} args - Arguments to update one MaquinaEstoque.
     * @example
     * // Update one MaquinaEstoque
     * const maquinaEstoque = await prisma.maquinaEstoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaquinaEstoqueUpdateArgs>(args: SelectSubset<T, MaquinaEstoqueUpdateArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MaquinaEstoques.
     * @param {MaquinaEstoqueDeleteManyArgs} args - Arguments to filter MaquinaEstoques to delete.
     * @example
     * // Delete a few MaquinaEstoques
     * const { count } = await prisma.maquinaEstoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaquinaEstoqueDeleteManyArgs>(args?: SelectSubset<T, MaquinaEstoqueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaquinaEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaquinaEstoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MaquinaEstoques
     * const maquinaEstoque = await prisma.maquinaEstoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaquinaEstoqueUpdateManyArgs>(args: SelectSubset<T, MaquinaEstoqueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MaquinaEstoque.
     * @param {MaquinaEstoqueUpsertArgs} args - Arguments to update or create a MaquinaEstoque.
     * @example
     * // Update or create a MaquinaEstoque
     * const maquinaEstoque = await prisma.maquinaEstoque.upsert({
     *   create: {
     *     // ... data to create a MaquinaEstoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MaquinaEstoque we want to update
     *   }
     * })
     */
    upsert<T extends MaquinaEstoqueUpsertArgs>(args: SelectSubset<T, MaquinaEstoqueUpsertArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MaquinaEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaquinaEstoqueCountArgs} args - Arguments to filter MaquinaEstoques to count.
     * @example
     * // Count the number of MaquinaEstoques
     * const count = await prisma.maquinaEstoque.count({
     *   where: {
     *     // ... the filter for the MaquinaEstoques we want to count
     *   }
     * })
    **/
    count<T extends MaquinaEstoqueCountArgs>(
      args?: Subset<T, MaquinaEstoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaquinaEstoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MaquinaEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaquinaEstoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaquinaEstoqueAggregateArgs>(args: Subset<T, MaquinaEstoqueAggregateArgs>): Prisma.PrismaPromise<GetMaquinaEstoqueAggregateType<T>>

    /**
     * Group by MaquinaEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaquinaEstoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaquinaEstoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaquinaEstoqueGroupByArgs['orderBy'] }
        : { orderBy?: MaquinaEstoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaquinaEstoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaquinaEstoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MaquinaEstoque model
   */
  readonly fields: MaquinaEstoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MaquinaEstoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaquinaEstoqueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    produto<T extends ProdutoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProdutoDefaultArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    filial<T extends MaquinaEstoque$filialArgs<ExtArgs> = {}>(args?: Subset<T, MaquinaEstoque$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Notas_Fiscais_Itens<T extends MaquinaEstoque$Notas_Fiscais_ItensArgs<ExtArgs> = {}>(args?: Subset<T, MaquinaEstoque$Notas_Fiscais_ItensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MaquinaEstoque model
   */
  interface MaquinaEstoqueFieldRefs {
    readonly Chassi: FieldRef<"MaquinaEstoque", 'String'>
    readonly produtoId: FieldRef<"MaquinaEstoque", 'Int'>
    readonly filialId: FieldRef<"MaquinaEstoque", 'Int'>
    readonly Status: FieldRef<"MaquinaEstoque", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MaquinaEstoque findUnique
   */
  export type MaquinaEstoqueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MaquinaEstoque to fetch.
     */
    where: MaquinaEstoqueWhereUniqueInput
  }

  /**
   * MaquinaEstoque findUniqueOrThrow
   */
  export type MaquinaEstoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MaquinaEstoque to fetch.
     */
    where: MaquinaEstoqueWhereUniqueInput
  }

  /**
   * MaquinaEstoque findFirst
   */
  export type MaquinaEstoqueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MaquinaEstoque to fetch.
     */
    where?: MaquinaEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaquinaEstoques to fetch.
     */
    orderBy?: MaquinaEstoqueOrderByWithRelationInput | MaquinaEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaquinaEstoques.
     */
    cursor?: MaquinaEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaquinaEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaquinaEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaquinaEstoques.
     */
    distinct?: MaquinaEstoqueScalarFieldEnum | MaquinaEstoqueScalarFieldEnum[]
  }

  /**
   * MaquinaEstoque findFirstOrThrow
   */
  export type MaquinaEstoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MaquinaEstoque to fetch.
     */
    where?: MaquinaEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaquinaEstoques to fetch.
     */
    orderBy?: MaquinaEstoqueOrderByWithRelationInput | MaquinaEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaquinaEstoques.
     */
    cursor?: MaquinaEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaquinaEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaquinaEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaquinaEstoques.
     */
    distinct?: MaquinaEstoqueScalarFieldEnum | MaquinaEstoqueScalarFieldEnum[]
  }

  /**
   * MaquinaEstoque findMany
   */
  export type MaquinaEstoqueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MaquinaEstoques to fetch.
     */
    where?: MaquinaEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaquinaEstoques to fetch.
     */
    orderBy?: MaquinaEstoqueOrderByWithRelationInput | MaquinaEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MaquinaEstoques.
     */
    cursor?: MaquinaEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaquinaEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaquinaEstoques.
     */
    skip?: number
    distinct?: MaquinaEstoqueScalarFieldEnum | MaquinaEstoqueScalarFieldEnum[]
  }

  /**
   * MaquinaEstoque create
   */
  export type MaquinaEstoqueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a MaquinaEstoque.
     */
    data: XOR<MaquinaEstoqueCreateInput, MaquinaEstoqueUncheckedCreateInput>
  }

  /**
   * MaquinaEstoque createMany
   */
  export type MaquinaEstoqueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MaquinaEstoques.
     */
    data: MaquinaEstoqueCreateManyInput | MaquinaEstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MaquinaEstoque update
   */
  export type MaquinaEstoqueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a MaquinaEstoque.
     */
    data: XOR<MaquinaEstoqueUpdateInput, MaquinaEstoqueUncheckedUpdateInput>
    /**
     * Choose, which MaquinaEstoque to update.
     */
    where: MaquinaEstoqueWhereUniqueInput
  }

  /**
   * MaquinaEstoque updateMany
   */
  export type MaquinaEstoqueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MaquinaEstoques.
     */
    data: XOR<MaquinaEstoqueUpdateManyMutationInput, MaquinaEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which MaquinaEstoques to update
     */
    where?: MaquinaEstoqueWhereInput
    /**
     * Limit how many MaquinaEstoques to update.
     */
    limit?: number
  }

  /**
   * MaquinaEstoque upsert
   */
  export type MaquinaEstoqueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the MaquinaEstoque to update in case it exists.
     */
    where: MaquinaEstoqueWhereUniqueInput
    /**
     * In case the MaquinaEstoque found by the `where` argument doesn't exist, create a new MaquinaEstoque with this data.
     */
    create: XOR<MaquinaEstoqueCreateInput, MaquinaEstoqueUncheckedCreateInput>
    /**
     * In case the MaquinaEstoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaquinaEstoqueUpdateInput, MaquinaEstoqueUncheckedUpdateInput>
  }

  /**
   * MaquinaEstoque delete
   */
  export type MaquinaEstoqueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    /**
     * Filter which MaquinaEstoque to delete.
     */
    where: MaquinaEstoqueWhereUniqueInput
  }

  /**
   * MaquinaEstoque deleteMany
   */
  export type MaquinaEstoqueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaquinaEstoques to delete
     */
    where?: MaquinaEstoqueWhereInput
    /**
     * Limit how many MaquinaEstoques to delete.
     */
    limit?: number
  }

  /**
   * MaquinaEstoque.filial
   */
  export type MaquinaEstoque$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * MaquinaEstoque.Notas_Fiscais_Itens
   */
  export type MaquinaEstoque$Notas_Fiscais_ItensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    where?: NotaFiscalItemWhereInput
    orderBy?: NotaFiscalItemOrderByWithRelationInput | NotaFiscalItemOrderByWithRelationInput[]
    cursor?: NotaFiscalItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotaFiscalItemScalarFieldEnum | NotaFiscalItemScalarFieldEnum[]
  }

  /**
   * MaquinaEstoque without action
   */
  export type MaquinaEstoqueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
  }


  /**
   * Model NotasFiscalCabecalho
   */

  export type AggregateNotasFiscalCabecalho = {
    _count: NotasFiscalCabecalhoCountAggregateOutputType | null
    _avg: NotasFiscalCabecalhoAvgAggregateOutputType | null
    _sum: NotasFiscalCabecalhoSumAggregateOutputType | null
    _min: NotasFiscalCabecalhoMinAggregateOutputType | null
    _max: NotasFiscalCabecalhoMaxAggregateOutputType | null
  }

  export type NotasFiscalCabecalhoAvgAggregateOutputType = {
    id: number | null
    numeroNota: number | null
    valorTotal: Decimal | null
    filialId: number | null
    clienteId: number | null
    vendedorId: number | null
  }

  export type NotasFiscalCabecalhoSumAggregateOutputType = {
    id: number | null
    numeroNota: number | null
    valorTotal: Decimal | null
    filialId: number | null
    clienteId: number | null
    vendedorId: number | null
  }

  export type NotasFiscalCabecalhoMinAggregateOutputType = {
    id: number | null
    numeroNota: number | null
    dataEmissao: Date | null
    valorTotal: Decimal | null
    filialId: number | null
    clienteId: number | null
    vendedorId: number | null
  }

  export type NotasFiscalCabecalhoMaxAggregateOutputType = {
    id: number | null
    numeroNota: number | null
    dataEmissao: Date | null
    valorTotal: Decimal | null
    filialId: number | null
    clienteId: number | null
    vendedorId: number | null
  }

  export type NotasFiscalCabecalhoCountAggregateOutputType = {
    id: number
    numeroNota: number
    dataEmissao: number
    valorTotal: number
    filialId: number
    clienteId: number
    vendedorId: number
    _all: number
  }


  export type NotasFiscalCabecalhoAvgAggregateInputType = {
    id?: true
    numeroNota?: true
    valorTotal?: true
    filialId?: true
    clienteId?: true
    vendedorId?: true
  }

  export type NotasFiscalCabecalhoSumAggregateInputType = {
    id?: true
    numeroNota?: true
    valorTotal?: true
    filialId?: true
    clienteId?: true
    vendedorId?: true
  }

  export type NotasFiscalCabecalhoMinAggregateInputType = {
    id?: true
    numeroNota?: true
    dataEmissao?: true
    valorTotal?: true
    filialId?: true
    clienteId?: true
    vendedorId?: true
  }

  export type NotasFiscalCabecalhoMaxAggregateInputType = {
    id?: true
    numeroNota?: true
    dataEmissao?: true
    valorTotal?: true
    filialId?: true
    clienteId?: true
    vendedorId?: true
  }

  export type NotasFiscalCabecalhoCountAggregateInputType = {
    id?: true
    numeroNota?: true
    dataEmissao?: true
    valorTotal?: true
    filialId?: true
    clienteId?: true
    vendedorId?: true
    _all?: true
  }

  export type NotasFiscalCabecalhoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NotasFiscalCabecalho to aggregate.
     */
    where?: NotasFiscalCabecalhoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotasFiscalCabecalhos to fetch.
     */
    orderBy?: NotasFiscalCabecalhoOrderByWithRelationInput | NotasFiscalCabecalhoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotasFiscalCabecalhoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotasFiscalCabecalhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotasFiscalCabecalhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NotasFiscalCabecalhos
    **/
    _count?: true | NotasFiscalCabecalhoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotasFiscalCabecalhoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotasFiscalCabecalhoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotasFiscalCabecalhoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotasFiscalCabecalhoMaxAggregateInputType
  }

  export type GetNotasFiscalCabecalhoAggregateType<T extends NotasFiscalCabecalhoAggregateArgs> = {
        [P in keyof T & keyof AggregateNotasFiscalCabecalho]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotasFiscalCabecalho[P]>
      : GetScalarType<T[P], AggregateNotasFiscalCabecalho[P]>
  }




  export type NotasFiscalCabecalhoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotasFiscalCabecalhoWhereInput
    orderBy?: NotasFiscalCabecalhoOrderByWithAggregationInput | NotasFiscalCabecalhoOrderByWithAggregationInput[]
    by: NotasFiscalCabecalhoScalarFieldEnum[] | NotasFiscalCabecalhoScalarFieldEnum
    having?: NotasFiscalCabecalhoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotasFiscalCabecalhoCountAggregateInputType | true
    _avg?: NotasFiscalCabecalhoAvgAggregateInputType
    _sum?: NotasFiscalCabecalhoSumAggregateInputType
    _min?: NotasFiscalCabecalhoMinAggregateInputType
    _max?: NotasFiscalCabecalhoMaxAggregateInputType
  }

  export type NotasFiscalCabecalhoGroupByOutputType = {
    id: number
    numeroNota: number
    dataEmissao: Date
    valorTotal: Decimal
    filialId: number | null
    clienteId: number | null
    vendedorId: number | null
    _count: NotasFiscalCabecalhoCountAggregateOutputType | null
    _avg: NotasFiscalCabecalhoAvgAggregateOutputType | null
    _sum: NotasFiscalCabecalhoSumAggregateOutputType | null
    _min: NotasFiscalCabecalhoMinAggregateOutputType | null
    _max: NotasFiscalCabecalhoMaxAggregateOutputType | null
  }

  type GetNotasFiscalCabecalhoGroupByPayload<T extends NotasFiscalCabecalhoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotasFiscalCabecalhoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotasFiscalCabecalhoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotasFiscalCabecalhoGroupByOutputType[P]>
            : GetScalarType<T[P], NotasFiscalCabecalhoGroupByOutputType[P]>
        }
      >
    >


  export type NotasFiscalCabecalhoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    numeroNota?: boolean
    dataEmissao?: boolean
    valorTotal?: boolean
    filialId?: boolean
    clienteId?: boolean
    vendedorId?: boolean
    filial?: boolean | NotasFiscalCabecalho$filialArgs<ExtArgs>
    cliente?: boolean | NotasFiscalCabecalho$clienteArgs<ExtArgs>
    vendedor?: boolean | NotasFiscalCabecalho$vendedorArgs<ExtArgs>
    itens?: boolean | NotasFiscalCabecalho$itensArgs<ExtArgs>
    _count?: boolean | NotasFiscalCabecalhoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notasFiscalCabecalho"]>



  export type NotasFiscalCabecalhoSelectScalar = {
    id?: boolean
    numeroNota?: boolean
    dataEmissao?: boolean
    valorTotal?: boolean
    filialId?: boolean
    clienteId?: boolean
    vendedorId?: boolean
  }

  export type NotasFiscalCabecalhoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "numeroNota" | "dataEmissao" | "valorTotal" | "filialId" | "clienteId" | "vendedorId", ExtArgs["result"]["notasFiscalCabecalho"]>
  export type NotasFiscalCabecalhoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | NotasFiscalCabecalho$filialArgs<ExtArgs>
    cliente?: boolean | NotasFiscalCabecalho$clienteArgs<ExtArgs>
    vendedor?: boolean | NotasFiscalCabecalho$vendedorArgs<ExtArgs>
    itens?: boolean | NotasFiscalCabecalho$itensArgs<ExtArgs>
    _count?: boolean | NotasFiscalCabecalhoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $NotasFiscalCabecalhoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "NotasFiscalCabecalho"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      cliente: Prisma.$ClientePayload<ExtArgs> | null
      vendedor: Prisma.$VendedorPayload<ExtArgs> | null
      itens: Prisma.$NotaFiscalItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      numeroNota: number
      dataEmissao: Date
      valorTotal: Prisma.Decimal
      filialId: number | null
      clienteId: number | null
      vendedorId: number | null
    }, ExtArgs["result"]["notasFiscalCabecalho"]>
    composites: {}
  }

  type NotasFiscalCabecalhoGetPayload<S extends boolean | null | undefined | NotasFiscalCabecalhoDefaultArgs> = $Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload, S>

  type NotasFiscalCabecalhoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotasFiscalCabecalhoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotasFiscalCabecalhoCountAggregateInputType | true
    }

  export interface NotasFiscalCabecalhoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NotasFiscalCabecalho'], meta: { name: 'NotasFiscalCabecalho' } }
    /**
     * Find zero or one NotasFiscalCabecalho that matches the filter.
     * @param {NotasFiscalCabecalhoFindUniqueArgs} args - Arguments to find a NotasFiscalCabecalho
     * @example
     * // Get one NotasFiscalCabecalho
     * const notasFiscalCabecalho = await prisma.notasFiscalCabecalho.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotasFiscalCabecalhoFindUniqueArgs>(args: SelectSubset<T, NotasFiscalCabecalhoFindUniqueArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one NotasFiscalCabecalho that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotasFiscalCabecalhoFindUniqueOrThrowArgs} args - Arguments to find a NotasFiscalCabecalho
     * @example
     * // Get one NotasFiscalCabecalho
     * const notasFiscalCabecalho = await prisma.notasFiscalCabecalho.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotasFiscalCabecalhoFindUniqueOrThrowArgs>(args: SelectSubset<T, NotasFiscalCabecalhoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NotasFiscalCabecalho that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotasFiscalCabecalhoFindFirstArgs} args - Arguments to find a NotasFiscalCabecalho
     * @example
     * // Get one NotasFiscalCabecalho
     * const notasFiscalCabecalho = await prisma.notasFiscalCabecalho.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotasFiscalCabecalhoFindFirstArgs>(args?: SelectSubset<T, NotasFiscalCabecalhoFindFirstArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NotasFiscalCabecalho that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotasFiscalCabecalhoFindFirstOrThrowArgs} args - Arguments to find a NotasFiscalCabecalho
     * @example
     * // Get one NotasFiscalCabecalho
     * const notasFiscalCabecalho = await prisma.notasFiscalCabecalho.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotasFiscalCabecalhoFindFirstOrThrowArgs>(args?: SelectSubset<T, NotasFiscalCabecalhoFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more NotasFiscalCabecalhos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotasFiscalCabecalhoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NotasFiscalCabecalhos
     * const notasFiscalCabecalhos = await prisma.notasFiscalCabecalho.findMany()
     * 
     * // Get first 10 NotasFiscalCabecalhos
     * const notasFiscalCabecalhos = await prisma.notasFiscalCabecalho.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notasFiscalCabecalhoWithIdOnly = await prisma.notasFiscalCabecalho.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotasFiscalCabecalhoFindManyArgs>(args?: SelectSubset<T, NotasFiscalCabecalhoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a NotasFiscalCabecalho.
     * @param {NotasFiscalCabecalhoCreateArgs} args - Arguments to create a NotasFiscalCabecalho.
     * @example
     * // Create one NotasFiscalCabecalho
     * const NotasFiscalCabecalho = await prisma.notasFiscalCabecalho.create({
     *   data: {
     *     // ... data to create a NotasFiscalCabecalho
     *   }
     * })
     * 
     */
    create<T extends NotasFiscalCabecalhoCreateArgs>(args: SelectSubset<T, NotasFiscalCabecalhoCreateArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many NotasFiscalCabecalhos.
     * @param {NotasFiscalCabecalhoCreateManyArgs} args - Arguments to create many NotasFiscalCabecalhos.
     * @example
     * // Create many NotasFiscalCabecalhos
     * const notasFiscalCabecalho = await prisma.notasFiscalCabecalho.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotasFiscalCabecalhoCreateManyArgs>(args?: SelectSubset<T, NotasFiscalCabecalhoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a NotasFiscalCabecalho.
     * @param {NotasFiscalCabecalhoDeleteArgs} args - Arguments to delete one NotasFiscalCabecalho.
     * @example
     * // Delete one NotasFiscalCabecalho
     * const NotasFiscalCabecalho = await prisma.notasFiscalCabecalho.delete({
     *   where: {
     *     // ... filter to delete one NotasFiscalCabecalho
     *   }
     * })
     * 
     */
    delete<T extends NotasFiscalCabecalhoDeleteArgs>(args: SelectSubset<T, NotasFiscalCabecalhoDeleteArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one NotasFiscalCabecalho.
     * @param {NotasFiscalCabecalhoUpdateArgs} args - Arguments to update one NotasFiscalCabecalho.
     * @example
     * // Update one NotasFiscalCabecalho
     * const notasFiscalCabecalho = await prisma.notasFiscalCabecalho.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotasFiscalCabecalhoUpdateArgs>(args: SelectSubset<T, NotasFiscalCabecalhoUpdateArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more NotasFiscalCabecalhos.
     * @param {NotasFiscalCabecalhoDeleteManyArgs} args - Arguments to filter NotasFiscalCabecalhos to delete.
     * @example
     * // Delete a few NotasFiscalCabecalhos
     * const { count } = await prisma.notasFiscalCabecalho.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotasFiscalCabecalhoDeleteManyArgs>(args?: SelectSubset<T, NotasFiscalCabecalhoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NotasFiscalCabecalhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotasFiscalCabecalhoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NotasFiscalCabecalhos
     * const notasFiscalCabecalho = await prisma.notasFiscalCabecalho.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotasFiscalCabecalhoUpdateManyArgs>(args: SelectSubset<T, NotasFiscalCabecalhoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one NotasFiscalCabecalho.
     * @param {NotasFiscalCabecalhoUpsertArgs} args - Arguments to update or create a NotasFiscalCabecalho.
     * @example
     * // Update or create a NotasFiscalCabecalho
     * const notasFiscalCabecalho = await prisma.notasFiscalCabecalho.upsert({
     *   create: {
     *     // ... data to create a NotasFiscalCabecalho
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NotasFiscalCabecalho we want to update
     *   }
     * })
     */
    upsert<T extends NotasFiscalCabecalhoUpsertArgs>(args: SelectSubset<T, NotasFiscalCabecalhoUpsertArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of NotasFiscalCabecalhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotasFiscalCabecalhoCountArgs} args - Arguments to filter NotasFiscalCabecalhos to count.
     * @example
     * // Count the number of NotasFiscalCabecalhos
     * const count = await prisma.notasFiscalCabecalho.count({
     *   where: {
     *     // ... the filter for the NotasFiscalCabecalhos we want to count
     *   }
     * })
    **/
    count<T extends NotasFiscalCabecalhoCountArgs>(
      args?: Subset<T, NotasFiscalCabecalhoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotasFiscalCabecalhoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NotasFiscalCabecalho.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotasFiscalCabecalhoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotasFiscalCabecalhoAggregateArgs>(args: Subset<T, NotasFiscalCabecalhoAggregateArgs>): Prisma.PrismaPromise<GetNotasFiscalCabecalhoAggregateType<T>>

    /**
     * Group by NotasFiscalCabecalho.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotasFiscalCabecalhoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotasFiscalCabecalhoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotasFiscalCabecalhoGroupByArgs['orderBy'] }
        : { orderBy?: NotasFiscalCabecalhoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotasFiscalCabecalhoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotasFiscalCabecalhoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the NotasFiscalCabecalho model
   */
  readonly fields: NotasFiscalCabecalhoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for NotasFiscalCabecalho.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotasFiscalCabecalhoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends NotasFiscalCabecalho$filialArgs<ExtArgs> = {}>(args?: Subset<T, NotasFiscalCabecalho$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cliente<T extends NotasFiscalCabecalho$clienteArgs<ExtArgs> = {}>(args?: Subset<T, NotasFiscalCabecalho$clienteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends NotasFiscalCabecalho$vendedorArgs<ExtArgs> = {}>(args?: Subset<T, NotasFiscalCabecalho$vendedorArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    itens<T extends NotasFiscalCabecalho$itensArgs<ExtArgs> = {}>(args?: Subset<T, NotasFiscalCabecalho$itensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the NotasFiscalCabecalho model
   */
  interface NotasFiscalCabecalhoFieldRefs {
    readonly id: FieldRef<"NotasFiscalCabecalho", 'Int'>
    readonly numeroNota: FieldRef<"NotasFiscalCabecalho", 'Int'>
    readonly dataEmissao: FieldRef<"NotasFiscalCabecalho", 'DateTime'>
    readonly valorTotal: FieldRef<"NotasFiscalCabecalho", 'Decimal'>
    readonly filialId: FieldRef<"NotasFiscalCabecalho", 'Int'>
    readonly clienteId: FieldRef<"NotasFiscalCabecalho", 'Int'>
    readonly vendedorId: FieldRef<"NotasFiscalCabecalho", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * NotasFiscalCabecalho findUnique
   */
  export type NotasFiscalCabecalhoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * Filter, which NotasFiscalCabecalho to fetch.
     */
    where: NotasFiscalCabecalhoWhereUniqueInput
  }

  /**
   * NotasFiscalCabecalho findUniqueOrThrow
   */
  export type NotasFiscalCabecalhoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * Filter, which NotasFiscalCabecalho to fetch.
     */
    where: NotasFiscalCabecalhoWhereUniqueInput
  }

  /**
   * NotasFiscalCabecalho findFirst
   */
  export type NotasFiscalCabecalhoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * Filter, which NotasFiscalCabecalho to fetch.
     */
    where?: NotasFiscalCabecalhoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotasFiscalCabecalhos to fetch.
     */
    orderBy?: NotasFiscalCabecalhoOrderByWithRelationInput | NotasFiscalCabecalhoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NotasFiscalCabecalhos.
     */
    cursor?: NotasFiscalCabecalhoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotasFiscalCabecalhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotasFiscalCabecalhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NotasFiscalCabecalhos.
     */
    distinct?: NotasFiscalCabecalhoScalarFieldEnum | NotasFiscalCabecalhoScalarFieldEnum[]
  }

  /**
   * NotasFiscalCabecalho findFirstOrThrow
   */
  export type NotasFiscalCabecalhoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * Filter, which NotasFiscalCabecalho to fetch.
     */
    where?: NotasFiscalCabecalhoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotasFiscalCabecalhos to fetch.
     */
    orderBy?: NotasFiscalCabecalhoOrderByWithRelationInput | NotasFiscalCabecalhoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NotasFiscalCabecalhos.
     */
    cursor?: NotasFiscalCabecalhoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotasFiscalCabecalhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotasFiscalCabecalhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NotasFiscalCabecalhos.
     */
    distinct?: NotasFiscalCabecalhoScalarFieldEnum | NotasFiscalCabecalhoScalarFieldEnum[]
  }

  /**
   * NotasFiscalCabecalho findMany
   */
  export type NotasFiscalCabecalhoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * Filter, which NotasFiscalCabecalhos to fetch.
     */
    where?: NotasFiscalCabecalhoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotasFiscalCabecalhos to fetch.
     */
    orderBy?: NotasFiscalCabecalhoOrderByWithRelationInput | NotasFiscalCabecalhoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NotasFiscalCabecalhos.
     */
    cursor?: NotasFiscalCabecalhoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotasFiscalCabecalhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotasFiscalCabecalhos.
     */
    skip?: number
    distinct?: NotasFiscalCabecalhoScalarFieldEnum | NotasFiscalCabecalhoScalarFieldEnum[]
  }

  /**
   * NotasFiscalCabecalho create
   */
  export type NotasFiscalCabecalhoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * The data needed to create a NotasFiscalCabecalho.
     */
    data: XOR<NotasFiscalCabecalhoCreateInput, NotasFiscalCabecalhoUncheckedCreateInput>
  }

  /**
   * NotasFiscalCabecalho createMany
   */
  export type NotasFiscalCabecalhoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many NotasFiscalCabecalhos.
     */
    data: NotasFiscalCabecalhoCreateManyInput | NotasFiscalCabecalhoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NotasFiscalCabecalho update
   */
  export type NotasFiscalCabecalhoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * The data needed to update a NotasFiscalCabecalho.
     */
    data: XOR<NotasFiscalCabecalhoUpdateInput, NotasFiscalCabecalhoUncheckedUpdateInput>
    /**
     * Choose, which NotasFiscalCabecalho to update.
     */
    where: NotasFiscalCabecalhoWhereUniqueInput
  }

  /**
   * NotasFiscalCabecalho updateMany
   */
  export type NotasFiscalCabecalhoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update NotasFiscalCabecalhos.
     */
    data: XOR<NotasFiscalCabecalhoUpdateManyMutationInput, NotasFiscalCabecalhoUncheckedUpdateManyInput>
    /**
     * Filter which NotasFiscalCabecalhos to update
     */
    where?: NotasFiscalCabecalhoWhereInput
    /**
     * Limit how many NotasFiscalCabecalhos to update.
     */
    limit?: number
  }

  /**
   * NotasFiscalCabecalho upsert
   */
  export type NotasFiscalCabecalhoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * The filter to search for the NotasFiscalCabecalho to update in case it exists.
     */
    where: NotasFiscalCabecalhoWhereUniqueInput
    /**
     * In case the NotasFiscalCabecalho found by the `where` argument doesn't exist, create a new NotasFiscalCabecalho with this data.
     */
    create: XOR<NotasFiscalCabecalhoCreateInput, NotasFiscalCabecalhoUncheckedCreateInput>
    /**
     * In case the NotasFiscalCabecalho was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotasFiscalCabecalhoUpdateInput, NotasFiscalCabecalhoUncheckedUpdateInput>
  }

  /**
   * NotasFiscalCabecalho delete
   */
  export type NotasFiscalCabecalhoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
    /**
     * Filter which NotasFiscalCabecalho to delete.
     */
    where: NotasFiscalCabecalhoWhereUniqueInput
  }

  /**
   * NotasFiscalCabecalho deleteMany
   */
  export type NotasFiscalCabecalhoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NotasFiscalCabecalhos to delete
     */
    where?: NotasFiscalCabecalhoWhereInput
    /**
     * Limit how many NotasFiscalCabecalhos to delete.
     */
    limit?: number
  }

  /**
   * NotasFiscalCabecalho.filial
   */
  export type NotasFiscalCabecalho$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * NotasFiscalCabecalho.cliente
   */
  export type NotasFiscalCabecalho$clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    where?: ClienteWhereInput
  }

  /**
   * NotasFiscalCabecalho.vendedor
   */
  export type NotasFiscalCabecalho$vendedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VendedorInclude<ExtArgs> | null
    where?: VendedorWhereInput
  }

  /**
   * NotasFiscalCabecalho.itens
   */
  export type NotasFiscalCabecalho$itensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    where?: NotaFiscalItemWhereInput
    orderBy?: NotaFiscalItemOrderByWithRelationInput | NotaFiscalItemOrderByWithRelationInput[]
    cursor?: NotaFiscalItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotaFiscalItemScalarFieldEnum | NotaFiscalItemScalarFieldEnum[]
  }

  /**
   * NotasFiscalCabecalho without action
   */
  export type NotasFiscalCabecalhoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotasFiscalCabecalho
     */
    select?: NotasFiscalCabecalhoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotasFiscalCabecalho
     */
    omit?: NotasFiscalCabecalhoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotasFiscalCabecalhoInclude<ExtArgs> | null
  }


  /**
   * Model NotaFiscalItem
   */

  export type AggregateNotaFiscalItem = {
    _count: NotaFiscalItemCountAggregateOutputType | null
    _avg: NotaFiscalItemAvgAggregateOutputType | null
    _sum: NotaFiscalItemSumAggregateOutputType | null
    _min: NotaFiscalItemMinAggregateOutputType | null
    _max: NotaFiscalItemMaxAggregateOutputType | null
  }

  export type NotaFiscalItemAvgAggregateOutputType = {
    id: number | null
    notaFiscalId: number | null
    produtoId: number | null
    Quantidade: Decimal | null
    valorUnitario: Decimal | null
    valorTotalItem: Decimal | null
  }

  export type NotaFiscalItemSumAggregateOutputType = {
    id: number | null
    notaFiscalId: number | null
    produtoId: number | null
    Quantidade: Decimal | null
    valorUnitario: Decimal | null
    valorTotalItem: Decimal | null
  }

  export type NotaFiscalItemMinAggregateOutputType = {
    id: number | null
    notaFiscalId: number | null
    produtoId: number | null
    Quantidade: Decimal | null
    valorUnitario: Decimal | null
    valorTotalItem: Decimal | null
    Chassi: string | null
  }

  export type NotaFiscalItemMaxAggregateOutputType = {
    id: number | null
    notaFiscalId: number | null
    produtoId: number | null
    Quantidade: Decimal | null
    valorUnitario: Decimal | null
    valorTotalItem: Decimal | null
    Chassi: string | null
  }

  export type NotaFiscalItemCountAggregateOutputType = {
    id: number
    notaFiscalId: number
    produtoId: number
    Quantidade: number
    valorUnitario: number
    valorTotalItem: number
    Chassi: number
    _all: number
  }


  export type NotaFiscalItemAvgAggregateInputType = {
    id?: true
    notaFiscalId?: true
    produtoId?: true
    Quantidade?: true
    valorUnitario?: true
    valorTotalItem?: true
  }

  export type NotaFiscalItemSumAggregateInputType = {
    id?: true
    notaFiscalId?: true
    produtoId?: true
    Quantidade?: true
    valorUnitario?: true
    valorTotalItem?: true
  }

  export type NotaFiscalItemMinAggregateInputType = {
    id?: true
    notaFiscalId?: true
    produtoId?: true
    Quantidade?: true
    valorUnitario?: true
    valorTotalItem?: true
    Chassi?: true
  }

  export type NotaFiscalItemMaxAggregateInputType = {
    id?: true
    notaFiscalId?: true
    produtoId?: true
    Quantidade?: true
    valorUnitario?: true
    valorTotalItem?: true
    Chassi?: true
  }

  export type NotaFiscalItemCountAggregateInputType = {
    id?: true
    notaFiscalId?: true
    produtoId?: true
    Quantidade?: true
    valorUnitario?: true
    valorTotalItem?: true
    Chassi?: true
    _all?: true
  }

  export type NotaFiscalItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NotaFiscalItem to aggregate.
     */
    where?: NotaFiscalItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotaFiscalItems to fetch.
     */
    orderBy?: NotaFiscalItemOrderByWithRelationInput | NotaFiscalItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotaFiscalItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotaFiscalItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotaFiscalItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NotaFiscalItems
    **/
    _count?: true | NotaFiscalItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotaFiscalItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotaFiscalItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotaFiscalItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotaFiscalItemMaxAggregateInputType
  }

  export type GetNotaFiscalItemAggregateType<T extends NotaFiscalItemAggregateArgs> = {
        [P in keyof T & keyof AggregateNotaFiscalItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotaFiscalItem[P]>
      : GetScalarType<T[P], AggregateNotaFiscalItem[P]>
  }




  export type NotaFiscalItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotaFiscalItemWhereInput
    orderBy?: NotaFiscalItemOrderByWithAggregationInput | NotaFiscalItemOrderByWithAggregationInput[]
    by: NotaFiscalItemScalarFieldEnum[] | NotaFiscalItemScalarFieldEnum
    having?: NotaFiscalItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotaFiscalItemCountAggregateInputType | true
    _avg?: NotaFiscalItemAvgAggregateInputType
    _sum?: NotaFiscalItemSumAggregateInputType
    _min?: NotaFiscalItemMinAggregateInputType
    _max?: NotaFiscalItemMaxAggregateInputType
  }

  export type NotaFiscalItemGroupByOutputType = {
    id: number
    notaFiscalId: number
    produtoId: number
    Quantidade: Decimal
    valorUnitario: Decimal
    valorTotalItem: Decimal
    Chassi: string | null
    _count: NotaFiscalItemCountAggregateOutputType | null
    _avg: NotaFiscalItemAvgAggregateOutputType | null
    _sum: NotaFiscalItemSumAggregateOutputType | null
    _min: NotaFiscalItemMinAggregateOutputType | null
    _max: NotaFiscalItemMaxAggregateOutputType | null
  }

  type GetNotaFiscalItemGroupByPayload<T extends NotaFiscalItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotaFiscalItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotaFiscalItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotaFiscalItemGroupByOutputType[P]>
            : GetScalarType<T[P], NotaFiscalItemGroupByOutputType[P]>
        }
      >
    >


  export type NotaFiscalItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    notaFiscalId?: boolean
    produtoId?: boolean
    Quantidade?: boolean
    valorUnitario?: boolean
    valorTotalItem?: boolean
    Chassi?: boolean
    Maquinas_Estoque?: boolean | NotaFiscalItem$Maquinas_EstoqueArgs<ExtArgs>
    notaFiscal?: boolean | NotasFiscalCabecalhoDefaultArgs<ExtArgs>
    produto?: boolean | ProdutoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notaFiscalItem"]>



  export type NotaFiscalItemSelectScalar = {
    id?: boolean
    notaFiscalId?: boolean
    produtoId?: boolean
    Quantidade?: boolean
    valorUnitario?: boolean
    valorTotalItem?: boolean
    Chassi?: boolean
  }

  export type NotaFiscalItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "notaFiscalId" | "produtoId" | "Quantidade" | "valorUnitario" | "valorTotalItem" | "Chassi", ExtArgs["result"]["notaFiscalItem"]>
  export type NotaFiscalItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Maquinas_Estoque?: boolean | NotaFiscalItem$Maquinas_EstoqueArgs<ExtArgs>
    notaFiscal?: boolean | NotasFiscalCabecalhoDefaultArgs<ExtArgs>
    produto?: boolean | ProdutoDefaultArgs<ExtArgs>
  }

  export type $NotaFiscalItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "NotaFiscalItem"
    objects: {
      Maquinas_Estoque: Prisma.$MaquinaEstoquePayload<ExtArgs> | null
      notaFiscal: Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>
      produto: Prisma.$ProdutoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      notaFiscalId: number
      produtoId: number
      Quantidade: Prisma.Decimal
      valorUnitario: Prisma.Decimal
      valorTotalItem: Prisma.Decimal
      Chassi: string | null
    }, ExtArgs["result"]["notaFiscalItem"]>
    composites: {}
  }

  type NotaFiscalItemGetPayload<S extends boolean | null | undefined | NotaFiscalItemDefaultArgs> = $Result.GetResult<Prisma.$NotaFiscalItemPayload, S>

  type NotaFiscalItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotaFiscalItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotaFiscalItemCountAggregateInputType | true
    }

  export interface NotaFiscalItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NotaFiscalItem'], meta: { name: 'NotaFiscalItem' } }
    /**
     * Find zero or one NotaFiscalItem that matches the filter.
     * @param {NotaFiscalItemFindUniqueArgs} args - Arguments to find a NotaFiscalItem
     * @example
     * // Get one NotaFiscalItem
     * const notaFiscalItem = await prisma.notaFiscalItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotaFiscalItemFindUniqueArgs>(args: SelectSubset<T, NotaFiscalItemFindUniqueArgs<ExtArgs>>): Prisma__NotaFiscalItemClient<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one NotaFiscalItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotaFiscalItemFindUniqueOrThrowArgs} args - Arguments to find a NotaFiscalItem
     * @example
     * // Get one NotaFiscalItem
     * const notaFiscalItem = await prisma.notaFiscalItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotaFiscalItemFindUniqueOrThrowArgs>(args: SelectSubset<T, NotaFiscalItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotaFiscalItemClient<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NotaFiscalItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotaFiscalItemFindFirstArgs} args - Arguments to find a NotaFiscalItem
     * @example
     * // Get one NotaFiscalItem
     * const notaFiscalItem = await prisma.notaFiscalItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotaFiscalItemFindFirstArgs>(args?: SelectSubset<T, NotaFiscalItemFindFirstArgs<ExtArgs>>): Prisma__NotaFiscalItemClient<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NotaFiscalItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotaFiscalItemFindFirstOrThrowArgs} args - Arguments to find a NotaFiscalItem
     * @example
     * // Get one NotaFiscalItem
     * const notaFiscalItem = await prisma.notaFiscalItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotaFiscalItemFindFirstOrThrowArgs>(args?: SelectSubset<T, NotaFiscalItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotaFiscalItemClient<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more NotaFiscalItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotaFiscalItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NotaFiscalItems
     * const notaFiscalItems = await prisma.notaFiscalItem.findMany()
     * 
     * // Get first 10 NotaFiscalItems
     * const notaFiscalItems = await prisma.notaFiscalItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notaFiscalItemWithIdOnly = await prisma.notaFiscalItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotaFiscalItemFindManyArgs>(args?: SelectSubset<T, NotaFiscalItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a NotaFiscalItem.
     * @param {NotaFiscalItemCreateArgs} args - Arguments to create a NotaFiscalItem.
     * @example
     * // Create one NotaFiscalItem
     * const NotaFiscalItem = await prisma.notaFiscalItem.create({
     *   data: {
     *     // ... data to create a NotaFiscalItem
     *   }
     * })
     * 
     */
    create<T extends NotaFiscalItemCreateArgs>(args: SelectSubset<T, NotaFiscalItemCreateArgs<ExtArgs>>): Prisma__NotaFiscalItemClient<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many NotaFiscalItems.
     * @param {NotaFiscalItemCreateManyArgs} args - Arguments to create many NotaFiscalItems.
     * @example
     * // Create many NotaFiscalItems
     * const notaFiscalItem = await prisma.notaFiscalItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotaFiscalItemCreateManyArgs>(args?: SelectSubset<T, NotaFiscalItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a NotaFiscalItem.
     * @param {NotaFiscalItemDeleteArgs} args - Arguments to delete one NotaFiscalItem.
     * @example
     * // Delete one NotaFiscalItem
     * const NotaFiscalItem = await prisma.notaFiscalItem.delete({
     *   where: {
     *     // ... filter to delete one NotaFiscalItem
     *   }
     * })
     * 
     */
    delete<T extends NotaFiscalItemDeleteArgs>(args: SelectSubset<T, NotaFiscalItemDeleteArgs<ExtArgs>>): Prisma__NotaFiscalItemClient<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one NotaFiscalItem.
     * @param {NotaFiscalItemUpdateArgs} args - Arguments to update one NotaFiscalItem.
     * @example
     * // Update one NotaFiscalItem
     * const notaFiscalItem = await prisma.notaFiscalItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotaFiscalItemUpdateArgs>(args: SelectSubset<T, NotaFiscalItemUpdateArgs<ExtArgs>>): Prisma__NotaFiscalItemClient<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more NotaFiscalItems.
     * @param {NotaFiscalItemDeleteManyArgs} args - Arguments to filter NotaFiscalItems to delete.
     * @example
     * // Delete a few NotaFiscalItems
     * const { count } = await prisma.notaFiscalItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotaFiscalItemDeleteManyArgs>(args?: SelectSubset<T, NotaFiscalItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NotaFiscalItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotaFiscalItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NotaFiscalItems
     * const notaFiscalItem = await prisma.notaFiscalItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotaFiscalItemUpdateManyArgs>(args: SelectSubset<T, NotaFiscalItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one NotaFiscalItem.
     * @param {NotaFiscalItemUpsertArgs} args - Arguments to update or create a NotaFiscalItem.
     * @example
     * // Update or create a NotaFiscalItem
     * const notaFiscalItem = await prisma.notaFiscalItem.upsert({
     *   create: {
     *     // ... data to create a NotaFiscalItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NotaFiscalItem we want to update
     *   }
     * })
     */
    upsert<T extends NotaFiscalItemUpsertArgs>(args: SelectSubset<T, NotaFiscalItemUpsertArgs<ExtArgs>>): Prisma__NotaFiscalItemClient<$Result.GetResult<Prisma.$NotaFiscalItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of NotaFiscalItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotaFiscalItemCountArgs} args - Arguments to filter NotaFiscalItems to count.
     * @example
     * // Count the number of NotaFiscalItems
     * const count = await prisma.notaFiscalItem.count({
     *   where: {
     *     // ... the filter for the NotaFiscalItems we want to count
     *   }
     * })
    **/
    count<T extends NotaFiscalItemCountArgs>(
      args?: Subset<T, NotaFiscalItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotaFiscalItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NotaFiscalItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotaFiscalItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotaFiscalItemAggregateArgs>(args: Subset<T, NotaFiscalItemAggregateArgs>): Prisma.PrismaPromise<GetNotaFiscalItemAggregateType<T>>

    /**
     * Group by NotaFiscalItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotaFiscalItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotaFiscalItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotaFiscalItemGroupByArgs['orderBy'] }
        : { orderBy?: NotaFiscalItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotaFiscalItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotaFiscalItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the NotaFiscalItem model
   */
  readonly fields: NotaFiscalItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for NotaFiscalItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotaFiscalItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Maquinas_Estoque<T extends NotaFiscalItem$Maquinas_EstoqueArgs<ExtArgs> = {}>(args?: Subset<T, NotaFiscalItem$Maquinas_EstoqueArgs<ExtArgs>>): Prisma__MaquinaEstoqueClient<$Result.GetResult<Prisma.$MaquinaEstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    notaFiscal<T extends NotasFiscalCabecalhoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, NotasFiscalCabecalhoDefaultArgs<ExtArgs>>): Prisma__NotasFiscalCabecalhoClient<$Result.GetResult<Prisma.$NotasFiscalCabecalhoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    produto<T extends ProdutoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProdutoDefaultArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the NotaFiscalItem model
   */
  interface NotaFiscalItemFieldRefs {
    readonly id: FieldRef<"NotaFiscalItem", 'Int'>
    readonly notaFiscalId: FieldRef<"NotaFiscalItem", 'Int'>
    readonly produtoId: FieldRef<"NotaFiscalItem", 'Int'>
    readonly Quantidade: FieldRef<"NotaFiscalItem", 'Decimal'>
    readonly valorUnitario: FieldRef<"NotaFiscalItem", 'Decimal'>
    readonly valorTotalItem: FieldRef<"NotaFiscalItem", 'Decimal'>
    readonly Chassi: FieldRef<"NotaFiscalItem", 'String'>
  }
    

  // Custom InputTypes
  /**
   * NotaFiscalItem findUnique
   */
  export type NotaFiscalItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * Filter, which NotaFiscalItem to fetch.
     */
    where: NotaFiscalItemWhereUniqueInput
  }

  /**
   * NotaFiscalItem findUniqueOrThrow
   */
  export type NotaFiscalItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * Filter, which NotaFiscalItem to fetch.
     */
    where: NotaFiscalItemWhereUniqueInput
  }

  /**
   * NotaFiscalItem findFirst
   */
  export type NotaFiscalItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * Filter, which NotaFiscalItem to fetch.
     */
    where?: NotaFiscalItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotaFiscalItems to fetch.
     */
    orderBy?: NotaFiscalItemOrderByWithRelationInput | NotaFiscalItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NotaFiscalItems.
     */
    cursor?: NotaFiscalItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotaFiscalItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotaFiscalItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NotaFiscalItems.
     */
    distinct?: NotaFiscalItemScalarFieldEnum | NotaFiscalItemScalarFieldEnum[]
  }

  /**
   * NotaFiscalItem findFirstOrThrow
   */
  export type NotaFiscalItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * Filter, which NotaFiscalItem to fetch.
     */
    where?: NotaFiscalItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotaFiscalItems to fetch.
     */
    orderBy?: NotaFiscalItemOrderByWithRelationInput | NotaFiscalItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NotaFiscalItems.
     */
    cursor?: NotaFiscalItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotaFiscalItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotaFiscalItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NotaFiscalItems.
     */
    distinct?: NotaFiscalItemScalarFieldEnum | NotaFiscalItemScalarFieldEnum[]
  }

  /**
   * NotaFiscalItem findMany
   */
  export type NotaFiscalItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * Filter, which NotaFiscalItems to fetch.
     */
    where?: NotaFiscalItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NotaFiscalItems to fetch.
     */
    orderBy?: NotaFiscalItemOrderByWithRelationInput | NotaFiscalItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NotaFiscalItems.
     */
    cursor?: NotaFiscalItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NotaFiscalItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NotaFiscalItems.
     */
    skip?: number
    distinct?: NotaFiscalItemScalarFieldEnum | NotaFiscalItemScalarFieldEnum[]
  }

  /**
   * NotaFiscalItem create
   */
  export type NotaFiscalItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * The data needed to create a NotaFiscalItem.
     */
    data: XOR<NotaFiscalItemCreateInput, NotaFiscalItemUncheckedCreateInput>
  }

  /**
   * NotaFiscalItem createMany
   */
  export type NotaFiscalItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many NotaFiscalItems.
     */
    data: NotaFiscalItemCreateManyInput | NotaFiscalItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NotaFiscalItem update
   */
  export type NotaFiscalItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * The data needed to update a NotaFiscalItem.
     */
    data: XOR<NotaFiscalItemUpdateInput, NotaFiscalItemUncheckedUpdateInput>
    /**
     * Choose, which NotaFiscalItem to update.
     */
    where: NotaFiscalItemWhereUniqueInput
  }

  /**
   * NotaFiscalItem updateMany
   */
  export type NotaFiscalItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update NotaFiscalItems.
     */
    data: XOR<NotaFiscalItemUpdateManyMutationInput, NotaFiscalItemUncheckedUpdateManyInput>
    /**
     * Filter which NotaFiscalItems to update
     */
    where?: NotaFiscalItemWhereInput
    /**
     * Limit how many NotaFiscalItems to update.
     */
    limit?: number
  }

  /**
   * NotaFiscalItem upsert
   */
  export type NotaFiscalItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * The filter to search for the NotaFiscalItem to update in case it exists.
     */
    where: NotaFiscalItemWhereUniqueInput
    /**
     * In case the NotaFiscalItem found by the `where` argument doesn't exist, create a new NotaFiscalItem with this data.
     */
    create: XOR<NotaFiscalItemCreateInput, NotaFiscalItemUncheckedCreateInput>
    /**
     * In case the NotaFiscalItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotaFiscalItemUpdateInput, NotaFiscalItemUncheckedUpdateInput>
  }

  /**
   * NotaFiscalItem delete
   */
  export type NotaFiscalItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
    /**
     * Filter which NotaFiscalItem to delete.
     */
    where: NotaFiscalItemWhereUniqueInput
  }

  /**
   * NotaFiscalItem deleteMany
   */
  export type NotaFiscalItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NotaFiscalItems to delete
     */
    where?: NotaFiscalItemWhereInput
    /**
     * Limit how many NotaFiscalItems to delete.
     */
    limit?: number
  }

  /**
   * NotaFiscalItem.Maquinas_Estoque
   */
  export type NotaFiscalItem$Maquinas_EstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaquinaEstoque
     */
    select?: MaquinaEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaquinaEstoque
     */
    omit?: MaquinaEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaquinaEstoqueInclude<ExtArgs> | null
    where?: MaquinaEstoqueWhereInput
  }

  /**
   * NotaFiscalItem without action
   */
  export type NotaFiscalItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NotaFiscalItem
     */
    select?: NotaFiscalItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NotaFiscalItem
     */
    omit?: NotaFiscalItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotaFiscalItemInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    createdAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    createdAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    createdAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    createdAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    createdAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    createdAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    email: string
    password: string
    createdAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    createdAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "createdAt", ExtArgs["result"]["user"]>

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      password: string
      createdAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
  }


  /**
   * Model RfvParameterSet
   */

  export type AggregateRfvParameterSet = {
    _count: RfvParameterSetCountAggregateOutputType | null
    _avg: RfvParameterSetAvgAggregateOutputType | null
    _sum: RfvParameterSetSumAggregateOutputType | null
    _min: RfvParameterSetMinAggregateOutputType | null
    _max: RfvParameterSetMaxAggregateOutputType | null
  }

  export type RfvParameterSetAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    windowDays: number | null
  }

  export type RfvParameterSetSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    windowDays: number | null
  }

  export type RfvParameterSetMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    name: string | null
    strategy: $Enums.RfvStrategy | null
    windowDays: number | null
    effectiveFrom: Date | null
    effectiveTo: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    calculationStrategy: $Enums.CalculationStrategy | null
  }

  export type RfvParameterSetMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    name: string | null
    strategy: $Enums.RfvStrategy | null
    windowDays: number | null
    effectiveFrom: Date | null
    effectiveTo: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    calculationStrategy: $Enums.CalculationStrategy | null
  }

  export type RfvParameterSetCountAggregateOutputType = {
    id: number
    filialId: number
    name: number
    strategy: number
    windowDays: number
    weights: number
    ruleRecency: number
    ruleFrequency: number
    ruleValue: number
    effectiveFrom: number
    effectiveTo: number
    createdAt: number
    updatedAt: number
    calculationStrategy: number
    classRanges: number
    conditionalRules: number
    _all: number
  }


  export type RfvParameterSetAvgAggregateInputType = {
    id?: true
    filialId?: true
    windowDays?: true
  }

  export type RfvParameterSetSumAggregateInputType = {
    id?: true
    filialId?: true
    windowDays?: true
  }

  export type RfvParameterSetMinAggregateInputType = {
    id?: true
    filialId?: true
    name?: true
    strategy?: true
    windowDays?: true
    effectiveFrom?: true
    effectiveTo?: true
    createdAt?: true
    updatedAt?: true
    calculationStrategy?: true
  }

  export type RfvParameterSetMaxAggregateInputType = {
    id?: true
    filialId?: true
    name?: true
    strategy?: true
    windowDays?: true
    effectiveFrom?: true
    effectiveTo?: true
    createdAt?: true
    updatedAt?: true
    calculationStrategy?: true
  }

  export type RfvParameterSetCountAggregateInputType = {
    id?: true
    filialId?: true
    name?: true
    strategy?: true
    windowDays?: true
    weights?: true
    ruleRecency?: true
    ruleFrequency?: true
    ruleValue?: true
    effectiveFrom?: true
    effectiveTo?: true
    createdAt?: true
    updatedAt?: true
    calculationStrategy?: true
    classRanges?: true
    conditionalRules?: true
    _all?: true
  }

  export type RfvParameterSetAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RfvParameterSet to aggregate.
     */
    where?: RfvParameterSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RfvParameterSets to fetch.
     */
    orderBy?: RfvParameterSetOrderByWithRelationInput | RfvParameterSetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RfvParameterSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RfvParameterSets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RfvParameterSets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RfvParameterSets
    **/
    _count?: true | RfvParameterSetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RfvParameterSetAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RfvParameterSetSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RfvParameterSetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RfvParameterSetMaxAggregateInputType
  }

  export type GetRfvParameterSetAggregateType<T extends RfvParameterSetAggregateArgs> = {
        [P in keyof T & keyof AggregateRfvParameterSet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRfvParameterSet[P]>
      : GetScalarType<T[P], AggregateRfvParameterSet[P]>
  }




  export type RfvParameterSetGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RfvParameterSetWhereInput
    orderBy?: RfvParameterSetOrderByWithAggregationInput | RfvParameterSetOrderByWithAggregationInput[]
    by: RfvParameterSetScalarFieldEnum[] | RfvParameterSetScalarFieldEnum
    having?: RfvParameterSetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RfvParameterSetCountAggregateInputType | true
    _avg?: RfvParameterSetAvgAggregateInputType
    _sum?: RfvParameterSetSumAggregateInputType
    _min?: RfvParameterSetMinAggregateInputType
    _max?: RfvParameterSetMaxAggregateInputType
  }

  export type RfvParameterSetGroupByOutputType = {
    id: number
    filialId: number | null
    name: string
    strategy: $Enums.RfvStrategy
    windowDays: number
    weights: JsonValue
    ruleRecency: JsonValue
    ruleFrequency: JsonValue
    ruleValue: JsonValue
    effectiveFrom: Date
    effectiveTo: Date | null
    createdAt: Date
    updatedAt: Date
    calculationStrategy: $Enums.CalculationStrategy
    classRanges: JsonValue | null
    conditionalRules: JsonValue | null
    _count: RfvParameterSetCountAggregateOutputType | null
    _avg: RfvParameterSetAvgAggregateOutputType | null
    _sum: RfvParameterSetSumAggregateOutputType | null
    _min: RfvParameterSetMinAggregateOutputType | null
    _max: RfvParameterSetMaxAggregateOutputType | null
  }

  type GetRfvParameterSetGroupByPayload<T extends RfvParameterSetGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RfvParameterSetGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RfvParameterSetGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RfvParameterSetGroupByOutputType[P]>
            : GetScalarType<T[P], RfvParameterSetGroupByOutputType[P]>
        }
      >
    >


  export type RfvParameterSetSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    name?: boolean
    strategy?: boolean
    windowDays?: boolean
    weights?: boolean
    ruleRecency?: boolean
    ruleFrequency?: boolean
    ruleValue?: boolean
    effectiveFrom?: boolean
    effectiveTo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    calculationStrategy?: boolean
    classRanges?: boolean
    conditionalRules?: boolean
    filial?: boolean | RfvParameterSet$filialArgs<ExtArgs>
    segments?: boolean | RfvParameterSet$segmentsArgs<ExtArgs>
    _count?: boolean | RfvParameterSetCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rfvParameterSet"]>



  export type RfvParameterSetSelectScalar = {
    id?: boolean
    filialId?: boolean
    name?: boolean
    strategy?: boolean
    windowDays?: boolean
    weights?: boolean
    ruleRecency?: boolean
    ruleFrequency?: boolean
    ruleValue?: boolean
    effectiveFrom?: boolean
    effectiveTo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    calculationStrategy?: boolean
    classRanges?: boolean
    conditionalRules?: boolean
  }

  export type RfvParameterSetOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "name" | "strategy" | "windowDays" | "weights" | "ruleRecency" | "ruleFrequency" | "ruleValue" | "effectiveFrom" | "effectiveTo" | "createdAt" | "updatedAt" | "calculationStrategy" | "classRanges" | "conditionalRules", ExtArgs["result"]["rfvParameterSet"]>
  export type RfvParameterSetInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | RfvParameterSet$filialArgs<ExtArgs>
    segments?: boolean | RfvParameterSet$segmentsArgs<ExtArgs>
    _count?: boolean | RfvParameterSetCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $RfvParameterSetPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RfvParameterSet"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      segments: Prisma.$RfvSegmentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      name: string
      strategy: $Enums.RfvStrategy
      windowDays: number
      weights: Prisma.JsonValue
      ruleRecency: Prisma.JsonValue
      ruleFrequency: Prisma.JsonValue
      ruleValue: Prisma.JsonValue
      effectiveFrom: Date
      effectiveTo: Date | null
      createdAt: Date
      updatedAt: Date
      calculationStrategy: $Enums.CalculationStrategy
      classRanges: Prisma.JsonValue | null
      conditionalRules: Prisma.JsonValue | null
    }, ExtArgs["result"]["rfvParameterSet"]>
    composites: {}
  }

  type RfvParameterSetGetPayload<S extends boolean | null | undefined | RfvParameterSetDefaultArgs> = $Result.GetResult<Prisma.$RfvParameterSetPayload, S>

  type RfvParameterSetCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RfvParameterSetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RfvParameterSetCountAggregateInputType | true
    }

  export interface RfvParameterSetDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RfvParameterSet'], meta: { name: 'RfvParameterSet' } }
    /**
     * Find zero or one RfvParameterSet that matches the filter.
     * @param {RfvParameterSetFindUniqueArgs} args - Arguments to find a RfvParameterSet
     * @example
     * // Get one RfvParameterSet
     * const rfvParameterSet = await prisma.rfvParameterSet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RfvParameterSetFindUniqueArgs>(args: SelectSubset<T, RfvParameterSetFindUniqueArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RfvParameterSet that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RfvParameterSetFindUniqueOrThrowArgs} args - Arguments to find a RfvParameterSet
     * @example
     * // Get one RfvParameterSet
     * const rfvParameterSet = await prisma.rfvParameterSet.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RfvParameterSetFindUniqueOrThrowArgs>(args: SelectSubset<T, RfvParameterSetFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RfvParameterSet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvParameterSetFindFirstArgs} args - Arguments to find a RfvParameterSet
     * @example
     * // Get one RfvParameterSet
     * const rfvParameterSet = await prisma.rfvParameterSet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RfvParameterSetFindFirstArgs>(args?: SelectSubset<T, RfvParameterSetFindFirstArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RfvParameterSet that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvParameterSetFindFirstOrThrowArgs} args - Arguments to find a RfvParameterSet
     * @example
     * // Get one RfvParameterSet
     * const rfvParameterSet = await prisma.rfvParameterSet.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RfvParameterSetFindFirstOrThrowArgs>(args?: SelectSubset<T, RfvParameterSetFindFirstOrThrowArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RfvParameterSets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvParameterSetFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RfvParameterSets
     * const rfvParameterSets = await prisma.rfvParameterSet.findMany()
     * 
     * // Get first 10 RfvParameterSets
     * const rfvParameterSets = await prisma.rfvParameterSet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rfvParameterSetWithIdOnly = await prisma.rfvParameterSet.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RfvParameterSetFindManyArgs>(args?: SelectSubset<T, RfvParameterSetFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RfvParameterSet.
     * @param {RfvParameterSetCreateArgs} args - Arguments to create a RfvParameterSet.
     * @example
     * // Create one RfvParameterSet
     * const RfvParameterSet = await prisma.rfvParameterSet.create({
     *   data: {
     *     // ... data to create a RfvParameterSet
     *   }
     * })
     * 
     */
    create<T extends RfvParameterSetCreateArgs>(args: SelectSubset<T, RfvParameterSetCreateArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RfvParameterSets.
     * @param {RfvParameterSetCreateManyArgs} args - Arguments to create many RfvParameterSets.
     * @example
     * // Create many RfvParameterSets
     * const rfvParameterSet = await prisma.rfvParameterSet.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RfvParameterSetCreateManyArgs>(args?: SelectSubset<T, RfvParameterSetCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RfvParameterSet.
     * @param {RfvParameterSetDeleteArgs} args - Arguments to delete one RfvParameterSet.
     * @example
     * // Delete one RfvParameterSet
     * const RfvParameterSet = await prisma.rfvParameterSet.delete({
     *   where: {
     *     // ... filter to delete one RfvParameterSet
     *   }
     * })
     * 
     */
    delete<T extends RfvParameterSetDeleteArgs>(args: SelectSubset<T, RfvParameterSetDeleteArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RfvParameterSet.
     * @param {RfvParameterSetUpdateArgs} args - Arguments to update one RfvParameterSet.
     * @example
     * // Update one RfvParameterSet
     * const rfvParameterSet = await prisma.rfvParameterSet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RfvParameterSetUpdateArgs>(args: SelectSubset<T, RfvParameterSetUpdateArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RfvParameterSets.
     * @param {RfvParameterSetDeleteManyArgs} args - Arguments to filter RfvParameterSets to delete.
     * @example
     * // Delete a few RfvParameterSets
     * const { count } = await prisma.rfvParameterSet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RfvParameterSetDeleteManyArgs>(args?: SelectSubset<T, RfvParameterSetDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RfvParameterSets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvParameterSetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RfvParameterSets
     * const rfvParameterSet = await prisma.rfvParameterSet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RfvParameterSetUpdateManyArgs>(args: SelectSubset<T, RfvParameterSetUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RfvParameterSet.
     * @param {RfvParameterSetUpsertArgs} args - Arguments to update or create a RfvParameterSet.
     * @example
     * // Update or create a RfvParameterSet
     * const rfvParameterSet = await prisma.rfvParameterSet.upsert({
     *   create: {
     *     // ... data to create a RfvParameterSet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RfvParameterSet we want to update
     *   }
     * })
     */
    upsert<T extends RfvParameterSetUpsertArgs>(args: SelectSubset<T, RfvParameterSetUpsertArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RfvParameterSets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvParameterSetCountArgs} args - Arguments to filter RfvParameterSets to count.
     * @example
     * // Count the number of RfvParameterSets
     * const count = await prisma.rfvParameterSet.count({
     *   where: {
     *     // ... the filter for the RfvParameterSets we want to count
     *   }
     * })
    **/
    count<T extends RfvParameterSetCountArgs>(
      args?: Subset<T, RfvParameterSetCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RfvParameterSetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RfvParameterSet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvParameterSetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RfvParameterSetAggregateArgs>(args: Subset<T, RfvParameterSetAggregateArgs>): Prisma.PrismaPromise<GetRfvParameterSetAggregateType<T>>

    /**
     * Group by RfvParameterSet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvParameterSetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RfvParameterSetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RfvParameterSetGroupByArgs['orderBy'] }
        : { orderBy?: RfvParameterSetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RfvParameterSetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRfvParameterSetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RfvParameterSet model
   */
  readonly fields: RfvParameterSetFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RfvParameterSet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RfvParameterSetClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends RfvParameterSet$filialArgs<ExtArgs> = {}>(args?: Subset<T, RfvParameterSet$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    segments<T extends RfvParameterSet$segmentsArgs<ExtArgs> = {}>(args?: Subset<T, RfvParameterSet$segmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RfvParameterSet model
   */
  interface RfvParameterSetFieldRefs {
    readonly id: FieldRef<"RfvParameterSet", 'Int'>
    readonly filialId: FieldRef<"RfvParameterSet", 'Int'>
    readonly name: FieldRef<"RfvParameterSet", 'String'>
    readonly strategy: FieldRef<"RfvParameterSet", 'RfvStrategy'>
    readonly windowDays: FieldRef<"RfvParameterSet", 'Int'>
    readonly weights: FieldRef<"RfvParameterSet", 'Json'>
    readonly ruleRecency: FieldRef<"RfvParameterSet", 'Json'>
    readonly ruleFrequency: FieldRef<"RfvParameterSet", 'Json'>
    readonly ruleValue: FieldRef<"RfvParameterSet", 'Json'>
    readonly effectiveFrom: FieldRef<"RfvParameterSet", 'DateTime'>
    readonly effectiveTo: FieldRef<"RfvParameterSet", 'DateTime'>
    readonly createdAt: FieldRef<"RfvParameterSet", 'DateTime'>
    readonly updatedAt: FieldRef<"RfvParameterSet", 'DateTime'>
    readonly calculationStrategy: FieldRef<"RfvParameterSet", 'CalculationStrategy'>
    readonly classRanges: FieldRef<"RfvParameterSet", 'Json'>
    readonly conditionalRules: FieldRef<"RfvParameterSet", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * RfvParameterSet findUnique
   */
  export type RfvParameterSetFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * Filter, which RfvParameterSet to fetch.
     */
    where: RfvParameterSetWhereUniqueInput
  }

  /**
   * RfvParameterSet findUniqueOrThrow
   */
  export type RfvParameterSetFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * Filter, which RfvParameterSet to fetch.
     */
    where: RfvParameterSetWhereUniqueInput
  }

  /**
   * RfvParameterSet findFirst
   */
  export type RfvParameterSetFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * Filter, which RfvParameterSet to fetch.
     */
    where?: RfvParameterSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RfvParameterSets to fetch.
     */
    orderBy?: RfvParameterSetOrderByWithRelationInput | RfvParameterSetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RfvParameterSets.
     */
    cursor?: RfvParameterSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RfvParameterSets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RfvParameterSets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RfvParameterSets.
     */
    distinct?: RfvParameterSetScalarFieldEnum | RfvParameterSetScalarFieldEnum[]
  }

  /**
   * RfvParameterSet findFirstOrThrow
   */
  export type RfvParameterSetFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * Filter, which RfvParameterSet to fetch.
     */
    where?: RfvParameterSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RfvParameterSets to fetch.
     */
    orderBy?: RfvParameterSetOrderByWithRelationInput | RfvParameterSetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RfvParameterSets.
     */
    cursor?: RfvParameterSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RfvParameterSets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RfvParameterSets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RfvParameterSets.
     */
    distinct?: RfvParameterSetScalarFieldEnum | RfvParameterSetScalarFieldEnum[]
  }

  /**
   * RfvParameterSet findMany
   */
  export type RfvParameterSetFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * Filter, which RfvParameterSets to fetch.
     */
    where?: RfvParameterSetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RfvParameterSets to fetch.
     */
    orderBy?: RfvParameterSetOrderByWithRelationInput | RfvParameterSetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RfvParameterSets.
     */
    cursor?: RfvParameterSetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RfvParameterSets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RfvParameterSets.
     */
    skip?: number
    distinct?: RfvParameterSetScalarFieldEnum | RfvParameterSetScalarFieldEnum[]
  }

  /**
   * RfvParameterSet create
   */
  export type RfvParameterSetCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * The data needed to create a RfvParameterSet.
     */
    data: XOR<RfvParameterSetCreateInput, RfvParameterSetUncheckedCreateInput>
  }

  /**
   * RfvParameterSet createMany
   */
  export type RfvParameterSetCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RfvParameterSets.
     */
    data: RfvParameterSetCreateManyInput | RfvParameterSetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RfvParameterSet update
   */
  export type RfvParameterSetUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * The data needed to update a RfvParameterSet.
     */
    data: XOR<RfvParameterSetUpdateInput, RfvParameterSetUncheckedUpdateInput>
    /**
     * Choose, which RfvParameterSet to update.
     */
    where: RfvParameterSetWhereUniqueInput
  }

  /**
   * RfvParameterSet updateMany
   */
  export type RfvParameterSetUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RfvParameterSets.
     */
    data: XOR<RfvParameterSetUpdateManyMutationInput, RfvParameterSetUncheckedUpdateManyInput>
    /**
     * Filter which RfvParameterSets to update
     */
    where?: RfvParameterSetWhereInput
    /**
     * Limit how many RfvParameterSets to update.
     */
    limit?: number
  }

  /**
   * RfvParameterSet upsert
   */
  export type RfvParameterSetUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * The filter to search for the RfvParameterSet to update in case it exists.
     */
    where: RfvParameterSetWhereUniqueInput
    /**
     * In case the RfvParameterSet found by the `where` argument doesn't exist, create a new RfvParameterSet with this data.
     */
    create: XOR<RfvParameterSetCreateInput, RfvParameterSetUncheckedCreateInput>
    /**
     * In case the RfvParameterSet was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RfvParameterSetUpdateInput, RfvParameterSetUncheckedUpdateInput>
  }

  /**
   * RfvParameterSet delete
   */
  export type RfvParameterSetDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
    /**
     * Filter which RfvParameterSet to delete.
     */
    where: RfvParameterSetWhereUniqueInput
  }

  /**
   * RfvParameterSet deleteMany
   */
  export type RfvParameterSetDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RfvParameterSets to delete
     */
    where?: RfvParameterSetWhereInput
    /**
     * Limit how many RfvParameterSets to delete.
     */
    limit?: number
  }

  /**
   * RfvParameterSet.filial
   */
  export type RfvParameterSet$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * RfvParameterSet.segments
   */
  export type RfvParameterSet$segmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    where?: RfvSegmentWhereInput
    orderBy?: RfvSegmentOrderByWithRelationInput | RfvSegmentOrderByWithRelationInput[]
    cursor?: RfvSegmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RfvSegmentScalarFieldEnum | RfvSegmentScalarFieldEnum[]
  }

  /**
   * RfvParameterSet without action
   */
  export type RfvParameterSetDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvParameterSet
     */
    select?: RfvParameterSetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvParameterSet
     */
    omit?: RfvParameterSetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvParameterSetInclude<ExtArgs> | null
  }


  /**
   * Model RfvSegment
   */

  export type AggregateRfvSegment = {
    _count: RfvSegmentCountAggregateOutputType | null
    _avg: RfvSegmentAvgAggregateOutputType | null
    _sum: RfvSegmentSumAggregateOutputType | null
    _min: RfvSegmentMinAggregateOutputType | null
    _max: RfvSegmentMaxAggregateOutputType | null
  }

  export type RfvSegmentAvgAggregateOutputType = {
    id: number | null
    parameterSetId: number | null
    priority: number | null
  }

  export type RfvSegmentSumAggregateOutputType = {
    id: number | null
    parameterSetId: number | null
    priority: number | null
  }

  export type RfvSegmentMinAggregateOutputType = {
    id: number | null
    parameterSetId: number | null
    name: string | null
    priority: number | null
  }

  export type RfvSegmentMaxAggregateOutputType = {
    id: number | null
    parameterSetId: number | null
    name: string | null
    priority: number | null
  }

  export type RfvSegmentCountAggregateOutputType = {
    id: number
    parameterSetId: number
    name: number
    rules: number
    priority: number
    _all: number
  }


  export type RfvSegmentAvgAggregateInputType = {
    id?: true
    parameterSetId?: true
    priority?: true
  }

  export type RfvSegmentSumAggregateInputType = {
    id?: true
    parameterSetId?: true
    priority?: true
  }

  export type RfvSegmentMinAggregateInputType = {
    id?: true
    parameterSetId?: true
    name?: true
    priority?: true
  }

  export type RfvSegmentMaxAggregateInputType = {
    id?: true
    parameterSetId?: true
    name?: true
    priority?: true
  }

  export type RfvSegmentCountAggregateInputType = {
    id?: true
    parameterSetId?: true
    name?: true
    rules?: true
    priority?: true
    _all?: true
  }

  export type RfvSegmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RfvSegment to aggregate.
     */
    where?: RfvSegmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RfvSegments to fetch.
     */
    orderBy?: RfvSegmentOrderByWithRelationInput | RfvSegmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RfvSegmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RfvSegments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RfvSegments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RfvSegments
    **/
    _count?: true | RfvSegmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RfvSegmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RfvSegmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RfvSegmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RfvSegmentMaxAggregateInputType
  }

  export type GetRfvSegmentAggregateType<T extends RfvSegmentAggregateArgs> = {
        [P in keyof T & keyof AggregateRfvSegment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRfvSegment[P]>
      : GetScalarType<T[P], AggregateRfvSegment[P]>
  }




  export type RfvSegmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RfvSegmentWhereInput
    orderBy?: RfvSegmentOrderByWithAggregationInput | RfvSegmentOrderByWithAggregationInput[]
    by: RfvSegmentScalarFieldEnum[] | RfvSegmentScalarFieldEnum
    having?: RfvSegmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RfvSegmentCountAggregateInputType | true
    _avg?: RfvSegmentAvgAggregateInputType
    _sum?: RfvSegmentSumAggregateInputType
    _min?: RfvSegmentMinAggregateInputType
    _max?: RfvSegmentMaxAggregateInputType
  }

  export type RfvSegmentGroupByOutputType = {
    id: number
    parameterSetId: number
    name: string
    rules: JsonValue
    priority: number
    _count: RfvSegmentCountAggregateOutputType | null
    _avg: RfvSegmentAvgAggregateOutputType | null
    _sum: RfvSegmentSumAggregateOutputType | null
    _min: RfvSegmentMinAggregateOutputType | null
    _max: RfvSegmentMaxAggregateOutputType | null
  }

  type GetRfvSegmentGroupByPayload<T extends RfvSegmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RfvSegmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RfvSegmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RfvSegmentGroupByOutputType[P]>
            : GetScalarType<T[P], RfvSegmentGroupByOutputType[P]>
        }
      >
    >


  export type RfvSegmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parameterSetId?: boolean
    name?: boolean
    rules?: boolean
    priority?: boolean
    parameterSet?: boolean | RfvParameterSetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rfvSegment"]>



  export type RfvSegmentSelectScalar = {
    id?: boolean
    parameterSetId?: boolean
    name?: boolean
    rules?: boolean
    priority?: boolean
  }

  export type RfvSegmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "parameterSetId" | "name" | "rules" | "priority", ExtArgs["result"]["rfvSegment"]>
  export type RfvSegmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parameterSet?: boolean | RfvParameterSetDefaultArgs<ExtArgs>
  }

  export type $RfvSegmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RfvSegment"
    objects: {
      parameterSet: Prisma.$RfvParameterSetPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      parameterSetId: number
      name: string
      rules: Prisma.JsonValue
      priority: number
    }, ExtArgs["result"]["rfvSegment"]>
    composites: {}
  }

  type RfvSegmentGetPayload<S extends boolean | null | undefined | RfvSegmentDefaultArgs> = $Result.GetResult<Prisma.$RfvSegmentPayload, S>

  type RfvSegmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RfvSegmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RfvSegmentCountAggregateInputType | true
    }

  export interface RfvSegmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RfvSegment'], meta: { name: 'RfvSegment' } }
    /**
     * Find zero or one RfvSegment that matches the filter.
     * @param {RfvSegmentFindUniqueArgs} args - Arguments to find a RfvSegment
     * @example
     * // Get one RfvSegment
     * const rfvSegment = await prisma.rfvSegment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RfvSegmentFindUniqueArgs>(args: SelectSubset<T, RfvSegmentFindUniqueArgs<ExtArgs>>): Prisma__RfvSegmentClient<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RfvSegment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RfvSegmentFindUniqueOrThrowArgs} args - Arguments to find a RfvSegment
     * @example
     * // Get one RfvSegment
     * const rfvSegment = await prisma.rfvSegment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RfvSegmentFindUniqueOrThrowArgs>(args: SelectSubset<T, RfvSegmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RfvSegmentClient<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RfvSegment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvSegmentFindFirstArgs} args - Arguments to find a RfvSegment
     * @example
     * // Get one RfvSegment
     * const rfvSegment = await prisma.rfvSegment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RfvSegmentFindFirstArgs>(args?: SelectSubset<T, RfvSegmentFindFirstArgs<ExtArgs>>): Prisma__RfvSegmentClient<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RfvSegment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvSegmentFindFirstOrThrowArgs} args - Arguments to find a RfvSegment
     * @example
     * // Get one RfvSegment
     * const rfvSegment = await prisma.rfvSegment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RfvSegmentFindFirstOrThrowArgs>(args?: SelectSubset<T, RfvSegmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__RfvSegmentClient<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RfvSegments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvSegmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RfvSegments
     * const rfvSegments = await prisma.rfvSegment.findMany()
     * 
     * // Get first 10 RfvSegments
     * const rfvSegments = await prisma.rfvSegment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rfvSegmentWithIdOnly = await prisma.rfvSegment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RfvSegmentFindManyArgs>(args?: SelectSubset<T, RfvSegmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RfvSegment.
     * @param {RfvSegmentCreateArgs} args - Arguments to create a RfvSegment.
     * @example
     * // Create one RfvSegment
     * const RfvSegment = await prisma.rfvSegment.create({
     *   data: {
     *     // ... data to create a RfvSegment
     *   }
     * })
     * 
     */
    create<T extends RfvSegmentCreateArgs>(args: SelectSubset<T, RfvSegmentCreateArgs<ExtArgs>>): Prisma__RfvSegmentClient<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RfvSegments.
     * @param {RfvSegmentCreateManyArgs} args - Arguments to create many RfvSegments.
     * @example
     * // Create many RfvSegments
     * const rfvSegment = await prisma.rfvSegment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RfvSegmentCreateManyArgs>(args?: SelectSubset<T, RfvSegmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RfvSegment.
     * @param {RfvSegmentDeleteArgs} args - Arguments to delete one RfvSegment.
     * @example
     * // Delete one RfvSegment
     * const RfvSegment = await prisma.rfvSegment.delete({
     *   where: {
     *     // ... filter to delete one RfvSegment
     *   }
     * })
     * 
     */
    delete<T extends RfvSegmentDeleteArgs>(args: SelectSubset<T, RfvSegmentDeleteArgs<ExtArgs>>): Prisma__RfvSegmentClient<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RfvSegment.
     * @param {RfvSegmentUpdateArgs} args - Arguments to update one RfvSegment.
     * @example
     * // Update one RfvSegment
     * const rfvSegment = await prisma.rfvSegment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RfvSegmentUpdateArgs>(args: SelectSubset<T, RfvSegmentUpdateArgs<ExtArgs>>): Prisma__RfvSegmentClient<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RfvSegments.
     * @param {RfvSegmentDeleteManyArgs} args - Arguments to filter RfvSegments to delete.
     * @example
     * // Delete a few RfvSegments
     * const { count } = await prisma.rfvSegment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RfvSegmentDeleteManyArgs>(args?: SelectSubset<T, RfvSegmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RfvSegments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvSegmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RfvSegments
     * const rfvSegment = await prisma.rfvSegment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RfvSegmentUpdateManyArgs>(args: SelectSubset<T, RfvSegmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RfvSegment.
     * @param {RfvSegmentUpsertArgs} args - Arguments to update or create a RfvSegment.
     * @example
     * // Update or create a RfvSegment
     * const rfvSegment = await prisma.rfvSegment.upsert({
     *   create: {
     *     // ... data to create a RfvSegment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RfvSegment we want to update
     *   }
     * })
     */
    upsert<T extends RfvSegmentUpsertArgs>(args: SelectSubset<T, RfvSegmentUpsertArgs<ExtArgs>>): Prisma__RfvSegmentClient<$Result.GetResult<Prisma.$RfvSegmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RfvSegments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvSegmentCountArgs} args - Arguments to filter RfvSegments to count.
     * @example
     * // Count the number of RfvSegments
     * const count = await prisma.rfvSegment.count({
     *   where: {
     *     // ... the filter for the RfvSegments we want to count
     *   }
     * })
    **/
    count<T extends RfvSegmentCountArgs>(
      args?: Subset<T, RfvSegmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RfvSegmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RfvSegment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvSegmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RfvSegmentAggregateArgs>(args: Subset<T, RfvSegmentAggregateArgs>): Prisma.PrismaPromise<GetRfvSegmentAggregateType<T>>

    /**
     * Group by RfvSegment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RfvSegmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RfvSegmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RfvSegmentGroupByArgs['orderBy'] }
        : { orderBy?: RfvSegmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RfvSegmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRfvSegmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RfvSegment model
   */
  readonly fields: RfvSegmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RfvSegment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RfvSegmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parameterSet<T extends RfvParameterSetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RfvParameterSetDefaultArgs<ExtArgs>>): Prisma__RfvParameterSetClient<$Result.GetResult<Prisma.$RfvParameterSetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RfvSegment model
   */
  interface RfvSegmentFieldRefs {
    readonly id: FieldRef<"RfvSegment", 'Int'>
    readonly parameterSetId: FieldRef<"RfvSegment", 'Int'>
    readonly name: FieldRef<"RfvSegment", 'String'>
    readonly rules: FieldRef<"RfvSegment", 'Json'>
    readonly priority: FieldRef<"RfvSegment", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RfvSegment findUnique
   */
  export type RfvSegmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * Filter, which RfvSegment to fetch.
     */
    where: RfvSegmentWhereUniqueInput
  }

  /**
   * RfvSegment findUniqueOrThrow
   */
  export type RfvSegmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * Filter, which RfvSegment to fetch.
     */
    where: RfvSegmentWhereUniqueInput
  }

  /**
   * RfvSegment findFirst
   */
  export type RfvSegmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * Filter, which RfvSegment to fetch.
     */
    where?: RfvSegmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RfvSegments to fetch.
     */
    orderBy?: RfvSegmentOrderByWithRelationInput | RfvSegmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RfvSegments.
     */
    cursor?: RfvSegmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RfvSegments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RfvSegments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RfvSegments.
     */
    distinct?: RfvSegmentScalarFieldEnum | RfvSegmentScalarFieldEnum[]
  }

  /**
   * RfvSegment findFirstOrThrow
   */
  export type RfvSegmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * Filter, which RfvSegment to fetch.
     */
    where?: RfvSegmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RfvSegments to fetch.
     */
    orderBy?: RfvSegmentOrderByWithRelationInput | RfvSegmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RfvSegments.
     */
    cursor?: RfvSegmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RfvSegments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RfvSegments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RfvSegments.
     */
    distinct?: RfvSegmentScalarFieldEnum | RfvSegmentScalarFieldEnum[]
  }

  /**
   * RfvSegment findMany
   */
  export type RfvSegmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * Filter, which RfvSegments to fetch.
     */
    where?: RfvSegmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RfvSegments to fetch.
     */
    orderBy?: RfvSegmentOrderByWithRelationInput | RfvSegmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RfvSegments.
     */
    cursor?: RfvSegmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RfvSegments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RfvSegments.
     */
    skip?: number
    distinct?: RfvSegmentScalarFieldEnum | RfvSegmentScalarFieldEnum[]
  }

  /**
   * RfvSegment create
   */
  export type RfvSegmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * The data needed to create a RfvSegment.
     */
    data: XOR<RfvSegmentCreateInput, RfvSegmentUncheckedCreateInput>
  }

  /**
   * RfvSegment createMany
   */
  export type RfvSegmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RfvSegments.
     */
    data: RfvSegmentCreateManyInput | RfvSegmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RfvSegment update
   */
  export type RfvSegmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * The data needed to update a RfvSegment.
     */
    data: XOR<RfvSegmentUpdateInput, RfvSegmentUncheckedUpdateInput>
    /**
     * Choose, which RfvSegment to update.
     */
    where: RfvSegmentWhereUniqueInput
  }

  /**
   * RfvSegment updateMany
   */
  export type RfvSegmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RfvSegments.
     */
    data: XOR<RfvSegmentUpdateManyMutationInput, RfvSegmentUncheckedUpdateManyInput>
    /**
     * Filter which RfvSegments to update
     */
    where?: RfvSegmentWhereInput
    /**
     * Limit how many RfvSegments to update.
     */
    limit?: number
  }

  /**
   * RfvSegment upsert
   */
  export type RfvSegmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * The filter to search for the RfvSegment to update in case it exists.
     */
    where: RfvSegmentWhereUniqueInput
    /**
     * In case the RfvSegment found by the `where` argument doesn't exist, create a new RfvSegment with this data.
     */
    create: XOR<RfvSegmentCreateInput, RfvSegmentUncheckedCreateInput>
    /**
     * In case the RfvSegment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RfvSegmentUpdateInput, RfvSegmentUncheckedUpdateInput>
  }

  /**
   * RfvSegment delete
   */
  export type RfvSegmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
    /**
     * Filter which RfvSegment to delete.
     */
    where: RfvSegmentWhereUniqueInput
  }

  /**
   * RfvSegment deleteMany
   */
  export type RfvSegmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RfvSegments to delete
     */
    where?: RfvSegmentWhereInput
    /**
     * Limit how many RfvSegments to delete.
     */
    limit?: number
  }

  /**
   * RfvSegment without action
   */
  export type RfvSegmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RfvSegment
     */
    select?: RfvSegmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RfvSegment
     */
    omit?: RfvSegmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RfvSegmentInclude<ExtArgs> | null
  }


  /**
   * Model ReceitaPeriodo
   */

  export type AggregateReceitaPeriodo = {
    _count: ReceitaPeriodoCountAggregateOutputType | null
    _avg: ReceitaPeriodoAvgAggregateOutputType | null
    _sum: ReceitaPeriodoSumAggregateOutputType | null
    _min: ReceitaPeriodoMinAggregateOutputType | null
    _max: ReceitaPeriodoMaxAggregateOutputType | null
  }

  export type ReceitaPeriodoAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type ReceitaPeriodoSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type ReceitaPeriodoMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaPeriodoMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaPeriodoCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    valorTotal: number
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceitaPeriodoAvgAggregateInputType = {
    id?: true
    filialId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type ReceitaPeriodoSumAggregateInputType = {
    id?: true
    filialId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type ReceitaPeriodoMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaPeriodoMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaPeriodoCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceitaPeriodoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaPeriodo to aggregate.
     */
    where?: ReceitaPeriodoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaPeriodos to fetch.
     */
    orderBy?: ReceitaPeriodoOrderByWithRelationInput | ReceitaPeriodoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceitaPeriodoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaPeriodos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaPeriodos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReceitaPeriodos
    **/
    _count?: true | ReceitaPeriodoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceitaPeriodoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceitaPeriodoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceitaPeriodoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceitaPeriodoMaxAggregateInputType
  }

  export type GetReceitaPeriodoAggregateType<T extends ReceitaPeriodoAggregateArgs> = {
        [P in keyof T & keyof AggregateReceitaPeriodo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceitaPeriodo[P]>
      : GetScalarType<T[P], AggregateReceitaPeriodo[P]>
  }




  export type ReceitaPeriodoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaPeriodoWhereInput
    orderBy?: ReceitaPeriodoOrderByWithAggregationInput | ReceitaPeriodoOrderByWithAggregationInput[]
    by: ReceitaPeriodoScalarFieldEnum[] | ReceitaPeriodoScalarFieldEnum
    having?: ReceitaPeriodoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceitaPeriodoCountAggregateInputType | true
    _avg?: ReceitaPeriodoAvgAggregateInputType
    _sum?: ReceitaPeriodoSumAggregateInputType
    _min?: ReceitaPeriodoMinAggregateInputType
    _max?: ReceitaPeriodoMaxAggregateInputType
  }

  export type ReceitaPeriodoGroupByOutputType = {
    id: number
    filialId: number | null
    data: Date
    tipoPeriodo: string
    valorTotal: Decimal
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: Date
    updatedAt: Date
    _count: ReceitaPeriodoCountAggregateOutputType | null
    _avg: ReceitaPeriodoAvgAggregateOutputType | null
    _sum: ReceitaPeriodoSumAggregateOutputType | null
    _min: ReceitaPeriodoMinAggregateOutputType | null
    _max: ReceitaPeriodoMaxAggregateOutputType | null
  }

  type GetReceitaPeriodoGroupByPayload<T extends ReceitaPeriodoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceitaPeriodoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceitaPeriodoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceitaPeriodoGroupByOutputType[P]>
            : GetScalarType<T[P], ReceitaPeriodoGroupByOutputType[P]>
        }
      >
    >


  export type ReceitaPeriodoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | ReceitaPeriodo$filialArgs<ExtArgs>
  }, ExtArgs["result"]["receitaPeriodo"]>



  export type ReceitaPeriodoSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceitaPeriodoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "valorTotal" | "quantidadeNotas" | "quantidadeItens" | "createdAt" | "updatedAt", ExtArgs["result"]["receitaPeriodo"]>
  export type ReceitaPeriodoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | ReceitaPeriodo$filialArgs<ExtArgs>
  }

  export type $ReceitaPeriodoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReceitaPeriodo"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      data: Date
      tipoPeriodo: string
      valorTotal: Prisma.Decimal
      quantidadeNotas: number
      quantidadeItens: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receitaPeriodo"]>
    composites: {}
  }

  type ReceitaPeriodoGetPayload<S extends boolean | null | undefined | ReceitaPeriodoDefaultArgs> = $Result.GetResult<Prisma.$ReceitaPeriodoPayload, S>

  type ReceitaPeriodoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReceitaPeriodoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReceitaPeriodoCountAggregateInputType | true
    }

  export interface ReceitaPeriodoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReceitaPeriodo'], meta: { name: 'ReceitaPeriodo' } }
    /**
     * Find zero or one ReceitaPeriodo that matches the filter.
     * @param {ReceitaPeriodoFindUniqueArgs} args - Arguments to find a ReceitaPeriodo
     * @example
     * // Get one ReceitaPeriodo
     * const receitaPeriodo = await prisma.receitaPeriodo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceitaPeriodoFindUniqueArgs>(args: SelectSubset<T, ReceitaPeriodoFindUniqueArgs<ExtArgs>>): Prisma__ReceitaPeriodoClient<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReceitaPeriodo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReceitaPeriodoFindUniqueOrThrowArgs} args - Arguments to find a ReceitaPeriodo
     * @example
     * // Get one ReceitaPeriodo
     * const receitaPeriodo = await prisma.receitaPeriodo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceitaPeriodoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceitaPeriodoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceitaPeriodoClient<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaPeriodo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaPeriodoFindFirstArgs} args - Arguments to find a ReceitaPeriodo
     * @example
     * // Get one ReceitaPeriodo
     * const receitaPeriodo = await prisma.receitaPeriodo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceitaPeriodoFindFirstArgs>(args?: SelectSubset<T, ReceitaPeriodoFindFirstArgs<ExtArgs>>): Prisma__ReceitaPeriodoClient<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaPeriodo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaPeriodoFindFirstOrThrowArgs} args - Arguments to find a ReceitaPeriodo
     * @example
     * // Get one ReceitaPeriodo
     * const receitaPeriodo = await prisma.receitaPeriodo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceitaPeriodoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceitaPeriodoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceitaPeriodoClient<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReceitaPeriodos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaPeriodoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReceitaPeriodos
     * const receitaPeriodos = await prisma.receitaPeriodo.findMany()
     * 
     * // Get first 10 ReceitaPeriodos
     * const receitaPeriodos = await prisma.receitaPeriodo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receitaPeriodoWithIdOnly = await prisma.receitaPeriodo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceitaPeriodoFindManyArgs>(args?: SelectSubset<T, ReceitaPeriodoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReceitaPeriodo.
     * @param {ReceitaPeriodoCreateArgs} args - Arguments to create a ReceitaPeriodo.
     * @example
     * // Create one ReceitaPeriodo
     * const ReceitaPeriodo = await prisma.receitaPeriodo.create({
     *   data: {
     *     // ... data to create a ReceitaPeriodo
     *   }
     * })
     * 
     */
    create<T extends ReceitaPeriodoCreateArgs>(args: SelectSubset<T, ReceitaPeriodoCreateArgs<ExtArgs>>): Prisma__ReceitaPeriodoClient<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReceitaPeriodos.
     * @param {ReceitaPeriodoCreateManyArgs} args - Arguments to create many ReceitaPeriodos.
     * @example
     * // Create many ReceitaPeriodos
     * const receitaPeriodo = await prisma.receitaPeriodo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceitaPeriodoCreateManyArgs>(args?: SelectSubset<T, ReceitaPeriodoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReceitaPeriodo.
     * @param {ReceitaPeriodoDeleteArgs} args - Arguments to delete one ReceitaPeriodo.
     * @example
     * // Delete one ReceitaPeriodo
     * const ReceitaPeriodo = await prisma.receitaPeriodo.delete({
     *   where: {
     *     // ... filter to delete one ReceitaPeriodo
     *   }
     * })
     * 
     */
    delete<T extends ReceitaPeriodoDeleteArgs>(args: SelectSubset<T, ReceitaPeriodoDeleteArgs<ExtArgs>>): Prisma__ReceitaPeriodoClient<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReceitaPeriodo.
     * @param {ReceitaPeriodoUpdateArgs} args - Arguments to update one ReceitaPeriodo.
     * @example
     * // Update one ReceitaPeriodo
     * const receitaPeriodo = await prisma.receitaPeriodo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceitaPeriodoUpdateArgs>(args: SelectSubset<T, ReceitaPeriodoUpdateArgs<ExtArgs>>): Prisma__ReceitaPeriodoClient<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReceitaPeriodos.
     * @param {ReceitaPeriodoDeleteManyArgs} args - Arguments to filter ReceitaPeriodos to delete.
     * @example
     * // Delete a few ReceitaPeriodos
     * const { count } = await prisma.receitaPeriodo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceitaPeriodoDeleteManyArgs>(args?: SelectSubset<T, ReceitaPeriodoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReceitaPeriodos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaPeriodoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReceitaPeriodos
     * const receitaPeriodo = await prisma.receitaPeriodo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceitaPeriodoUpdateManyArgs>(args: SelectSubset<T, ReceitaPeriodoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReceitaPeriodo.
     * @param {ReceitaPeriodoUpsertArgs} args - Arguments to update or create a ReceitaPeriodo.
     * @example
     * // Update or create a ReceitaPeriodo
     * const receitaPeriodo = await prisma.receitaPeriodo.upsert({
     *   create: {
     *     // ... data to create a ReceitaPeriodo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReceitaPeriodo we want to update
     *   }
     * })
     */
    upsert<T extends ReceitaPeriodoUpsertArgs>(args: SelectSubset<T, ReceitaPeriodoUpsertArgs<ExtArgs>>): Prisma__ReceitaPeriodoClient<$Result.GetResult<Prisma.$ReceitaPeriodoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReceitaPeriodos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaPeriodoCountArgs} args - Arguments to filter ReceitaPeriodos to count.
     * @example
     * // Count the number of ReceitaPeriodos
     * const count = await prisma.receitaPeriodo.count({
     *   where: {
     *     // ... the filter for the ReceitaPeriodos we want to count
     *   }
     * })
    **/
    count<T extends ReceitaPeriodoCountArgs>(
      args?: Subset<T, ReceitaPeriodoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceitaPeriodoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReceitaPeriodo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaPeriodoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceitaPeriodoAggregateArgs>(args: Subset<T, ReceitaPeriodoAggregateArgs>): Prisma.PrismaPromise<GetReceitaPeriodoAggregateType<T>>

    /**
     * Group by ReceitaPeriodo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaPeriodoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceitaPeriodoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceitaPeriodoGroupByArgs['orderBy'] }
        : { orderBy?: ReceitaPeriodoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceitaPeriodoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceitaPeriodoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReceitaPeriodo model
   */
  readonly fields: ReceitaPeriodoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReceitaPeriodo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceitaPeriodoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends ReceitaPeriodo$filialArgs<ExtArgs> = {}>(args?: Subset<T, ReceitaPeriodo$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReceitaPeriodo model
   */
  interface ReceitaPeriodoFieldRefs {
    readonly id: FieldRef<"ReceitaPeriodo", 'Int'>
    readonly filialId: FieldRef<"ReceitaPeriodo", 'Int'>
    readonly data: FieldRef<"ReceitaPeriodo", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ReceitaPeriodo", 'String'>
    readonly valorTotal: FieldRef<"ReceitaPeriodo", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"ReceitaPeriodo", 'Int'>
    readonly quantidadeItens: FieldRef<"ReceitaPeriodo", 'Int'>
    readonly createdAt: FieldRef<"ReceitaPeriodo", 'DateTime'>
    readonly updatedAt: FieldRef<"ReceitaPeriodo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReceitaPeriodo findUnique
   */
  export type ReceitaPeriodoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaPeriodo to fetch.
     */
    where: ReceitaPeriodoWhereUniqueInput
  }

  /**
   * ReceitaPeriodo findUniqueOrThrow
   */
  export type ReceitaPeriodoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaPeriodo to fetch.
     */
    where: ReceitaPeriodoWhereUniqueInput
  }

  /**
   * ReceitaPeriodo findFirst
   */
  export type ReceitaPeriodoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaPeriodo to fetch.
     */
    where?: ReceitaPeriodoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaPeriodos to fetch.
     */
    orderBy?: ReceitaPeriodoOrderByWithRelationInput | ReceitaPeriodoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaPeriodos.
     */
    cursor?: ReceitaPeriodoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaPeriodos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaPeriodos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaPeriodos.
     */
    distinct?: ReceitaPeriodoScalarFieldEnum | ReceitaPeriodoScalarFieldEnum[]
  }

  /**
   * ReceitaPeriodo findFirstOrThrow
   */
  export type ReceitaPeriodoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaPeriodo to fetch.
     */
    where?: ReceitaPeriodoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaPeriodos to fetch.
     */
    orderBy?: ReceitaPeriodoOrderByWithRelationInput | ReceitaPeriodoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaPeriodos.
     */
    cursor?: ReceitaPeriodoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaPeriodos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaPeriodos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaPeriodos.
     */
    distinct?: ReceitaPeriodoScalarFieldEnum | ReceitaPeriodoScalarFieldEnum[]
  }

  /**
   * ReceitaPeriodo findMany
   */
  export type ReceitaPeriodoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaPeriodos to fetch.
     */
    where?: ReceitaPeriodoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaPeriodos to fetch.
     */
    orderBy?: ReceitaPeriodoOrderByWithRelationInput | ReceitaPeriodoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReceitaPeriodos.
     */
    cursor?: ReceitaPeriodoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaPeriodos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaPeriodos.
     */
    skip?: number
    distinct?: ReceitaPeriodoScalarFieldEnum | ReceitaPeriodoScalarFieldEnum[]
  }

  /**
   * ReceitaPeriodo create
   */
  export type ReceitaPeriodoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReceitaPeriodo.
     */
    data: XOR<ReceitaPeriodoCreateInput, ReceitaPeriodoUncheckedCreateInput>
  }

  /**
   * ReceitaPeriodo createMany
   */
  export type ReceitaPeriodoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReceitaPeriodos.
     */
    data: ReceitaPeriodoCreateManyInput | ReceitaPeriodoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReceitaPeriodo update
   */
  export type ReceitaPeriodoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReceitaPeriodo.
     */
    data: XOR<ReceitaPeriodoUpdateInput, ReceitaPeriodoUncheckedUpdateInput>
    /**
     * Choose, which ReceitaPeriodo to update.
     */
    where: ReceitaPeriodoWhereUniqueInput
  }

  /**
   * ReceitaPeriodo updateMany
   */
  export type ReceitaPeriodoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReceitaPeriodos.
     */
    data: XOR<ReceitaPeriodoUpdateManyMutationInput, ReceitaPeriodoUncheckedUpdateManyInput>
    /**
     * Filter which ReceitaPeriodos to update
     */
    where?: ReceitaPeriodoWhereInput
    /**
     * Limit how many ReceitaPeriodos to update.
     */
    limit?: number
  }

  /**
   * ReceitaPeriodo upsert
   */
  export type ReceitaPeriodoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReceitaPeriodo to update in case it exists.
     */
    where: ReceitaPeriodoWhereUniqueInput
    /**
     * In case the ReceitaPeriodo found by the `where` argument doesn't exist, create a new ReceitaPeriodo with this data.
     */
    create: XOR<ReceitaPeriodoCreateInput, ReceitaPeriodoUncheckedCreateInput>
    /**
     * In case the ReceitaPeriodo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceitaPeriodoUpdateInput, ReceitaPeriodoUncheckedUpdateInput>
  }

  /**
   * ReceitaPeriodo delete
   */
  export type ReceitaPeriodoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
    /**
     * Filter which ReceitaPeriodo to delete.
     */
    where: ReceitaPeriodoWhereUniqueInput
  }

  /**
   * ReceitaPeriodo deleteMany
   */
  export type ReceitaPeriodoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaPeriodos to delete
     */
    where?: ReceitaPeriodoWhereInput
    /**
     * Limit how many ReceitaPeriodos to delete.
     */
    limit?: number
  }

  /**
   * ReceitaPeriodo.filial
   */
  export type ReceitaPeriodo$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * ReceitaPeriodo without action
   */
  export type ReceitaPeriodoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaPeriodo
     */
    select?: ReceitaPeriodoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaPeriodo
     */
    omit?: ReceitaPeriodoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaPeriodoInclude<ExtArgs> | null
  }


  /**
   * Model ReceitaTipoProduto
   */

  export type AggregateReceitaTipoProduto = {
    _count: ReceitaTipoProdutoCountAggregateOutputType | null
    _avg: ReceitaTipoProdutoAvgAggregateOutputType | null
    _sum: ReceitaTipoProdutoSumAggregateOutputType | null
    _min: ReceitaTipoProdutoMinAggregateOutputType | null
    _max: ReceitaTipoProdutoMaxAggregateOutputType | null
  }

  export type ReceitaTipoProdutoAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    produtoId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type ReceitaTipoProdutoSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    produtoId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type ReceitaTipoProdutoMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    produtoId: number | null
    data: Date | null
    tipoPeriodo: string | null
    tipoProduto: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaTipoProdutoMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    produtoId: number | null
    data: Date | null
    tipoPeriodo: string | null
    tipoProduto: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaTipoProdutoCountAggregateOutputType = {
    id: number
    filialId: number
    produtoId: number
    data: number
    tipoPeriodo: number
    tipoProduto: number
    valorTotal: number
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceitaTipoProdutoAvgAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type ReceitaTipoProdutoSumAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type ReceitaTipoProdutoMinAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    data?: true
    tipoPeriodo?: true
    tipoProduto?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaTipoProdutoMaxAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    data?: true
    tipoPeriodo?: true
    tipoProduto?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaTipoProdutoCountAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    data?: true
    tipoPeriodo?: true
    tipoProduto?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceitaTipoProdutoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaTipoProduto to aggregate.
     */
    where?: ReceitaTipoProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaTipoProdutos to fetch.
     */
    orderBy?: ReceitaTipoProdutoOrderByWithRelationInput | ReceitaTipoProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceitaTipoProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaTipoProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaTipoProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReceitaTipoProdutos
    **/
    _count?: true | ReceitaTipoProdutoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceitaTipoProdutoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceitaTipoProdutoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceitaTipoProdutoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceitaTipoProdutoMaxAggregateInputType
  }

  export type GetReceitaTipoProdutoAggregateType<T extends ReceitaTipoProdutoAggregateArgs> = {
        [P in keyof T & keyof AggregateReceitaTipoProduto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceitaTipoProduto[P]>
      : GetScalarType<T[P], AggregateReceitaTipoProduto[P]>
  }




  export type ReceitaTipoProdutoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaTipoProdutoWhereInput
    orderBy?: ReceitaTipoProdutoOrderByWithAggregationInput | ReceitaTipoProdutoOrderByWithAggregationInput[]
    by: ReceitaTipoProdutoScalarFieldEnum[] | ReceitaTipoProdutoScalarFieldEnum
    having?: ReceitaTipoProdutoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceitaTipoProdutoCountAggregateInputType | true
    _avg?: ReceitaTipoProdutoAvgAggregateInputType
    _sum?: ReceitaTipoProdutoSumAggregateInputType
    _min?: ReceitaTipoProdutoMinAggregateInputType
    _max?: ReceitaTipoProdutoMaxAggregateInputType
  }

  export type ReceitaTipoProdutoGroupByOutputType = {
    id: number
    filialId: number | null
    produtoId: number | null
    data: Date
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: Date
    updatedAt: Date
    _count: ReceitaTipoProdutoCountAggregateOutputType | null
    _avg: ReceitaTipoProdutoAvgAggregateOutputType | null
    _sum: ReceitaTipoProdutoSumAggregateOutputType | null
    _min: ReceitaTipoProdutoMinAggregateOutputType | null
    _max: ReceitaTipoProdutoMaxAggregateOutputType | null
  }

  type GetReceitaTipoProdutoGroupByPayload<T extends ReceitaTipoProdutoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceitaTipoProdutoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceitaTipoProdutoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceitaTipoProdutoGroupByOutputType[P]>
            : GetScalarType<T[P], ReceitaTipoProdutoGroupByOutputType[P]>
        }
      >
    >


  export type ReceitaTipoProdutoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    produtoId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    tipoProduto?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | ReceitaTipoProduto$filialArgs<ExtArgs>
    produto?: boolean | ReceitaTipoProduto$produtoArgs<ExtArgs>
  }, ExtArgs["result"]["receitaTipoProduto"]>



  export type ReceitaTipoProdutoSelectScalar = {
    id?: boolean
    filialId?: boolean
    produtoId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    tipoProduto?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceitaTipoProdutoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "produtoId" | "data" | "tipoPeriodo" | "tipoProduto" | "valorTotal" | "quantidadeNotas" | "quantidadeItens" | "createdAt" | "updatedAt", ExtArgs["result"]["receitaTipoProduto"]>
  export type ReceitaTipoProdutoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | ReceitaTipoProduto$filialArgs<ExtArgs>
    produto?: boolean | ReceitaTipoProduto$produtoArgs<ExtArgs>
  }

  export type $ReceitaTipoProdutoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReceitaTipoProduto"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      produto: Prisma.$ProdutoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      produtoId: number | null
      data: Date
      tipoPeriodo: string
      tipoProduto: string
      valorTotal: Prisma.Decimal
      quantidadeNotas: number
      quantidadeItens: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receitaTipoProduto"]>
    composites: {}
  }

  type ReceitaTipoProdutoGetPayload<S extends boolean | null | undefined | ReceitaTipoProdutoDefaultArgs> = $Result.GetResult<Prisma.$ReceitaTipoProdutoPayload, S>

  type ReceitaTipoProdutoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReceitaTipoProdutoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReceitaTipoProdutoCountAggregateInputType | true
    }

  export interface ReceitaTipoProdutoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReceitaTipoProduto'], meta: { name: 'ReceitaTipoProduto' } }
    /**
     * Find zero or one ReceitaTipoProduto that matches the filter.
     * @param {ReceitaTipoProdutoFindUniqueArgs} args - Arguments to find a ReceitaTipoProduto
     * @example
     * // Get one ReceitaTipoProduto
     * const receitaTipoProduto = await prisma.receitaTipoProduto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceitaTipoProdutoFindUniqueArgs>(args: SelectSubset<T, ReceitaTipoProdutoFindUniqueArgs<ExtArgs>>): Prisma__ReceitaTipoProdutoClient<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReceitaTipoProduto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReceitaTipoProdutoFindUniqueOrThrowArgs} args - Arguments to find a ReceitaTipoProduto
     * @example
     * // Get one ReceitaTipoProduto
     * const receitaTipoProduto = await prisma.receitaTipoProduto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceitaTipoProdutoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceitaTipoProdutoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceitaTipoProdutoClient<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaTipoProduto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaTipoProdutoFindFirstArgs} args - Arguments to find a ReceitaTipoProduto
     * @example
     * // Get one ReceitaTipoProduto
     * const receitaTipoProduto = await prisma.receitaTipoProduto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceitaTipoProdutoFindFirstArgs>(args?: SelectSubset<T, ReceitaTipoProdutoFindFirstArgs<ExtArgs>>): Prisma__ReceitaTipoProdutoClient<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaTipoProduto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaTipoProdutoFindFirstOrThrowArgs} args - Arguments to find a ReceitaTipoProduto
     * @example
     * // Get one ReceitaTipoProduto
     * const receitaTipoProduto = await prisma.receitaTipoProduto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceitaTipoProdutoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceitaTipoProdutoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceitaTipoProdutoClient<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReceitaTipoProdutos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaTipoProdutoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReceitaTipoProdutos
     * const receitaTipoProdutos = await prisma.receitaTipoProduto.findMany()
     * 
     * // Get first 10 ReceitaTipoProdutos
     * const receitaTipoProdutos = await prisma.receitaTipoProduto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receitaTipoProdutoWithIdOnly = await prisma.receitaTipoProduto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceitaTipoProdutoFindManyArgs>(args?: SelectSubset<T, ReceitaTipoProdutoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReceitaTipoProduto.
     * @param {ReceitaTipoProdutoCreateArgs} args - Arguments to create a ReceitaTipoProduto.
     * @example
     * // Create one ReceitaTipoProduto
     * const ReceitaTipoProduto = await prisma.receitaTipoProduto.create({
     *   data: {
     *     // ... data to create a ReceitaTipoProduto
     *   }
     * })
     * 
     */
    create<T extends ReceitaTipoProdutoCreateArgs>(args: SelectSubset<T, ReceitaTipoProdutoCreateArgs<ExtArgs>>): Prisma__ReceitaTipoProdutoClient<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReceitaTipoProdutos.
     * @param {ReceitaTipoProdutoCreateManyArgs} args - Arguments to create many ReceitaTipoProdutos.
     * @example
     * // Create many ReceitaTipoProdutos
     * const receitaTipoProduto = await prisma.receitaTipoProduto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceitaTipoProdutoCreateManyArgs>(args?: SelectSubset<T, ReceitaTipoProdutoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReceitaTipoProduto.
     * @param {ReceitaTipoProdutoDeleteArgs} args - Arguments to delete one ReceitaTipoProduto.
     * @example
     * // Delete one ReceitaTipoProduto
     * const ReceitaTipoProduto = await prisma.receitaTipoProduto.delete({
     *   where: {
     *     // ... filter to delete one ReceitaTipoProduto
     *   }
     * })
     * 
     */
    delete<T extends ReceitaTipoProdutoDeleteArgs>(args: SelectSubset<T, ReceitaTipoProdutoDeleteArgs<ExtArgs>>): Prisma__ReceitaTipoProdutoClient<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReceitaTipoProduto.
     * @param {ReceitaTipoProdutoUpdateArgs} args - Arguments to update one ReceitaTipoProduto.
     * @example
     * // Update one ReceitaTipoProduto
     * const receitaTipoProduto = await prisma.receitaTipoProduto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceitaTipoProdutoUpdateArgs>(args: SelectSubset<T, ReceitaTipoProdutoUpdateArgs<ExtArgs>>): Prisma__ReceitaTipoProdutoClient<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReceitaTipoProdutos.
     * @param {ReceitaTipoProdutoDeleteManyArgs} args - Arguments to filter ReceitaTipoProdutos to delete.
     * @example
     * // Delete a few ReceitaTipoProdutos
     * const { count } = await prisma.receitaTipoProduto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceitaTipoProdutoDeleteManyArgs>(args?: SelectSubset<T, ReceitaTipoProdutoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReceitaTipoProdutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaTipoProdutoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReceitaTipoProdutos
     * const receitaTipoProduto = await prisma.receitaTipoProduto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceitaTipoProdutoUpdateManyArgs>(args: SelectSubset<T, ReceitaTipoProdutoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReceitaTipoProduto.
     * @param {ReceitaTipoProdutoUpsertArgs} args - Arguments to update or create a ReceitaTipoProduto.
     * @example
     * // Update or create a ReceitaTipoProduto
     * const receitaTipoProduto = await prisma.receitaTipoProduto.upsert({
     *   create: {
     *     // ... data to create a ReceitaTipoProduto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReceitaTipoProduto we want to update
     *   }
     * })
     */
    upsert<T extends ReceitaTipoProdutoUpsertArgs>(args: SelectSubset<T, ReceitaTipoProdutoUpsertArgs<ExtArgs>>): Prisma__ReceitaTipoProdutoClient<$Result.GetResult<Prisma.$ReceitaTipoProdutoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReceitaTipoProdutos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaTipoProdutoCountArgs} args - Arguments to filter ReceitaTipoProdutos to count.
     * @example
     * // Count the number of ReceitaTipoProdutos
     * const count = await prisma.receitaTipoProduto.count({
     *   where: {
     *     // ... the filter for the ReceitaTipoProdutos we want to count
     *   }
     * })
    **/
    count<T extends ReceitaTipoProdutoCountArgs>(
      args?: Subset<T, ReceitaTipoProdutoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceitaTipoProdutoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReceitaTipoProduto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaTipoProdutoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceitaTipoProdutoAggregateArgs>(args: Subset<T, ReceitaTipoProdutoAggregateArgs>): Prisma.PrismaPromise<GetReceitaTipoProdutoAggregateType<T>>

    /**
     * Group by ReceitaTipoProduto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaTipoProdutoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceitaTipoProdutoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceitaTipoProdutoGroupByArgs['orderBy'] }
        : { orderBy?: ReceitaTipoProdutoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceitaTipoProdutoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceitaTipoProdutoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReceitaTipoProduto model
   */
  readonly fields: ReceitaTipoProdutoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReceitaTipoProduto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceitaTipoProdutoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends ReceitaTipoProduto$filialArgs<ExtArgs> = {}>(args?: Subset<T, ReceitaTipoProduto$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    produto<T extends ReceitaTipoProduto$produtoArgs<ExtArgs> = {}>(args?: Subset<T, ReceitaTipoProduto$produtoArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReceitaTipoProduto model
   */
  interface ReceitaTipoProdutoFieldRefs {
    readonly id: FieldRef<"ReceitaTipoProduto", 'Int'>
    readonly filialId: FieldRef<"ReceitaTipoProduto", 'Int'>
    readonly produtoId: FieldRef<"ReceitaTipoProduto", 'Int'>
    readonly data: FieldRef<"ReceitaTipoProduto", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ReceitaTipoProduto", 'String'>
    readonly tipoProduto: FieldRef<"ReceitaTipoProduto", 'String'>
    readonly valorTotal: FieldRef<"ReceitaTipoProduto", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"ReceitaTipoProduto", 'Int'>
    readonly quantidadeItens: FieldRef<"ReceitaTipoProduto", 'Int'>
    readonly createdAt: FieldRef<"ReceitaTipoProduto", 'DateTime'>
    readonly updatedAt: FieldRef<"ReceitaTipoProduto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReceitaTipoProduto findUnique
   */
  export type ReceitaTipoProdutoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaTipoProduto to fetch.
     */
    where: ReceitaTipoProdutoWhereUniqueInput
  }

  /**
   * ReceitaTipoProduto findUniqueOrThrow
   */
  export type ReceitaTipoProdutoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaTipoProduto to fetch.
     */
    where: ReceitaTipoProdutoWhereUniqueInput
  }

  /**
   * ReceitaTipoProduto findFirst
   */
  export type ReceitaTipoProdutoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaTipoProduto to fetch.
     */
    where?: ReceitaTipoProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaTipoProdutos to fetch.
     */
    orderBy?: ReceitaTipoProdutoOrderByWithRelationInput | ReceitaTipoProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaTipoProdutos.
     */
    cursor?: ReceitaTipoProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaTipoProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaTipoProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaTipoProdutos.
     */
    distinct?: ReceitaTipoProdutoScalarFieldEnum | ReceitaTipoProdutoScalarFieldEnum[]
  }

  /**
   * ReceitaTipoProduto findFirstOrThrow
   */
  export type ReceitaTipoProdutoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaTipoProduto to fetch.
     */
    where?: ReceitaTipoProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaTipoProdutos to fetch.
     */
    orderBy?: ReceitaTipoProdutoOrderByWithRelationInput | ReceitaTipoProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaTipoProdutos.
     */
    cursor?: ReceitaTipoProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaTipoProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaTipoProdutos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaTipoProdutos.
     */
    distinct?: ReceitaTipoProdutoScalarFieldEnum | ReceitaTipoProdutoScalarFieldEnum[]
  }

  /**
   * ReceitaTipoProduto findMany
   */
  export type ReceitaTipoProdutoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaTipoProdutos to fetch.
     */
    where?: ReceitaTipoProdutoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaTipoProdutos to fetch.
     */
    orderBy?: ReceitaTipoProdutoOrderByWithRelationInput | ReceitaTipoProdutoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReceitaTipoProdutos.
     */
    cursor?: ReceitaTipoProdutoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaTipoProdutos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaTipoProdutos.
     */
    skip?: number
    distinct?: ReceitaTipoProdutoScalarFieldEnum | ReceitaTipoProdutoScalarFieldEnum[]
  }

  /**
   * ReceitaTipoProduto create
   */
  export type ReceitaTipoProdutoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReceitaTipoProduto.
     */
    data: XOR<ReceitaTipoProdutoCreateInput, ReceitaTipoProdutoUncheckedCreateInput>
  }

  /**
   * ReceitaTipoProduto createMany
   */
  export type ReceitaTipoProdutoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReceitaTipoProdutos.
     */
    data: ReceitaTipoProdutoCreateManyInput | ReceitaTipoProdutoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReceitaTipoProduto update
   */
  export type ReceitaTipoProdutoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReceitaTipoProduto.
     */
    data: XOR<ReceitaTipoProdutoUpdateInput, ReceitaTipoProdutoUncheckedUpdateInput>
    /**
     * Choose, which ReceitaTipoProduto to update.
     */
    where: ReceitaTipoProdutoWhereUniqueInput
  }

  /**
   * ReceitaTipoProduto updateMany
   */
  export type ReceitaTipoProdutoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReceitaTipoProdutos.
     */
    data: XOR<ReceitaTipoProdutoUpdateManyMutationInput, ReceitaTipoProdutoUncheckedUpdateManyInput>
    /**
     * Filter which ReceitaTipoProdutos to update
     */
    where?: ReceitaTipoProdutoWhereInput
    /**
     * Limit how many ReceitaTipoProdutos to update.
     */
    limit?: number
  }

  /**
   * ReceitaTipoProduto upsert
   */
  export type ReceitaTipoProdutoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReceitaTipoProduto to update in case it exists.
     */
    where: ReceitaTipoProdutoWhereUniqueInput
    /**
     * In case the ReceitaTipoProduto found by the `where` argument doesn't exist, create a new ReceitaTipoProduto with this data.
     */
    create: XOR<ReceitaTipoProdutoCreateInput, ReceitaTipoProdutoUncheckedCreateInput>
    /**
     * In case the ReceitaTipoProduto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceitaTipoProdutoUpdateInput, ReceitaTipoProdutoUncheckedUpdateInput>
  }

  /**
   * ReceitaTipoProduto delete
   */
  export type ReceitaTipoProdutoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
    /**
     * Filter which ReceitaTipoProduto to delete.
     */
    where: ReceitaTipoProdutoWhereUniqueInput
  }

  /**
   * ReceitaTipoProduto deleteMany
   */
  export type ReceitaTipoProdutoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaTipoProdutos to delete
     */
    where?: ReceitaTipoProdutoWhereInput
    /**
     * Limit how many ReceitaTipoProdutos to delete.
     */
    limit?: number
  }

  /**
   * ReceitaTipoProduto.filial
   */
  export type ReceitaTipoProduto$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * ReceitaTipoProduto.produto
   */
  export type ReceitaTipoProduto$produtoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Produto
     */
    select?: ProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Produto
     */
    omit?: ProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProdutoInclude<ExtArgs> | null
    where?: ProdutoWhereInput
  }

  /**
   * ReceitaTipoProduto without action
   */
  export type ReceitaTipoProdutoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaTipoProduto
     */
    select?: ReceitaTipoProdutoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaTipoProduto
     */
    omit?: ReceitaTipoProdutoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaTipoProdutoInclude<ExtArgs> | null
  }


  /**
   * Model ReceitaProdutoModelo
   */

  export type AggregateReceitaProdutoModelo = {
    _count: ReceitaProdutoModeloCountAggregateOutputType | null
    _avg: ReceitaProdutoModeloAvgAggregateOutputType | null
    _sum: ReceitaProdutoModeloSumAggregateOutputType | null
    _min: ReceitaProdutoModeloMinAggregateOutputType | null
    _max: ReceitaProdutoModeloMaxAggregateOutputType | null
  }

  export type ReceitaProdutoModeloAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    produtoId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    ranking: number | null
  }

  export type ReceitaProdutoModeloSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    produtoId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    ranking: number | null
  }

  export type ReceitaProdutoModeloMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    produtoId: number | null
    data: Date | null
    tipoPeriodo: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    ranking: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaProdutoModeloMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    produtoId: number | null
    data: Date | null
    tipoPeriodo: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    ranking: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaProdutoModeloCountAggregateOutputType = {
    id: number
    filialId: number
    produtoId: number
    data: number
    tipoPeriodo: number
    valorTotal: number
    quantidadeNotas: number
    quantidadeItens: number
    ranking: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceitaProdutoModeloAvgAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    ranking?: true
  }

  export type ReceitaProdutoModeloSumAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    ranking?: true
  }

  export type ReceitaProdutoModeloMinAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    ranking?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaProdutoModeloMaxAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    ranking?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaProdutoModeloCountAggregateInputType = {
    id?: true
    filialId?: true
    produtoId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    ranking?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceitaProdutoModeloAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaProdutoModelo to aggregate.
     */
    where?: ReceitaProdutoModeloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaProdutoModelos to fetch.
     */
    orderBy?: ReceitaProdutoModeloOrderByWithRelationInput | ReceitaProdutoModeloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceitaProdutoModeloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaProdutoModelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaProdutoModelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReceitaProdutoModelos
    **/
    _count?: true | ReceitaProdutoModeloCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceitaProdutoModeloAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceitaProdutoModeloSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceitaProdutoModeloMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceitaProdutoModeloMaxAggregateInputType
  }

  export type GetReceitaProdutoModeloAggregateType<T extends ReceitaProdutoModeloAggregateArgs> = {
        [P in keyof T & keyof AggregateReceitaProdutoModelo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceitaProdutoModelo[P]>
      : GetScalarType<T[P], AggregateReceitaProdutoModelo[P]>
  }




  export type ReceitaProdutoModeloGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaProdutoModeloWhereInput
    orderBy?: ReceitaProdutoModeloOrderByWithAggregationInput | ReceitaProdutoModeloOrderByWithAggregationInput[]
    by: ReceitaProdutoModeloScalarFieldEnum[] | ReceitaProdutoModeloScalarFieldEnum
    having?: ReceitaProdutoModeloScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceitaProdutoModeloCountAggregateInputType | true
    _avg?: ReceitaProdutoModeloAvgAggregateInputType
    _sum?: ReceitaProdutoModeloSumAggregateInputType
    _min?: ReceitaProdutoModeloMinAggregateInputType
    _max?: ReceitaProdutoModeloMaxAggregateInputType
  }

  export type ReceitaProdutoModeloGroupByOutputType = {
    id: number
    filialId: number | null
    produtoId: number
    data: Date
    tipoPeriodo: string
    valorTotal: Decimal
    quantidadeNotas: number
    quantidadeItens: number
    ranking: number | null
    createdAt: Date
    updatedAt: Date
    _count: ReceitaProdutoModeloCountAggregateOutputType | null
    _avg: ReceitaProdutoModeloAvgAggregateOutputType | null
    _sum: ReceitaProdutoModeloSumAggregateOutputType | null
    _min: ReceitaProdutoModeloMinAggregateOutputType | null
    _max: ReceitaProdutoModeloMaxAggregateOutputType | null
  }

  type GetReceitaProdutoModeloGroupByPayload<T extends ReceitaProdutoModeloGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceitaProdutoModeloGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceitaProdutoModeloGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceitaProdutoModeloGroupByOutputType[P]>
            : GetScalarType<T[P], ReceitaProdutoModeloGroupByOutputType[P]>
        }
      >
    >


  export type ReceitaProdutoModeloSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    produtoId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    ranking?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | ReceitaProdutoModelo$filialArgs<ExtArgs>
    produto?: boolean | ProdutoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["receitaProdutoModelo"]>



  export type ReceitaProdutoModeloSelectScalar = {
    id?: boolean
    filialId?: boolean
    produtoId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    ranking?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceitaProdutoModeloOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "produtoId" | "data" | "tipoPeriodo" | "valorTotal" | "quantidadeNotas" | "quantidadeItens" | "ranking" | "createdAt" | "updatedAt", ExtArgs["result"]["receitaProdutoModelo"]>
  export type ReceitaProdutoModeloInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | ReceitaProdutoModelo$filialArgs<ExtArgs>
    produto?: boolean | ProdutoDefaultArgs<ExtArgs>
  }

  export type $ReceitaProdutoModeloPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReceitaProdutoModelo"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      produto: Prisma.$ProdutoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      produtoId: number
      data: Date
      tipoPeriodo: string
      valorTotal: Prisma.Decimal
      quantidadeNotas: number
      quantidadeItens: number
      ranking: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receitaProdutoModelo"]>
    composites: {}
  }

  type ReceitaProdutoModeloGetPayload<S extends boolean | null | undefined | ReceitaProdutoModeloDefaultArgs> = $Result.GetResult<Prisma.$ReceitaProdutoModeloPayload, S>

  type ReceitaProdutoModeloCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReceitaProdutoModeloFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReceitaProdutoModeloCountAggregateInputType | true
    }

  export interface ReceitaProdutoModeloDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReceitaProdutoModelo'], meta: { name: 'ReceitaProdutoModelo' } }
    /**
     * Find zero or one ReceitaProdutoModelo that matches the filter.
     * @param {ReceitaProdutoModeloFindUniqueArgs} args - Arguments to find a ReceitaProdutoModelo
     * @example
     * // Get one ReceitaProdutoModelo
     * const receitaProdutoModelo = await prisma.receitaProdutoModelo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceitaProdutoModeloFindUniqueArgs>(args: SelectSubset<T, ReceitaProdutoModeloFindUniqueArgs<ExtArgs>>): Prisma__ReceitaProdutoModeloClient<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReceitaProdutoModelo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReceitaProdutoModeloFindUniqueOrThrowArgs} args - Arguments to find a ReceitaProdutoModelo
     * @example
     * // Get one ReceitaProdutoModelo
     * const receitaProdutoModelo = await prisma.receitaProdutoModelo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceitaProdutoModeloFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceitaProdutoModeloFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceitaProdutoModeloClient<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaProdutoModelo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaProdutoModeloFindFirstArgs} args - Arguments to find a ReceitaProdutoModelo
     * @example
     * // Get one ReceitaProdutoModelo
     * const receitaProdutoModelo = await prisma.receitaProdutoModelo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceitaProdutoModeloFindFirstArgs>(args?: SelectSubset<T, ReceitaProdutoModeloFindFirstArgs<ExtArgs>>): Prisma__ReceitaProdutoModeloClient<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaProdutoModelo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaProdutoModeloFindFirstOrThrowArgs} args - Arguments to find a ReceitaProdutoModelo
     * @example
     * // Get one ReceitaProdutoModelo
     * const receitaProdutoModelo = await prisma.receitaProdutoModelo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceitaProdutoModeloFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceitaProdutoModeloFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceitaProdutoModeloClient<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReceitaProdutoModelos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaProdutoModeloFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReceitaProdutoModelos
     * const receitaProdutoModelos = await prisma.receitaProdutoModelo.findMany()
     * 
     * // Get first 10 ReceitaProdutoModelos
     * const receitaProdutoModelos = await prisma.receitaProdutoModelo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receitaProdutoModeloWithIdOnly = await prisma.receitaProdutoModelo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceitaProdutoModeloFindManyArgs>(args?: SelectSubset<T, ReceitaProdutoModeloFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReceitaProdutoModelo.
     * @param {ReceitaProdutoModeloCreateArgs} args - Arguments to create a ReceitaProdutoModelo.
     * @example
     * // Create one ReceitaProdutoModelo
     * const ReceitaProdutoModelo = await prisma.receitaProdutoModelo.create({
     *   data: {
     *     // ... data to create a ReceitaProdutoModelo
     *   }
     * })
     * 
     */
    create<T extends ReceitaProdutoModeloCreateArgs>(args: SelectSubset<T, ReceitaProdutoModeloCreateArgs<ExtArgs>>): Prisma__ReceitaProdutoModeloClient<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReceitaProdutoModelos.
     * @param {ReceitaProdutoModeloCreateManyArgs} args - Arguments to create many ReceitaProdutoModelos.
     * @example
     * // Create many ReceitaProdutoModelos
     * const receitaProdutoModelo = await prisma.receitaProdutoModelo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceitaProdutoModeloCreateManyArgs>(args?: SelectSubset<T, ReceitaProdutoModeloCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReceitaProdutoModelo.
     * @param {ReceitaProdutoModeloDeleteArgs} args - Arguments to delete one ReceitaProdutoModelo.
     * @example
     * // Delete one ReceitaProdutoModelo
     * const ReceitaProdutoModelo = await prisma.receitaProdutoModelo.delete({
     *   where: {
     *     // ... filter to delete one ReceitaProdutoModelo
     *   }
     * })
     * 
     */
    delete<T extends ReceitaProdutoModeloDeleteArgs>(args: SelectSubset<T, ReceitaProdutoModeloDeleteArgs<ExtArgs>>): Prisma__ReceitaProdutoModeloClient<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReceitaProdutoModelo.
     * @param {ReceitaProdutoModeloUpdateArgs} args - Arguments to update one ReceitaProdutoModelo.
     * @example
     * // Update one ReceitaProdutoModelo
     * const receitaProdutoModelo = await prisma.receitaProdutoModelo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceitaProdutoModeloUpdateArgs>(args: SelectSubset<T, ReceitaProdutoModeloUpdateArgs<ExtArgs>>): Prisma__ReceitaProdutoModeloClient<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReceitaProdutoModelos.
     * @param {ReceitaProdutoModeloDeleteManyArgs} args - Arguments to filter ReceitaProdutoModelos to delete.
     * @example
     * // Delete a few ReceitaProdutoModelos
     * const { count } = await prisma.receitaProdutoModelo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceitaProdutoModeloDeleteManyArgs>(args?: SelectSubset<T, ReceitaProdutoModeloDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReceitaProdutoModelos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaProdutoModeloUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReceitaProdutoModelos
     * const receitaProdutoModelo = await prisma.receitaProdutoModelo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceitaProdutoModeloUpdateManyArgs>(args: SelectSubset<T, ReceitaProdutoModeloUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReceitaProdutoModelo.
     * @param {ReceitaProdutoModeloUpsertArgs} args - Arguments to update or create a ReceitaProdutoModelo.
     * @example
     * // Update or create a ReceitaProdutoModelo
     * const receitaProdutoModelo = await prisma.receitaProdutoModelo.upsert({
     *   create: {
     *     // ... data to create a ReceitaProdutoModelo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReceitaProdutoModelo we want to update
     *   }
     * })
     */
    upsert<T extends ReceitaProdutoModeloUpsertArgs>(args: SelectSubset<T, ReceitaProdutoModeloUpsertArgs<ExtArgs>>): Prisma__ReceitaProdutoModeloClient<$Result.GetResult<Prisma.$ReceitaProdutoModeloPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReceitaProdutoModelos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaProdutoModeloCountArgs} args - Arguments to filter ReceitaProdutoModelos to count.
     * @example
     * // Count the number of ReceitaProdutoModelos
     * const count = await prisma.receitaProdutoModelo.count({
     *   where: {
     *     // ... the filter for the ReceitaProdutoModelos we want to count
     *   }
     * })
    **/
    count<T extends ReceitaProdutoModeloCountArgs>(
      args?: Subset<T, ReceitaProdutoModeloCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceitaProdutoModeloCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReceitaProdutoModelo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaProdutoModeloAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceitaProdutoModeloAggregateArgs>(args: Subset<T, ReceitaProdutoModeloAggregateArgs>): Prisma.PrismaPromise<GetReceitaProdutoModeloAggregateType<T>>

    /**
     * Group by ReceitaProdutoModelo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaProdutoModeloGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceitaProdutoModeloGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceitaProdutoModeloGroupByArgs['orderBy'] }
        : { orderBy?: ReceitaProdutoModeloGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceitaProdutoModeloGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceitaProdutoModeloGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReceitaProdutoModelo model
   */
  readonly fields: ReceitaProdutoModeloFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReceitaProdutoModelo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceitaProdutoModeloClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends ReceitaProdutoModelo$filialArgs<ExtArgs> = {}>(args?: Subset<T, ReceitaProdutoModelo$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    produto<T extends ProdutoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProdutoDefaultArgs<ExtArgs>>): Prisma__ProdutoClient<$Result.GetResult<Prisma.$ProdutoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReceitaProdutoModelo model
   */
  interface ReceitaProdutoModeloFieldRefs {
    readonly id: FieldRef<"ReceitaProdutoModelo", 'Int'>
    readonly filialId: FieldRef<"ReceitaProdutoModelo", 'Int'>
    readonly produtoId: FieldRef<"ReceitaProdutoModelo", 'Int'>
    readonly data: FieldRef<"ReceitaProdutoModelo", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ReceitaProdutoModelo", 'String'>
    readonly valorTotal: FieldRef<"ReceitaProdutoModelo", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"ReceitaProdutoModelo", 'Int'>
    readonly quantidadeItens: FieldRef<"ReceitaProdutoModelo", 'Int'>
    readonly ranking: FieldRef<"ReceitaProdutoModelo", 'Int'>
    readonly createdAt: FieldRef<"ReceitaProdutoModelo", 'DateTime'>
    readonly updatedAt: FieldRef<"ReceitaProdutoModelo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReceitaProdutoModelo findUnique
   */
  export type ReceitaProdutoModeloFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaProdutoModelo to fetch.
     */
    where: ReceitaProdutoModeloWhereUniqueInput
  }

  /**
   * ReceitaProdutoModelo findUniqueOrThrow
   */
  export type ReceitaProdutoModeloFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaProdutoModelo to fetch.
     */
    where: ReceitaProdutoModeloWhereUniqueInput
  }

  /**
   * ReceitaProdutoModelo findFirst
   */
  export type ReceitaProdutoModeloFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaProdutoModelo to fetch.
     */
    where?: ReceitaProdutoModeloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaProdutoModelos to fetch.
     */
    orderBy?: ReceitaProdutoModeloOrderByWithRelationInput | ReceitaProdutoModeloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaProdutoModelos.
     */
    cursor?: ReceitaProdutoModeloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaProdutoModelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaProdutoModelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaProdutoModelos.
     */
    distinct?: ReceitaProdutoModeloScalarFieldEnum | ReceitaProdutoModeloScalarFieldEnum[]
  }

  /**
   * ReceitaProdutoModelo findFirstOrThrow
   */
  export type ReceitaProdutoModeloFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaProdutoModelo to fetch.
     */
    where?: ReceitaProdutoModeloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaProdutoModelos to fetch.
     */
    orderBy?: ReceitaProdutoModeloOrderByWithRelationInput | ReceitaProdutoModeloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaProdutoModelos.
     */
    cursor?: ReceitaProdutoModeloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaProdutoModelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaProdutoModelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaProdutoModelos.
     */
    distinct?: ReceitaProdutoModeloScalarFieldEnum | ReceitaProdutoModeloScalarFieldEnum[]
  }

  /**
   * ReceitaProdutoModelo findMany
   */
  export type ReceitaProdutoModeloFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaProdutoModelos to fetch.
     */
    where?: ReceitaProdutoModeloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaProdutoModelos to fetch.
     */
    orderBy?: ReceitaProdutoModeloOrderByWithRelationInput | ReceitaProdutoModeloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReceitaProdutoModelos.
     */
    cursor?: ReceitaProdutoModeloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaProdutoModelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaProdutoModelos.
     */
    skip?: number
    distinct?: ReceitaProdutoModeloScalarFieldEnum | ReceitaProdutoModeloScalarFieldEnum[]
  }

  /**
   * ReceitaProdutoModelo create
   */
  export type ReceitaProdutoModeloCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * The data needed to create a ReceitaProdutoModelo.
     */
    data: XOR<ReceitaProdutoModeloCreateInput, ReceitaProdutoModeloUncheckedCreateInput>
  }

  /**
   * ReceitaProdutoModelo createMany
   */
  export type ReceitaProdutoModeloCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReceitaProdutoModelos.
     */
    data: ReceitaProdutoModeloCreateManyInput | ReceitaProdutoModeloCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReceitaProdutoModelo update
   */
  export type ReceitaProdutoModeloUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * The data needed to update a ReceitaProdutoModelo.
     */
    data: XOR<ReceitaProdutoModeloUpdateInput, ReceitaProdutoModeloUncheckedUpdateInput>
    /**
     * Choose, which ReceitaProdutoModelo to update.
     */
    where: ReceitaProdutoModeloWhereUniqueInput
  }

  /**
   * ReceitaProdutoModelo updateMany
   */
  export type ReceitaProdutoModeloUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReceitaProdutoModelos.
     */
    data: XOR<ReceitaProdutoModeloUpdateManyMutationInput, ReceitaProdutoModeloUncheckedUpdateManyInput>
    /**
     * Filter which ReceitaProdutoModelos to update
     */
    where?: ReceitaProdutoModeloWhereInput
    /**
     * Limit how many ReceitaProdutoModelos to update.
     */
    limit?: number
  }

  /**
   * ReceitaProdutoModelo upsert
   */
  export type ReceitaProdutoModeloUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * The filter to search for the ReceitaProdutoModelo to update in case it exists.
     */
    where: ReceitaProdutoModeloWhereUniqueInput
    /**
     * In case the ReceitaProdutoModelo found by the `where` argument doesn't exist, create a new ReceitaProdutoModelo with this data.
     */
    create: XOR<ReceitaProdutoModeloCreateInput, ReceitaProdutoModeloUncheckedCreateInput>
    /**
     * In case the ReceitaProdutoModelo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceitaProdutoModeloUpdateInput, ReceitaProdutoModeloUncheckedUpdateInput>
  }

  /**
   * ReceitaProdutoModelo delete
   */
  export type ReceitaProdutoModeloDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
    /**
     * Filter which ReceitaProdutoModelo to delete.
     */
    where: ReceitaProdutoModeloWhereUniqueInput
  }

  /**
   * ReceitaProdutoModelo deleteMany
   */
  export type ReceitaProdutoModeloDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaProdutoModelos to delete
     */
    where?: ReceitaProdutoModeloWhereInput
    /**
     * Limit how many ReceitaProdutoModelos to delete.
     */
    limit?: number
  }

  /**
   * ReceitaProdutoModelo.filial
   */
  export type ReceitaProdutoModelo$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * ReceitaProdutoModelo without action
   */
  export type ReceitaProdutoModeloDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaProdutoModelo
     */
    select?: ReceitaProdutoModeloSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaProdutoModelo
     */
    omit?: ReceitaProdutoModeloOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaProdutoModeloInclude<ExtArgs> | null
  }


  /**
   * Model CrescimentoVendas
   */

  export type AggregateCrescimentoVendas = {
    _count: CrescimentoVendasCountAggregateOutputType | null
    _avg: CrescimentoVendasAvgAggregateOutputType | null
    _sum: CrescimentoVendasSumAggregateOutputType | null
    _min: CrescimentoVendasMinAggregateOutputType | null
    _max: CrescimentoVendasMaxAggregateOutputType | null
  }

  export type CrescimentoVendasAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    valorAtual: Decimal | null
    valorAnterior: Decimal | null
    crescimento: Decimal | null
  }

  export type CrescimentoVendasSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    valorAtual: Decimal | null
    valorAnterior: Decimal | null
    crescimento: Decimal | null
  }

  export type CrescimentoVendasMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    tipoComparacao: string | null
    valorAtual: Decimal | null
    valorAnterior: Decimal | null
    crescimento: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CrescimentoVendasMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    tipoComparacao: string | null
    valorAtual: Decimal | null
    valorAnterior: Decimal | null
    crescimento: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CrescimentoVendasCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    tipoComparacao: number
    valorAtual: number
    valorAnterior: number
    crescimento: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CrescimentoVendasAvgAggregateInputType = {
    id?: true
    filialId?: true
    valorAtual?: true
    valorAnterior?: true
    crescimento?: true
  }

  export type CrescimentoVendasSumAggregateInputType = {
    id?: true
    filialId?: true
    valorAtual?: true
    valorAnterior?: true
    crescimento?: true
  }

  export type CrescimentoVendasMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    tipoComparacao?: true
    valorAtual?: true
    valorAnterior?: true
    crescimento?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CrescimentoVendasMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    tipoComparacao?: true
    valorAtual?: true
    valorAnterior?: true
    crescimento?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CrescimentoVendasCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    tipoComparacao?: true
    valorAtual?: true
    valorAnterior?: true
    crescimento?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CrescimentoVendasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CrescimentoVendas to aggregate.
     */
    where?: CrescimentoVendasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CrescimentoVendas to fetch.
     */
    orderBy?: CrescimentoVendasOrderByWithRelationInput | CrescimentoVendasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CrescimentoVendasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CrescimentoVendas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CrescimentoVendas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CrescimentoVendas
    **/
    _count?: true | CrescimentoVendasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CrescimentoVendasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CrescimentoVendasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CrescimentoVendasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CrescimentoVendasMaxAggregateInputType
  }

  export type GetCrescimentoVendasAggregateType<T extends CrescimentoVendasAggregateArgs> = {
        [P in keyof T & keyof AggregateCrescimentoVendas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCrescimentoVendas[P]>
      : GetScalarType<T[P], AggregateCrescimentoVendas[P]>
  }




  export type CrescimentoVendasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CrescimentoVendasWhereInput
    orderBy?: CrescimentoVendasOrderByWithAggregationInput | CrescimentoVendasOrderByWithAggregationInput[]
    by: CrescimentoVendasScalarFieldEnum[] | CrescimentoVendasScalarFieldEnum
    having?: CrescimentoVendasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CrescimentoVendasCountAggregateInputType | true
    _avg?: CrescimentoVendasAvgAggregateInputType
    _sum?: CrescimentoVendasSumAggregateInputType
    _min?: CrescimentoVendasMinAggregateInputType
    _max?: CrescimentoVendasMaxAggregateInputType
  }

  export type CrescimentoVendasGroupByOutputType = {
    id: number
    filialId: number | null
    data: Date
    tipoPeriodo: string
    tipoComparacao: string
    valorAtual: Decimal
    valorAnterior: Decimal
    crescimento: Decimal
    createdAt: Date
    updatedAt: Date
    _count: CrescimentoVendasCountAggregateOutputType | null
    _avg: CrescimentoVendasAvgAggregateOutputType | null
    _sum: CrescimentoVendasSumAggregateOutputType | null
    _min: CrescimentoVendasMinAggregateOutputType | null
    _max: CrescimentoVendasMaxAggregateOutputType | null
  }

  type GetCrescimentoVendasGroupByPayload<T extends CrescimentoVendasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CrescimentoVendasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CrescimentoVendasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CrescimentoVendasGroupByOutputType[P]>
            : GetScalarType<T[P], CrescimentoVendasGroupByOutputType[P]>
        }
      >
    >


  export type CrescimentoVendasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    tipoComparacao?: boolean
    valorAtual?: boolean
    valorAnterior?: boolean
    crescimento?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | CrescimentoVendas$filialArgs<ExtArgs>
  }, ExtArgs["result"]["crescimentoVendas"]>



  export type CrescimentoVendasSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    tipoComparacao?: boolean
    valorAtual?: boolean
    valorAnterior?: boolean
    crescimento?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CrescimentoVendasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "tipoComparacao" | "valorAtual" | "valorAnterior" | "crescimento" | "createdAt" | "updatedAt", ExtArgs["result"]["crescimentoVendas"]>
  export type CrescimentoVendasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | CrescimentoVendas$filialArgs<ExtArgs>
  }

  export type $CrescimentoVendasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CrescimentoVendas"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      data: Date
      tipoPeriodo: string
      tipoComparacao: string
      valorAtual: Prisma.Decimal
      valorAnterior: Prisma.Decimal
      crescimento: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["crescimentoVendas"]>
    composites: {}
  }

  type CrescimentoVendasGetPayload<S extends boolean | null | undefined | CrescimentoVendasDefaultArgs> = $Result.GetResult<Prisma.$CrescimentoVendasPayload, S>

  type CrescimentoVendasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CrescimentoVendasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CrescimentoVendasCountAggregateInputType | true
    }

  export interface CrescimentoVendasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CrescimentoVendas'], meta: { name: 'CrescimentoVendas' } }
    /**
     * Find zero or one CrescimentoVendas that matches the filter.
     * @param {CrescimentoVendasFindUniqueArgs} args - Arguments to find a CrescimentoVendas
     * @example
     * // Get one CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CrescimentoVendasFindUniqueArgs>(args: SelectSubset<T, CrescimentoVendasFindUniqueArgs<ExtArgs>>): Prisma__CrescimentoVendasClient<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CrescimentoVendas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CrescimentoVendasFindUniqueOrThrowArgs} args - Arguments to find a CrescimentoVendas
     * @example
     * // Get one CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CrescimentoVendasFindUniqueOrThrowArgs>(args: SelectSubset<T, CrescimentoVendasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CrescimentoVendasClient<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CrescimentoVendas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrescimentoVendasFindFirstArgs} args - Arguments to find a CrescimentoVendas
     * @example
     * // Get one CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CrescimentoVendasFindFirstArgs>(args?: SelectSubset<T, CrescimentoVendasFindFirstArgs<ExtArgs>>): Prisma__CrescimentoVendasClient<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CrescimentoVendas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrescimentoVendasFindFirstOrThrowArgs} args - Arguments to find a CrescimentoVendas
     * @example
     * // Get one CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CrescimentoVendasFindFirstOrThrowArgs>(args?: SelectSubset<T, CrescimentoVendasFindFirstOrThrowArgs<ExtArgs>>): Prisma__CrescimentoVendasClient<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CrescimentoVendas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrescimentoVendasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.findMany()
     * 
     * // Get first 10 CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const crescimentoVendasWithIdOnly = await prisma.crescimentoVendas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CrescimentoVendasFindManyArgs>(args?: SelectSubset<T, CrescimentoVendasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CrescimentoVendas.
     * @param {CrescimentoVendasCreateArgs} args - Arguments to create a CrescimentoVendas.
     * @example
     * // Create one CrescimentoVendas
     * const CrescimentoVendas = await prisma.crescimentoVendas.create({
     *   data: {
     *     // ... data to create a CrescimentoVendas
     *   }
     * })
     * 
     */
    create<T extends CrescimentoVendasCreateArgs>(args: SelectSubset<T, CrescimentoVendasCreateArgs<ExtArgs>>): Prisma__CrescimentoVendasClient<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CrescimentoVendas.
     * @param {CrescimentoVendasCreateManyArgs} args - Arguments to create many CrescimentoVendas.
     * @example
     * // Create many CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CrescimentoVendasCreateManyArgs>(args?: SelectSubset<T, CrescimentoVendasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CrescimentoVendas.
     * @param {CrescimentoVendasDeleteArgs} args - Arguments to delete one CrescimentoVendas.
     * @example
     * // Delete one CrescimentoVendas
     * const CrescimentoVendas = await prisma.crescimentoVendas.delete({
     *   where: {
     *     // ... filter to delete one CrescimentoVendas
     *   }
     * })
     * 
     */
    delete<T extends CrescimentoVendasDeleteArgs>(args: SelectSubset<T, CrescimentoVendasDeleteArgs<ExtArgs>>): Prisma__CrescimentoVendasClient<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CrescimentoVendas.
     * @param {CrescimentoVendasUpdateArgs} args - Arguments to update one CrescimentoVendas.
     * @example
     * // Update one CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CrescimentoVendasUpdateArgs>(args: SelectSubset<T, CrescimentoVendasUpdateArgs<ExtArgs>>): Prisma__CrescimentoVendasClient<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CrescimentoVendas.
     * @param {CrescimentoVendasDeleteManyArgs} args - Arguments to filter CrescimentoVendas to delete.
     * @example
     * // Delete a few CrescimentoVendas
     * const { count } = await prisma.crescimentoVendas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CrescimentoVendasDeleteManyArgs>(args?: SelectSubset<T, CrescimentoVendasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CrescimentoVendas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrescimentoVendasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CrescimentoVendasUpdateManyArgs>(args: SelectSubset<T, CrescimentoVendasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CrescimentoVendas.
     * @param {CrescimentoVendasUpsertArgs} args - Arguments to update or create a CrescimentoVendas.
     * @example
     * // Update or create a CrescimentoVendas
     * const crescimentoVendas = await prisma.crescimentoVendas.upsert({
     *   create: {
     *     // ... data to create a CrescimentoVendas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CrescimentoVendas we want to update
     *   }
     * })
     */
    upsert<T extends CrescimentoVendasUpsertArgs>(args: SelectSubset<T, CrescimentoVendasUpsertArgs<ExtArgs>>): Prisma__CrescimentoVendasClient<$Result.GetResult<Prisma.$CrescimentoVendasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CrescimentoVendas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrescimentoVendasCountArgs} args - Arguments to filter CrescimentoVendas to count.
     * @example
     * // Count the number of CrescimentoVendas
     * const count = await prisma.crescimentoVendas.count({
     *   where: {
     *     // ... the filter for the CrescimentoVendas we want to count
     *   }
     * })
    **/
    count<T extends CrescimentoVendasCountArgs>(
      args?: Subset<T, CrescimentoVendasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CrescimentoVendasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CrescimentoVendas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrescimentoVendasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CrescimentoVendasAggregateArgs>(args: Subset<T, CrescimentoVendasAggregateArgs>): Prisma.PrismaPromise<GetCrescimentoVendasAggregateType<T>>

    /**
     * Group by CrescimentoVendas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CrescimentoVendasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CrescimentoVendasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CrescimentoVendasGroupByArgs['orderBy'] }
        : { orderBy?: CrescimentoVendasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CrescimentoVendasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCrescimentoVendasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CrescimentoVendas model
   */
  readonly fields: CrescimentoVendasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CrescimentoVendas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CrescimentoVendasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends CrescimentoVendas$filialArgs<ExtArgs> = {}>(args?: Subset<T, CrescimentoVendas$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CrescimentoVendas model
   */
  interface CrescimentoVendasFieldRefs {
    readonly id: FieldRef<"CrescimentoVendas", 'Int'>
    readonly filialId: FieldRef<"CrescimentoVendas", 'Int'>
    readonly data: FieldRef<"CrescimentoVendas", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"CrescimentoVendas", 'String'>
    readonly tipoComparacao: FieldRef<"CrescimentoVendas", 'String'>
    readonly valorAtual: FieldRef<"CrescimentoVendas", 'Decimal'>
    readonly valorAnterior: FieldRef<"CrescimentoVendas", 'Decimal'>
    readonly crescimento: FieldRef<"CrescimentoVendas", 'Decimal'>
    readonly createdAt: FieldRef<"CrescimentoVendas", 'DateTime'>
    readonly updatedAt: FieldRef<"CrescimentoVendas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CrescimentoVendas findUnique
   */
  export type CrescimentoVendasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * Filter, which CrescimentoVendas to fetch.
     */
    where: CrescimentoVendasWhereUniqueInput
  }

  /**
   * CrescimentoVendas findUniqueOrThrow
   */
  export type CrescimentoVendasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * Filter, which CrescimentoVendas to fetch.
     */
    where: CrescimentoVendasWhereUniqueInput
  }

  /**
   * CrescimentoVendas findFirst
   */
  export type CrescimentoVendasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * Filter, which CrescimentoVendas to fetch.
     */
    where?: CrescimentoVendasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CrescimentoVendas to fetch.
     */
    orderBy?: CrescimentoVendasOrderByWithRelationInput | CrescimentoVendasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CrescimentoVendas.
     */
    cursor?: CrescimentoVendasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CrescimentoVendas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CrescimentoVendas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CrescimentoVendas.
     */
    distinct?: CrescimentoVendasScalarFieldEnum | CrescimentoVendasScalarFieldEnum[]
  }

  /**
   * CrescimentoVendas findFirstOrThrow
   */
  export type CrescimentoVendasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * Filter, which CrescimentoVendas to fetch.
     */
    where?: CrescimentoVendasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CrescimentoVendas to fetch.
     */
    orderBy?: CrescimentoVendasOrderByWithRelationInput | CrescimentoVendasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CrescimentoVendas.
     */
    cursor?: CrescimentoVendasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CrescimentoVendas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CrescimentoVendas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CrescimentoVendas.
     */
    distinct?: CrescimentoVendasScalarFieldEnum | CrescimentoVendasScalarFieldEnum[]
  }

  /**
   * CrescimentoVendas findMany
   */
  export type CrescimentoVendasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * Filter, which CrescimentoVendas to fetch.
     */
    where?: CrescimentoVendasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CrescimentoVendas to fetch.
     */
    orderBy?: CrescimentoVendasOrderByWithRelationInput | CrescimentoVendasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CrescimentoVendas.
     */
    cursor?: CrescimentoVendasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CrescimentoVendas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CrescimentoVendas.
     */
    skip?: number
    distinct?: CrescimentoVendasScalarFieldEnum | CrescimentoVendasScalarFieldEnum[]
  }

  /**
   * CrescimentoVendas create
   */
  export type CrescimentoVendasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * The data needed to create a CrescimentoVendas.
     */
    data: XOR<CrescimentoVendasCreateInput, CrescimentoVendasUncheckedCreateInput>
  }

  /**
   * CrescimentoVendas createMany
   */
  export type CrescimentoVendasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CrescimentoVendas.
     */
    data: CrescimentoVendasCreateManyInput | CrescimentoVendasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CrescimentoVendas update
   */
  export type CrescimentoVendasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * The data needed to update a CrescimentoVendas.
     */
    data: XOR<CrescimentoVendasUpdateInput, CrescimentoVendasUncheckedUpdateInput>
    /**
     * Choose, which CrescimentoVendas to update.
     */
    where: CrescimentoVendasWhereUniqueInput
  }

  /**
   * CrescimentoVendas updateMany
   */
  export type CrescimentoVendasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CrescimentoVendas.
     */
    data: XOR<CrescimentoVendasUpdateManyMutationInput, CrescimentoVendasUncheckedUpdateManyInput>
    /**
     * Filter which CrescimentoVendas to update
     */
    where?: CrescimentoVendasWhereInput
    /**
     * Limit how many CrescimentoVendas to update.
     */
    limit?: number
  }

  /**
   * CrescimentoVendas upsert
   */
  export type CrescimentoVendasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * The filter to search for the CrescimentoVendas to update in case it exists.
     */
    where: CrescimentoVendasWhereUniqueInput
    /**
     * In case the CrescimentoVendas found by the `where` argument doesn't exist, create a new CrescimentoVendas with this data.
     */
    create: XOR<CrescimentoVendasCreateInput, CrescimentoVendasUncheckedCreateInput>
    /**
     * In case the CrescimentoVendas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CrescimentoVendasUpdateInput, CrescimentoVendasUncheckedUpdateInput>
  }

  /**
   * CrescimentoVendas delete
   */
  export type CrescimentoVendasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
    /**
     * Filter which CrescimentoVendas to delete.
     */
    where: CrescimentoVendasWhereUniqueInput
  }

  /**
   * CrescimentoVendas deleteMany
   */
  export type CrescimentoVendasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CrescimentoVendas to delete
     */
    where?: CrescimentoVendasWhereInput
    /**
     * Limit how many CrescimentoVendas to delete.
     */
    limit?: number
  }

  /**
   * CrescimentoVendas.filial
   */
  export type CrescimentoVendas$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * CrescimentoVendas without action
   */
  export type CrescimentoVendasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CrescimentoVendas
     */
    select?: CrescimentoVendasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CrescimentoVendas
     */
    omit?: CrescimentoVendasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CrescimentoVendasInclude<ExtArgs> | null
  }


  /**
   * Model TicketMedio
   */

  export type AggregateTicketMedio = {
    _count: TicketMedioCountAggregateOutputType | null
    _avg: TicketMedioAvgAggregateOutputType | null
    _sum: TicketMedioSumAggregateOutputType | null
    _min: TicketMedioMinAggregateOutputType | null
    _max: TicketMedioMaxAggregateOutputType | null
  }

  export type TicketMedioAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    ticketMedioNF: Decimal | null
    ticketMedioItem: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type TicketMedioSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    ticketMedioNF: Decimal | null
    ticketMedioItem: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type TicketMedioMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    ticketMedioNF: Decimal | null
    ticketMedioItem: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TicketMedioMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    ticketMedioNF: Decimal | null
    ticketMedioItem: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TicketMedioCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    ticketMedioNF: number
    ticketMedioItem: number
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TicketMedioAvgAggregateInputType = {
    id?: true
    filialId?: true
    ticketMedioNF?: true
    ticketMedioItem?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type TicketMedioSumAggregateInputType = {
    id?: true
    filialId?: true
    ticketMedioNF?: true
    ticketMedioItem?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type TicketMedioMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    ticketMedioNF?: true
    ticketMedioItem?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TicketMedioMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    ticketMedioNF?: true
    ticketMedioItem?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TicketMedioCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    ticketMedioNF?: true
    ticketMedioItem?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TicketMedioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketMedio to aggregate.
     */
    where?: TicketMedioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketMedios to fetch.
     */
    orderBy?: TicketMedioOrderByWithRelationInput | TicketMedioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TicketMedioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketMedios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketMedios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TicketMedios
    **/
    _count?: true | TicketMedioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketMedioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketMedioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketMedioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketMedioMaxAggregateInputType
  }

  export type GetTicketMedioAggregateType<T extends TicketMedioAggregateArgs> = {
        [P in keyof T & keyof AggregateTicketMedio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicketMedio[P]>
      : GetScalarType<T[P], AggregateTicketMedio[P]>
  }




  export type TicketMedioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketMedioWhereInput
    orderBy?: TicketMedioOrderByWithAggregationInput | TicketMedioOrderByWithAggregationInput[]
    by: TicketMedioScalarFieldEnum[] | TicketMedioScalarFieldEnum
    having?: TicketMedioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketMedioCountAggregateInputType | true
    _avg?: TicketMedioAvgAggregateInputType
    _sum?: TicketMedioSumAggregateInputType
    _min?: TicketMedioMinAggregateInputType
    _max?: TicketMedioMaxAggregateInputType
  }

  export type TicketMedioGroupByOutputType = {
    id: number
    filialId: number | null
    data: Date
    tipoPeriodo: string
    ticketMedioNF: Decimal
    ticketMedioItem: Decimal
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: Date
    updatedAt: Date
    _count: TicketMedioCountAggregateOutputType | null
    _avg: TicketMedioAvgAggregateOutputType | null
    _sum: TicketMedioSumAggregateOutputType | null
    _min: TicketMedioMinAggregateOutputType | null
    _max: TicketMedioMaxAggregateOutputType | null
  }

  type GetTicketMedioGroupByPayload<T extends TicketMedioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketMedioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketMedioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketMedioGroupByOutputType[P]>
            : GetScalarType<T[P], TicketMedioGroupByOutputType[P]>
        }
      >
    >


  export type TicketMedioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    ticketMedioNF?: boolean
    ticketMedioItem?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | TicketMedio$filialArgs<ExtArgs>
  }, ExtArgs["result"]["ticketMedio"]>



  export type TicketMedioSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    ticketMedioNF?: boolean
    ticketMedioItem?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TicketMedioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "ticketMedioNF" | "ticketMedioItem" | "quantidadeNotas" | "quantidadeItens" | "createdAt" | "updatedAt", ExtArgs["result"]["ticketMedio"]>
  export type TicketMedioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | TicketMedio$filialArgs<ExtArgs>
  }

  export type $TicketMedioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TicketMedio"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      data: Date
      tipoPeriodo: string
      ticketMedioNF: Prisma.Decimal
      ticketMedioItem: Prisma.Decimal
      quantidadeNotas: number
      quantidadeItens: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["ticketMedio"]>
    composites: {}
  }

  type TicketMedioGetPayload<S extends boolean | null | undefined | TicketMedioDefaultArgs> = $Result.GetResult<Prisma.$TicketMedioPayload, S>

  type TicketMedioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TicketMedioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketMedioCountAggregateInputType | true
    }

  export interface TicketMedioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TicketMedio'], meta: { name: 'TicketMedio' } }
    /**
     * Find zero or one TicketMedio that matches the filter.
     * @param {TicketMedioFindUniqueArgs} args - Arguments to find a TicketMedio
     * @example
     * // Get one TicketMedio
     * const ticketMedio = await prisma.ticketMedio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TicketMedioFindUniqueArgs>(args: SelectSubset<T, TicketMedioFindUniqueArgs<ExtArgs>>): Prisma__TicketMedioClient<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TicketMedio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TicketMedioFindUniqueOrThrowArgs} args - Arguments to find a TicketMedio
     * @example
     * // Get one TicketMedio
     * const ticketMedio = await prisma.ticketMedio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TicketMedioFindUniqueOrThrowArgs>(args: SelectSubset<T, TicketMedioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TicketMedioClient<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketMedio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioFindFirstArgs} args - Arguments to find a TicketMedio
     * @example
     * // Get one TicketMedio
     * const ticketMedio = await prisma.ticketMedio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TicketMedioFindFirstArgs>(args?: SelectSubset<T, TicketMedioFindFirstArgs<ExtArgs>>): Prisma__TicketMedioClient<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketMedio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioFindFirstOrThrowArgs} args - Arguments to find a TicketMedio
     * @example
     * // Get one TicketMedio
     * const ticketMedio = await prisma.ticketMedio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TicketMedioFindFirstOrThrowArgs>(args?: SelectSubset<T, TicketMedioFindFirstOrThrowArgs<ExtArgs>>): Prisma__TicketMedioClient<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TicketMedios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TicketMedios
     * const ticketMedios = await prisma.ticketMedio.findMany()
     * 
     * // Get first 10 TicketMedios
     * const ticketMedios = await prisma.ticketMedio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketMedioWithIdOnly = await prisma.ticketMedio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TicketMedioFindManyArgs>(args?: SelectSubset<T, TicketMedioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TicketMedio.
     * @param {TicketMedioCreateArgs} args - Arguments to create a TicketMedio.
     * @example
     * // Create one TicketMedio
     * const TicketMedio = await prisma.ticketMedio.create({
     *   data: {
     *     // ... data to create a TicketMedio
     *   }
     * })
     * 
     */
    create<T extends TicketMedioCreateArgs>(args: SelectSubset<T, TicketMedioCreateArgs<ExtArgs>>): Prisma__TicketMedioClient<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TicketMedios.
     * @param {TicketMedioCreateManyArgs} args - Arguments to create many TicketMedios.
     * @example
     * // Create many TicketMedios
     * const ticketMedio = await prisma.ticketMedio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TicketMedioCreateManyArgs>(args?: SelectSubset<T, TicketMedioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TicketMedio.
     * @param {TicketMedioDeleteArgs} args - Arguments to delete one TicketMedio.
     * @example
     * // Delete one TicketMedio
     * const TicketMedio = await prisma.ticketMedio.delete({
     *   where: {
     *     // ... filter to delete one TicketMedio
     *   }
     * })
     * 
     */
    delete<T extends TicketMedioDeleteArgs>(args: SelectSubset<T, TicketMedioDeleteArgs<ExtArgs>>): Prisma__TicketMedioClient<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TicketMedio.
     * @param {TicketMedioUpdateArgs} args - Arguments to update one TicketMedio.
     * @example
     * // Update one TicketMedio
     * const ticketMedio = await prisma.ticketMedio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TicketMedioUpdateArgs>(args: SelectSubset<T, TicketMedioUpdateArgs<ExtArgs>>): Prisma__TicketMedioClient<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TicketMedios.
     * @param {TicketMedioDeleteManyArgs} args - Arguments to filter TicketMedios to delete.
     * @example
     * // Delete a few TicketMedios
     * const { count } = await prisma.ticketMedio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TicketMedioDeleteManyArgs>(args?: SelectSubset<T, TicketMedioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TicketMedios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TicketMedios
     * const ticketMedio = await prisma.ticketMedio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TicketMedioUpdateManyArgs>(args: SelectSubset<T, TicketMedioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TicketMedio.
     * @param {TicketMedioUpsertArgs} args - Arguments to update or create a TicketMedio.
     * @example
     * // Update or create a TicketMedio
     * const ticketMedio = await prisma.ticketMedio.upsert({
     *   create: {
     *     // ... data to create a TicketMedio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TicketMedio we want to update
     *   }
     * })
     */
    upsert<T extends TicketMedioUpsertArgs>(args: SelectSubset<T, TicketMedioUpsertArgs<ExtArgs>>): Prisma__TicketMedioClient<$Result.GetResult<Prisma.$TicketMedioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TicketMedios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioCountArgs} args - Arguments to filter TicketMedios to count.
     * @example
     * // Count the number of TicketMedios
     * const count = await prisma.ticketMedio.count({
     *   where: {
     *     // ... the filter for the TicketMedios we want to count
     *   }
     * })
    **/
    count<T extends TicketMedioCountArgs>(
      args?: Subset<T, TicketMedioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketMedioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TicketMedio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketMedioAggregateArgs>(args: Subset<T, TicketMedioAggregateArgs>): Prisma.PrismaPromise<GetTicketMedioAggregateType<T>>

    /**
     * Group by TicketMedio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketMedioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketMedioGroupByArgs['orderBy'] }
        : { orderBy?: TicketMedioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketMedioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketMedioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TicketMedio model
   */
  readonly fields: TicketMedioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TicketMedio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TicketMedioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends TicketMedio$filialArgs<ExtArgs> = {}>(args?: Subset<T, TicketMedio$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TicketMedio model
   */
  interface TicketMedioFieldRefs {
    readonly id: FieldRef<"TicketMedio", 'Int'>
    readonly filialId: FieldRef<"TicketMedio", 'Int'>
    readonly data: FieldRef<"TicketMedio", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"TicketMedio", 'String'>
    readonly ticketMedioNF: FieldRef<"TicketMedio", 'Decimal'>
    readonly ticketMedioItem: FieldRef<"TicketMedio", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"TicketMedio", 'Int'>
    readonly quantidadeItens: FieldRef<"TicketMedio", 'Int'>
    readonly createdAt: FieldRef<"TicketMedio", 'DateTime'>
    readonly updatedAt: FieldRef<"TicketMedio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TicketMedio findUnique
   */
  export type TicketMedioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedio to fetch.
     */
    where: TicketMedioWhereUniqueInput
  }

  /**
   * TicketMedio findUniqueOrThrow
   */
  export type TicketMedioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedio to fetch.
     */
    where: TicketMedioWhereUniqueInput
  }

  /**
   * TicketMedio findFirst
   */
  export type TicketMedioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedio to fetch.
     */
    where?: TicketMedioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketMedios to fetch.
     */
    orderBy?: TicketMedioOrderByWithRelationInput | TicketMedioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketMedios.
     */
    cursor?: TicketMedioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketMedios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketMedios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketMedios.
     */
    distinct?: TicketMedioScalarFieldEnum | TicketMedioScalarFieldEnum[]
  }

  /**
   * TicketMedio findFirstOrThrow
   */
  export type TicketMedioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedio to fetch.
     */
    where?: TicketMedioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketMedios to fetch.
     */
    orderBy?: TicketMedioOrderByWithRelationInput | TicketMedioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketMedios.
     */
    cursor?: TicketMedioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketMedios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketMedios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketMedios.
     */
    distinct?: TicketMedioScalarFieldEnum | TicketMedioScalarFieldEnum[]
  }

  /**
   * TicketMedio findMany
   */
  export type TicketMedioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedios to fetch.
     */
    where?: TicketMedioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketMedios to fetch.
     */
    orderBy?: TicketMedioOrderByWithRelationInput | TicketMedioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TicketMedios.
     */
    cursor?: TicketMedioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketMedios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketMedios.
     */
    skip?: number
    distinct?: TicketMedioScalarFieldEnum | TicketMedioScalarFieldEnum[]
  }

  /**
   * TicketMedio create
   */
  export type TicketMedioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * The data needed to create a TicketMedio.
     */
    data: XOR<TicketMedioCreateInput, TicketMedioUncheckedCreateInput>
  }

  /**
   * TicketMedio createMany
   */
  export type TicketMedioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TicketMedios.
     */
    data: TicketMedioCreateManyInput | TicketMedioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TicketMedio update
   */
  export type TicketMedioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * The data needed to update a TicketMedio.
     */
    data: XOR<TicketMedioUpdateInput, TicketMedioUncheckedUpdateInput>
    /**
     * Choose, which TicketMedio to update.
     */
    where: TicketMedioWhereUniqueInput
  }

  /**
   * TicketMedio updateMany
   */
  export type TicketMedioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TicketMedios.
     */
    data: XOR<TicketMedioUpdateManyMutationInput, TicketMedioUncheckedUpdateManyInput>
    /**
     * Filter which TicketMedios to update
     */
    where?: TicketMedioWhereInput
    /**
     * Limit how many TicketMedios to update.
     */
    limit?: number
  }

  /**
   * TicketMedio upsert
   */
  export type TicketMedioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * The filter to search for the TicketMedio to update in case it exists.
     */
    where: TicketMedioWhereUniqueInput
    /**
     * In case the TicketMedio found by the `where` argument doesn't exist, create a new TicketMedio with this data.
     */
    create: XOR<TicketMedioCreateInput, TicketMedioUncheckedCreateInput>
    /**
     * In case the TicketMedio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TicketMedioUpdateInput, TicketMedioUncheckedUpdateInput>
  }

  /**
   * TicketMedio delete
   */
  export type TicketMedioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
    /**
     * Filter which TicketMedio to delete.
     */
    where: TicketMedioWhereUniqueInput
  }

  /**
   * TicketMedio deleteMany
   */
  export type TicketMedioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketMedios to delete
     */
    where?: TicketMedioWhereInput
    /**
     * Limit how many TicketMedios to delete.
     */
    limit?: number
  }

  /**
   * TicketMedio.filial
   */
  export type TicketMedio$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * TicketMedio without action
   */
  export type TicketMedioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedio
     */
    select?: TicketMedioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedio
     */
    omit?: TicketMedioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioInclude<ExtArgs> | null
  }


  /**
   * Model ItensPorNF
   */

  export type AggregateItensPorNF = {
    _count: ItensPorNFCountAggregateOutputType | null
    _avg: ItensPorNFAvgAggregateOutputType | null
    _sum: ItensPorNFSumAggregateOutputType | null
    _min: ItensPorNFMinAggregateOutputType | null
    _max: ItensPorNFMaxAggregateOutputType | null
  }

  export type ItensPorNFAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    mediaItens: Decimal | null
    p95Itens: Decimal | null
    quantidadeNotas: number | null
  }

  export type ItensPorNFSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    mediaItens: Decimal | null
    p95Itens: Decimal | null
    quantidadeNotas: number | null
  }

  export type ItensPorNFMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    mediaItens: Decimal | null
    p95Itens: Decimal | null
    quantidadeNotas: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ItensPorNFMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    mediaItens: Decimal | null
    p95Itens: Decimal | null
    quantidadeNotas: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ItensPorNFCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    mediaItens: number
    p95Itens: number
    quantidadeNotas: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ItensPorNFAvgAggregateInputType = {
    id?: true
    filialId?: true
    mediaItens?: true
    p95Itens?: true
    quantidadeNotas?: true
  }

  export type ItensPorNFSumAggregateInputType = {
    id?: true
    filialId?: true
    mediaItens?: true
    p95Itens?: true
    quantidadeNotas?: true
  }

  export type ItensPorNFMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    mediaItens?: true
    p95Itens?: true
    quantidadeNotas?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ItensPorNFMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    mediaItens?: true
    p95Itens?: true
    quantidadeNotas?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ItensPorNFCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    mediaItens?: true
    p95Itens?: true
    quantidadeNotas?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ItensPorNFAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ItensPorNF to aggregate.
     */
    where?: ItensPorNFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItensPorNFS to fetch.
     */
    orderBy?: ItensPorNFOrderByWithRelationInput | ItensPorNFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItensPorNFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItensPorNFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItensPorNFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ItensPorNFS
    **/
    _count?: true | ItensPorNFCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItensPorNFAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItensPorNFSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItensPorNFMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItensPorNFMaxAggregateInputType
  }

  export type GetItensPorNFAggregateType<T extends ItensPorNFAggregateArgs> = {
        [P in keyof T & keyof AggregateItensPorNF]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItensPorNF[P]>
      : GetScalarType<T[P], AggregateItensPorNF[P]>
  }




  export type ItensPorNFGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItensPorNFWhereInput
    orderBy?: ItensPorNFOrderByWithAggregationInput | ItensPorNFOrderByWithAggregationInput[]
    by: ItensPorNFScalarFieldEnum[] | ItensPorNFScalarFieldEnum
    having?: ItensPorNFScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItensPorNFCountAggregateInputType | true
    _avg?: ItensPorNFAvgAggregateInputType
    _sum?: ItensPorNFSumAggregateInputType
    _min?: ItensPorNFMinAggregateInputType
    _max?: ItensPorNFMaxAggregateInputType
  }

  export type ItensPorNFGroupByOutputType = {
    id: number
    filialId: number | null
    data: Date
    tipoPeriodo: string
    mediaItens: Decimal
    p95Itens: Decimal
    quantidadeNotas: number
    createdAt: Date
    updatedAt: Date
    _count: ItensPorNFCountAggregateOutputType | null
    _avg: ItensPorNFAvgAggregateOutputType | null
    _sum: ItensPorNFSumAggregateOutputType | null
    _min: ItensPorNFMinAggregateOutputType | null
    _max: ItensPorNFMaxAggregateOutputType | null
  }

  type GetItensPorNFGroupByPayload<T extends ItensPorNFGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItensPorNFGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItensPorNFGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItensPorNFGroupByOutputType[P]>
            : GetScalarType<T[P], ItensPorNFGroupByOutputType[P]>
        }
      >
    >


  export type ItensPorNFSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    mediaItens?: boolean
    p95Itens?: boolean
    quantidadeNotas?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | ItensPorNF$filialArgs<ExtArgs>
  }, ExtArgs["result"]["itensPorNF"]>



  export type ItensPorNFSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    mediaItens?: boolean
    p95Itens?: boolean
    quantidadeNotas?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ItensPorNFOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "mediaItens" | "p95Itens" | "quantidadeNotas" | "createdAt" | "updatedAt", ExtArgs["result"]["itensPorNF"]>
  export type ItensPorNFInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | ItensPorNF$filialArgs<ExtArgs>
  }

  export type $ItensPorNFPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ItensPorNF"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      data: Date
      tipoPeriodo: string
      mediaItens: Prisma.Decimal
      p95Itens: Prisma.Decimal
      quantidadeNotas: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["itensPorNF"]>
    composites: {}
  }

  type ItensPorNFGetPayload<S extends boolean | null | undefined | ItensPorNFDefaultArgs> = $Result.GetResult<Prisma.$ItensPorNFPayload, S>

  type ItensPorNFCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ItensPorNFFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ItensPorNFCountAggregateInputType | true
    }

  export interface ItensPorNFDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ItensPorNF'], meta: { name: 'ItensPorNF' } }
    /**
     * Find zero or one ItensPorNF that matches the filter.
     * @param {ItensPorNFFindUniqueArgs} args - Arguments to find a ItensPorNF
     * @example
     * // Get one ItensPorNF
     * const itensPorNF = await prisma.itensPorNF.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ItensPorNFFindUniqueArgs>(args: SelectSubset<T, ItensPorNFFindUniqueArgs<ExtArgs>>): Prisma__ItensPorNFClient<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ItensPorNF that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ItensPorNFFindUniqueOrThrowArgs} args - Arguments to find a ItensPorNF
     * @example
     * // Get one ItensPorNF
     * const itensPorNF = await prisma.itensPorNF.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ItensPorNFFindUniqueOrThrowArgs>(args: SelectSubset<T, ItensPorNFFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ItensPorNFClient<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ItensPorNF that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItensPorNFFindFirstArgs} args - Arguments to find a ItensPorNF
     * @example
     * // Get one ItensPorNF
     * const itensPorNF = await prisma.itensPorNF.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ItensPorNFFindFirstArgs>(args?: SelectSubset<T, ItensPorNFFindFirstArgs<ExtArgs>>): Prisma__ItensPorNFClient<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ItensPorNF that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItensPorNFFindFirstOrThrowArgs} args - Arguments to find a ItensPorNF
     * @example
     * // Get one ItensPorNF
     * const itensPorNF = await prisma.itensPorNF.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ItensPorNFFindFirstOrThrowArgs>(args?: SelectSubset<T, ItensPorNFFindFirstOrThrowArgs<ExtArgs>>): Prisma__ItensPorNFClient<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ItensPorNFS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItensPorNFFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ItensPorNFS
     * const itensPorNFS = await prisma.itensPorNF.findMany()
     * 
     * // Get first 10 ItensPorNFS
     * const itensPorNFS = await prisma.itensPorNF.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const itensPorNFWithIdOnly = await prisma.itensPorNF.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ItensPorNFFindManyArgs>(args?: SelectSubset<T, ItensPorNFFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ItensPorNF.
     * @param {ItensPorNFCreateArgs} args - Arguments to create a ItensPorNF.
     * @example
     * // Create one ItensPorNF
     * const ItensPorNF = await prisma.itensPorNF.create({
     *   data: {
     *     // ... data to create a ItensPorNF
     *   }
     * })
     * 
     */
    create<T extends ItensPorNFCreateArgs>(args: SelectSubset<T, ItensPorNFCreateArgs<ExtArgs>>): Prisma__ItensPorNFClient<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ItensPorNFS.
     * @param {ItensPorNFCreateManyArgs} args - Arguments to create many ItensPorNFS.
     * @example
     * // Create many ItensPorNFS
     * const itensPorNF = await prisma.itensPorNF.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ItensPorNFCreateManyArgs>(args?: SelectSubset<T, ItensPorNFCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ItensPorNF.
     * @param {ItensPorNFDeleteArgs} args - Arguments to delete one ItensPorNF.
     * @example
     * // Delete one ItensPorNF
     * const ItensPorNF = await prisma.itensPorNF.delete({
     *   where: {
     *     // ... filter to delete one ItensPorNF
     *   }
     * })
     * 
     */
    delete<T extends ItensPorNFDeleteArgs>(args: SelectSubset<T, ItensPorNFDeleteArgs<ExtArgs>>): Prisma__ItensPorNFClient<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ItensPorNF.
     * @param {ItensPorNFUpdateArgs} args - Arguments to update one ItensPorNF.
     * @example
     * // Update one ItensPorNF
     * const itensPorNF = await prisma.itensPorNF.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ItensPorNFUpdateArgs>(args: SelectSubset<T, ItensPorNFUpdateArgs<ExtArgs>>): Prisma__ItensPorNFClient<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ItensPorNFS.
     * @param {ItensPorNFDeleteManyArgs} args - Arguments to filter ItensPorNFS to delete.
     * @example
     * // Delete a few ItensPorNFS
     * const { count } = await prisma.itensPorNF.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ItensPorNFDeleteManyArgs>(args?: SelectSubset<T, ItensPorNFDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ItensPorNFS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItensPorNFUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ItensPorNFS
     * const itensPorNF = await prisma.itensPorNF.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ItensPorNFUpdateManyArgs>(args: SelectSubset<T, ItensPorNFUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ItensPorNF.
     * @param {ItensPorNFUpsertArgs} args - Arguments to update or create a ItensPorNF.
     * @example
     * // Update or create a ItensPorNF
     * const itensPorNF = await prisma.itensPorNF.upsert({
     *   create: {
     *     // ... data to create a ItensPorNF
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ItensPorNF we want to update
     *   }
     * })
     */
    upsert<T extends ItensPorNFUpsertArgs>(args: SelectSubset<T, ItensPorNFUpsertArgs<ExtArgs>>): Prisma__ItensPorNFClient<$Result.GetResult<Prisma.$ItensPorNFPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ItensPorNFS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItensPorNFCountArgs} args - Arguments to filter ItensPorNFS to count.
     * @example
     * // Count the number of ItensPorNFS
     * const count = await prisma.itensPorNF.count({
     *   where: {
     *     // ... the filter for the ItensPorNFS we want to count
     *   }
     * })
    **/
    count<T extends ItensPorNFCountArgs>(
      args?: Subset<T, ItensPorNFCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItensPorNFCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ItensPorNF.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItensPorNFAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItensPorNFAggregateArgs>(args: Subset<T, ItensPorNFAggregateArgs>): Prisma.PrismaPromise<GetItensPorNFAggregateType<T>>

    /**
     * Group by ItensPorNF.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItensPorNFGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItensPorNFGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItensPorNFGroupByArgs['orderBy'] }
        : { orderBy?: ItensPorNFGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItensPorNFGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItensPorNFGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ItensPorNF model
   */
  readonly fields: ItensPorNFFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ItensPorNF.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItensPorNFClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends ItensPorNF$filialArgs<ExtArgs> = {}>(args?: Subset<T, ItensPorNF$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ItensPorNF model
   */
  interface ItensPorNFFieldRefs {
    readonly id: FieldRef<"ItensPorNF", 'Int'>
    readonly filialId: FieldRef<"ItensPorNF", 'Int'>
    readonly data: FieldRef<"ItensPorNF", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ItensPorNF", 'String'>
    readonly mediaItens: FieldRef<"ItensPorNF", 'Decimal'>
    readonly p95Itens: FieldRef<"ItensPorNF", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"ItensPorNF", 'Int'>
    readonly createdAt: FieldRef<"ItensPorNF", 'DateTime'>
    readonly updatedAt: FieldRef<"ItensPorNF", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ItensPorNF findUnique
   */
  export type ItensPorNFFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * Filter, which ItensPorNF to fetch.
     */
    where: ItensPorNFWhereUniqueInput
  }

  /**
   * ItensPorNF findUniqueOrThrow
   */
  export type ItensPorNFFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * Filter, which ItensPorNF to fetch.
     */
    where: ItensPorNFWhereUniqueInput
  }

  /**
   * ItensPorNF findFirst
   */
  export type ItensPorNFFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * Filter, which ItensPorNF to fetch.
     */
    where?: ItensPorNFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItensPorNFS to fetch.
     */
    orderBy?: ItensPorNFOrderByWithRelationInput | ItensPorNFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ItensPorNFS.
     */
    cursor?: ItensPorNFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItensPorNFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItensPorNFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ItensPorNFS.
     */
    distinct?: ItensPorNFScalarFieldEnum | ItensPorNFScalarFieldEnum[]
  }

  /**
   * ItensPorNF findFirstOrThrow
   */
  export type ItensPorNFFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * Filter, which ItensPorNF to fetch.
     */
    where?: ItensPorNFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItensPorNFS to fetch.
     */
    orderBy?: ItensPorNFOrderByWithRelationInput | ItensPorNFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ItensPorNFS.
     */
    cursor?: ItensPorNFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItensPorNFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItensPorNFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ItensPorNFS.
     */
    distinct?: ItensPorNFScalarFieldEnum | ItensPorNFScalarFieldEnum[]
  }

  /**
   * ItensPorNF findMany
   */
  export type ItensPorNFFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * Filter, which ItensPorNFS to fetch.
     */
    where?: ItensPorNFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItensPorNFS to fetch.
     */
    orderBy?: ItensPorNFOrderByWithRelationInput | ItensPorNFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ItensPorNFS.
     */
    cursor?: ItensPorNFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItensPorNFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItensPorNFS.
     */
    skip?: number
    distinct?: ItensPorNFScalarFieldEnum | ItensPorNFScalarFieldEnum[]
  }

  /**
   * ItensPorNF create
   */
  export type ItensPorNFCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * The data needed to create a ItensPorNF.
     */
    data: XOR<ItensPorNFCreateInput, ItensPorNFUncheckedCreateInput>
  }

  /**
   * ItensPorNF createMany
   */
  export type ItensPorNFCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ItensPorNFS.
     */
    data: ItensPorNFCreateManyInput | ItensPorNFCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ItensPorNF update
   */
  export type ItensPorNFUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * The data needed to update a ItensPorNF.
     */
    data: XOR<ItensPorNFUpdateInput, ItensPorNFUncheckedUpdateInput>
    /**
     * Choose, which ItensPorNF to update.
     */
    where: ItensPorNFWhereUniqueInput
  }

  /**
   * ItensPorNF updateMany
   */
  export type ItensPorNFUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ItensPorNFS.
     */
    data: XOR<ItensPorNFUpdateManyMutationInput, ItensPorNFUncheckedUpdateManyInput>
    /**
     * Filter which ItensPorNFS to update
     */
    where?: ItensPorNFWhereInput
    /**
     * Limit how many ItensPorNFS to update.
     */
    limit?: number
  }

  /**
   * ItensPorNF upsert
   */
  export type ItensPorNFUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * The filter to search for the ItensPorNF to update in case it exists.
     */
    where: ItensPorNFWhereUniqueInput
    /**
     * In case the ItensPorNF found by the `where` argument doesn't exist, create a new ItensPorNF with this data.
     */
    create: XOR<ItensPorNFCreateInput, ItensPorNFUncheckedCreateInput>
    /**
     * In case the ItensPorNF was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItensPorNFUpdateInput, ItensPorNFUncheckedUpdateInput>
  }

  /**
   * ItensPorNF delete
   */
  export type ItensPorNFDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
    /**
     * Filter which ItensPorNF to delete.
     */
    where: ItensPorNFWhereUniqueInput
  }

  /**
   * ItensPorNF deleteMany
   */
  export type ItensPorNFDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ItensPorNFS to delete
     */
    where?: ItensPorNFWhereInput
    /**
     * Limit how many ItensPorNFS to delete.
     */
    limit?: number
  }

  /**
   * ItensPorNF.filial
   */
  export type ItensPorNF$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * ItensPorNF without action
   */
  export type ItensPorNFDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItensPorNF
     */
    select?: ItensPorNFSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItensPorNF
     */
    omit?: ItensPorNFOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItensPorNFInclude<ExtArgs> | null
  }


  /**
   * Model Sazonalidade
   */

  export type AggregateSazonalidade = {
    _count: SazonalidadeCountAggregateOutputType | null
    _avg: SazonalidadeAvgAggregateOutputType | null
    _sum: SazonalidadeSumAggregateOutputType | null
    _min: SazonalidadeMinAggregateOutputType | null
    _max: SazonalidadeMaxAggregateOutputType | null
  }

  export type SazonalidadeAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    ano: number | null
    mes: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    percentualAno: Decimal | null
  }

  export type SazonalidadeSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    ano: number | null
    mes: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    percentualAno: Decimal | null
  }

  export type SazonalidadeMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    ano: number | null
    mes: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    percentualAno: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SazonalidadeMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    ano: number | null
    mes: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    percentualAno: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SazonalidadeCountAggregateOutputType = {
    id: number
    filialId: number
    ano: number
    mes: number
    valorTotal: number
    quantidadeNotas: number
    quantidadeItens: number
    percentualAno: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SazonalidadeAvgAggregateInputType = {
    id?: true
    filialId?: true
    ano?: true
    mes?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    percentualAno?: true
  }

  export type SazonalidadeSumAggregateInputType = {
    id?: true
    filialId?: true
    ano?: true
    mes?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    percentualAno?: true
  }

  export type SazonalidadeMinAggregateInputType = {
    id?: true
    filialId?: true
    ano?: true
    mes?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    percentualAno?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SazonalidadeMaxAggregateInputType = {
    id?: true
    filialId?: true
    ano?: true
    mes?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    percentualAno?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SazonalidadeCountAggregateInputType = {
    id?: true
    filialId?: true
    ano?: true
    mes?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    percentualAno?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SazonalidadeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sazonalidade to aggregate.
     */
    where?: SazonalidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sazonalidades to fetch.
     */
    orderBy?: SazonalidadeOrderByWithRelationInput | SazonalidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SazonalidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sazonalidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sazonalidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sazonalidades
    **/
    _count?: true | SazonalidadeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SazonalidadeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SazonalidadeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SazonalidadeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SazonalidadeMaxAggregateInputType
  }

  export type GetSazonalidadeAggregateType<T extends SazonalidadeAggregateArgs> = {
        [P in keyof T & keyof AggregateSazonalidade]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSazonalidade[P]>
      : GetScalarType<T[P], AggregateSazonalidade[P]>
  }




  export type SazonalidadeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SazonalidadeWhereInput
    orderBy?: SazonalidadeOrderByWithAggregationInput | SazonalidadeOrderByWithAggregationInput[]
    by: SazonalidadeScalarFieldEnum[] | SazonalidadeScalarFieldEnum
    having?: SazonalidadeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SazonalidadeCountAggregateInputType | true
    _avg?: SazonalidadeAvgAggregateInputType
    _sum?: SazonalidadeSumAggregateInputType
    _min?: SazonalidadeMinAggregateInputType
    _max?: SazonalidadeMaxAggregateInputType
  }

  export type SazonalidadeGroupByOutputType = {
    id: number
    filialId: number | null
    ano: number
    mes: number
    valorTotal: Decimal
    quantidadeNotas: number
    quantidadeItens: number
    percentualAno: Decimal
    createdAt: Date
    updatedAt: Date
    _count: SazonalidadeCountAggregateOutputType | null
    _avg: SazonalidadeAvgAggregateOutputType | null
    _sum: SazonalidadeSumAggregateOutputType | null
    _min: SazonalidadeMinAggregateOutputType | null
    _max: SazonalidadeMaxAggregateOutputType | null
  }

  type GetSazonalidadeGroupByPayload<T extends SazonalidadeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SazonalidadeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SazonalidadeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SazonalidadeGroupByOutputType[P]>
            : GetScalarType<T[P], SazonalidadeGroupByOutputType[P]>
        }
      >
    >


  export type SazonalidadeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    ano?: boolean
    mes?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    percentualAno?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | Sazonalidade$filialArgs<ExtArgs>
  }, ExtArgs["result"]["sazonalidade"]>



  export type SazonalidadeSelectScalar = {
    id?: boolean
    filialId?: boolean
    ano?: boolean
    mes?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    percentualAno?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SazonalidadeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "ano" | "mes" | "valorTotal" | "quantidadeNotas" | "quantidadeItens" | "percentualAno" | "createdAt" | "updatedAt", ExtArgs["result"]["sazonalidade"]>
  export type SazonalidadeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | Sazonalidade$filialArgs<ExtArgs>
  }

  export type $SazonalidadePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sazonalidade"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      ano: number
      mes: number
      valorTotal: Prisma.Decimal
      quantidadeNotas: number
      quantidadeItens: number
      percentualAno: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["sazonalidade"]>
    composites: {}
  }

  type SazonalidadeGetPayload<S extends boolean | null | undefined | SazonalidadeDefaultArgs> = $Result.GetResult<Prisma.$SazonalidadePayload, S>

  type SazonalidadeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SazonalidadeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SazonalidadeCountAggregateInputType | true
    }

  export interface SazonalidadeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sazonalidade'], meta: { name: 'Sazonalidade' } }
    /**
     * Find zero or one Sazonalidade that matches the filter.
     * @param {SazonalidadeFindUniqueArgs} args - Arguments to find a Sazonalidade
     * @example
     * // Get one Sazonalidade
     * const sazonalidade = await prisma.sazonalidade.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SazonalidadeFindUniqueArgs>(args: SelectSubset<T, SazonalidadeFindUniqueArgs<ExtArgs>>): Prisma__SazonalidadeClient<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sazonalidade that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SazonalidadeFindUniqueOrThrowArgs} args - Arguments to find a Sazonalidade
     * @example
     * // Get one Sazonalidade
     * const sazonalidade = await prisma.sazonalidade.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SazonalidadeFindUniqueOrThrowArgs>(args: SelectSubset<T, SazonalidadeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SazonalidadeClient<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sazonalidade that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SazonalidadeFindFirstArgs} args - Arguments to find a Sazonalidade
     * @example
     * // Get one Sazonalidade
     * const sazonalidade = await prisma.sazonalidade.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SazonalidadeFindFirstArgs>(args?: SelectSubset<T, SazonalidadeFindFirstArgs<ExtArgs>>): Prisma__SazonalidadeClient<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sazonalidade that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SazonalidadeFindFirstOrThrowArgs} args - Arguments to find a Sazonalidade
     * @example
     * // Get one Sazonalidade
     * const sazonalidade = await prisma.sazonalidade.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SazonalidadeFindFirstOrThrowArgs>(args?: SelectSubset<T, SazonalidadeFindFirstOrThrowArgs<ExtArgs>>): Prisma__SazonalidadeClient<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sazonalidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SazonalidadeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sazonalidades
     * const sazonalidades = await prisma.sazonalidade.findMany()
     * 
     * // Get first 10 Sazonalidades
     * const sazonalidades = await prisma.sazonalidade.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sazonalidadeWithIdOnly = await prisma.sazonalidade.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SazonalidadeFindManyArgs>(args?: SelectSubset<T, SazonalidadeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sazonalidade.
     * @param {SazonalidadeCreateArgs} args - Arguments to create a Sazonalidade.
     * @example
     * // Create one Sazonalidade
     * const Sazonalidade = await prisma.sazonalidade.create({
     *   data: {
     *     // ... data to create a Sazonalidade
     *   }
     * })
     * 
     */
    create<T extends SazonalidadeCreateArgs>(args: SelectSubset<T, SazonalidadeCreateArgs<ExtArgs>>): Prisma__SazonalidadeClient<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sazonalidades.
     * @param {SazonalidadeCreateManyArgs} args - Arguments to create many Sazonalidades.
     * @example
     * // Create many Sazonalidades
     * const sazonalidade = await prisma.sazonalidade.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SazonalidadeCreateManyArgs>(args?: SelectSubset<T, SazonalidadeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sazonalidade.
     * @param {SazonalidadeDeleteArgs} args - Arguments to delete one Sazonalidade.
     * @example
     * // Delete one Sazonalidade
     * const Sazonalidade = await prisma.sazonalidade.delete({
     *   where: {
     *     // ... filter to delete one Sazonalidade
     *   }
     * })
     * 
     */
    delete<T extends SazonalidadeDeleteArgs>(args: SelectSubset<T, SazonalidadeDeleteArgs<ExtArgs>>): Prisma__SazonalidadeClient<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sazonalidade.
     * @param {SazonalidadeUpdateArgs} args - Arguments to update one Sazonalidade.
     * @example
     * // Update one Sazonalidade
     * const sazonalidade = await prisma.sazonalidade.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SazonalidadeUpdateArgs>(args: SelectSubset<T, SazonalidadeUpdateArgs<ExtArgs>>): Prisma__SazonalidadeClient<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sazonalidades.
     * @param {SazonalidadeDeleteManyArgs} args - Arguments to filter Sazonalidades to delete.
     * @example
     * // Delete a few Sazonalidades
     * const { count } = await prisma.sazonalidade.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SazonalidadeDeleteManyArgs>(args?: SelectSubset<T, SazonalidadeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sazonalidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SazonalidadeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sazonalidades
     * const sazonalidade = await prisma.sazonalidade.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SazonalidadeUpdateManyArgs>(args: SelectSubset<T, SazonalidadeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sazonalidade.
     * @param {SazonalidadeUpsertArgs} args - Arguments to update or create a Sazonalidade.
     * @example
     * // Update or create a Sazonalidade
     * const sazonalidade = await prisma.sazonalidade.upsert({
     *   create: {
     *     // ... data to create a Sazonalidade
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sazonalidade we want to update
     *   }
     * })
     */
    upsert<T extends SazonalidadeUpsertArgs>(args: SelectSubset<T, SazonalidadeUpsertArgs<ExtArgs>>): Prisma__SazonalidadeClient<$Result.GetResult<Prisma.$SazonalidadePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sazonalidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SazonalidadeCountArgs} args - Arguments to filter Sazonalidades to count.
     * @example
     * // Count the number of Sazonalidades
     * const count = await prisma.sazonalidade.count({
     *   where: {
     *     // ... the filter for the Sazonalidades we want to count
     *   }
     * })
    **/
    count<T extends SazonalidadeCountArgs>(
      args?: Subset<T, SazonalidadeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SazonalidadeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sazonalidade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SazonalidadeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SazonalidadeAggregateArgs>(args: Subset<T, SazonalidadeAggregateArgs>): Prisma.PrismaPromise<GetSazonalidadeAggregateType<T>>

    /**
     * Group by Sazonalidade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SazonalidadeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SazonalidadeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SazonalidadeGroupByArgs['orderBy'] }
        : { orderBy?: SazonalidadeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SazonalidadeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSazonalidadeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sazonalidade model
   */
  readonly fields: SazonalidadeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sazonalidade.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SazonalidadeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends Sazonalidade$filialArgs<ExtArgs> = {}>(args?: Subset<T, Sazonalidade$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sazonalidade model
   */
  interface SazonalidadeFieldRefs {
    readonly id: FieldRef<"Sazonalidade", 'Int'>
    readonly filialId: FieldRef<"Sazonalidade", 'Int'>
    readonly ano: FieldRef<"Sazonalidade", 'Int'>
    readonly mes: FieldRef<"Sazonalidade", 'Int'>
    readonly valorTotal: FieldRef<"Sazonalidade", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"Sazonalidade", 'Int'>
    readonly quantidadeItens: FieldRef<"Sazonalidade", 'Int'>
    readonly percentualAno: FieldRef<"Sazonalidade", 'Decimal'>
    readonly createdAt: FieldRef<"Sazonalidade", 'DateTime'>
    readonly updatedAt: FieldRef<"Sazonalidade", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Sazonalidade findUnique
   */
  export type SazonalidadeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * Filter, which Sazonalidade to fetch.
     */
    where: SazonalidadeWhereUniqueInput
  }

  /**
   * Sazonalidade findUniqueOrThrow
   */
  export type SazonalidadeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * Filter, which Sazonalidade to fetch.
     */
    where: SazonalidadeWhereUniqueInput
  }

  /**
   * Sazonalidade findFirst
   */
  export type SazonalidadeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * Filter, which Sazonalidade to fetch.
     */
    where?: SazonalidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sazonalidades to fetch.
     */
    orderBy?: SazonalidadeOrderByWithRelationInput | SazonalidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sazonalidades.
     */
    cursor?: SazonalidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sazonalidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sazonalidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sazonalidades.
     */
    distinct?: SazonalidadeScalarFieldEnum | SazonalidadeScalarFieldEnum[]
  }

  /**
   * Sazonalidade findFirstOrThrow
   */
  export type SazonalidadeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * Filter, which Sazonalidade to fetch.
     */
    where?: SazonalidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sazonalidades to fetch.
     */
    orderBy?: SazonalidadeOrderByWithRelationInput | SazonalidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sazonalidades.
     */
    cursor?: SazonalidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sazonalidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sazonalidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sazonalidades.
     */
    distinct?: SazonalidadeScalarFieldEnum | SazonalidadeScalarFieldEnum[]
  }

  /**
   * Sazonalidade findMany
   */
  export type SazonalidadeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * Filter, which Sazonalidades to fetch.
     */
    where?: SazonalidadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sazonalidades to fetch.
     */
    orderBy?: SazonalidadeOrderByWithRelationInput | SazonalidadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sazonalidades.
     */
    cursor?: SazonalidadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sazonalidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sazonalidades.
     */
    skip?: number
    distinct?: SazonalidadeScalarFieldEnum | SazonalidadeScalarFieldEnum[]
  }

  /**
   * Sazonalidade create
   */
  export type SazonalidadeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * The data needed to create a Sazonalidade.
     */
    data: XOR<SazonalidadeCreateInput, SazonalidadeUncheckedCreateInput>
  }

  /**
   * Sazonalidade createMany
   */
  export type SazonalidadeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sazonalidades.
     */
    data: SazonalidadeCreateManyInput | SazonalidadeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sazonalidade update
   */
  export type SazonalidadeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * The data needed to update a Sazonalidade.
     */
    data: XOR<SazonalidadeUpdateInput, SazonalidadeUncheckedUpdateInput>
    /**
     * Choose, which Sazonalidade to update.
     */
    where: SazonalidadeWhereUniqueInput
  }

  /**
   * Sazonalidade updateMany
   */
  export type SazonalidadeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sazonalidades.
     */
    data: XOR<SazonalidadeUpdateManyMutationInput, SazonalidadeUncheckedUpdateManyInput>
    /**
     * Filter which Sazonalidades to update
     */
    where?: SazonalidadeWhereInput
    /**
     * Limit how many Sazonalidades to update.
     */
    limit?: number
  }

  /**
   * Sazonalidade upsert
   */
  export type SazonalidadeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * The filter to search for the Sazonalidade to update in case it exists.
     */
    where: SazonalidadeWhereUniqueInput
    /**
     * In case the Sazonalidade found by the `where` argument doesn't exist, create a new Sazonalidade with this data.
     */
    create: XOR<SazonalidadeCreateInput, SazonalidadeUncheckedCreateInput>
    /**
     * In case the Sazonalidade was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SazonalidadeUpdateInput, SazonalidadeUncheckedUpdateInput>
  }

  /**
   * Sazonalidade delete
   */
  export type SazonalidadeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
    /**
     * Filter which Sazonalidade to delete.
     */
    where: SazonalidadeWhereUniqueInput
  }

  /**
   * Sazonalidade deleteMany
   */
  export type SazonalidadeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sazonalidades to delete
     */
    where?: SazonalidadeWhereInput
    /**
     * Limit how many Sazonalidades to delete.
     */
    limit?: number
  }

  /**
   * Sazonalidade.filial
   */
  export type Sazonalidade$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * Sazonalidade without action
   */
  export type SazonalidadeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sazonalidade
     */
    select?: SazonalidadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sazonalidade
     */
    omit?: SazonalidadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SazonalidadeInclude<ExtArgs> | null
  }


  /**
   * Model ReceitaLocalizacao
   */

  export type AggregateReceitaLocalizacao = {
    _count: ReceitaLocalizacaoCountAggregateOutputType | null
    _avg: ReceitaLocalizacaoAvgAggregateOutputType | null
    _sum: ReceitaLocalizacaoSumAggregateOutputType | null
    _min: ReceitaLocalizacaoMinAggregateOutputType | null
    _max: ReceitaLocalizacaoMaxAggregateOutputType | null
  }

  export type ReceitaLocalizacaoAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type ReceitaLocalizacaoSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type ReceitaLocalizacaoMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    cidade: string | null
    estado: string | null
    data: Date | null
    tipoPeriodo: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaLocalizacaoMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    cidade: string | null
    estado: string | null
    data: Date | null
    tipoPeriodo: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaLocalizacaoCountAggregateOutputType = {
    id: number
    filialId: number
    cidade: number
    estado: number
    data: number
    tipoPeriodo: number
    valorTotal: number
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceitaLocalizacaoAvgAggregateInputType = {
    id?: true
    filialId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type ReceitaLocalizacaoSumAggregateInputType = {
    id?: true
    filialId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type ReceitaLocalizacaoMinAggregateInputType = {
    id?: true
    filialId?: true
    cidade?: true
    estado?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaLocalizacaoMaxAggregateInputType = {
    id?: true
    filialId?: true
    cidade?: true
    estado?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaLocalizacaoCountAggregateInputType = {
    id?: true
    filialId?: true
    cidade?: true
    estado?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceitaLocalizacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaLocalizacao to aggregate.
     */
    where?: ReceitaLocalizacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaLocalizacaos to fetch.
     */
    orderBy?: ReceitaLocalizacaoOrderByWithRelationInput | ReceitaLocalizacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceitaLocalizacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaLocalizacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaLocalizacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReceitaLocalizacaos
    **/
    _count?: true | ReceitaLocalizacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceitaLocalizacaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceitaLocalizacaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceitaLocalizacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceitaLocalizacaoMaxAggregateInputType
  }

  export type GetReceitaLocalizacaoAggregateType<T extends ReceitaLocalizacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateReceitaLocalizacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceitaLocalizacao[P]>
      : GetScalarType<T[P], AggregateReceitaLocalizacao[P]>
  }




  export type ReceitaLocalizacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaLocalizacaoWhereInput
    orderBy?: ReceitaLocalizacaoOrderByWithAggregationInput | ReceitaLocalizacaoOrderByWithAggregationInput[]
    by: ReceitaLocalizacaoScalarFieldEnum[] | ReceitaLocalizacaoScalarFieldEnum
    having?: ReceitaLocalizacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceitaLocalizacaoCountAggregateInputType | true
    _avg?: ReceitaLocalizacaoAvgAggregateInputType
    _sum?: ReceitaLocalizacaoSumAggregateInputType
    _min?: ReceitaLocalizacaoMinAggregateInputType
    _max?: ReceitaLocalizacaoMaxAggregateInputType
  }

  export type ReceitaLocalizacaoGroupByOutputType = {
    id: number
    filialId: number | null
    cidade: string
    estado: string
    data: Date
    tipoPeriodo: string
    valorTotal: Decimal
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: Date
    updatedAt: Date
    _count: ReceitaLocalizacaoCountAggregateOutputType | null
    _avg: ReceitaLocalizacaoAvgAggregateOutputType | null
    _sum: ReceitaLocalizacaoSumAggregateOutputType | null
    _min: ReceitaLocalizacaoMinAggregateOutputType | null
    _max: ReceitaLocalizacaoMaxAggregateOutputType | null
  }

  type GetReceitaLocalizacaoGroupByPayload<T extends ReceitaLocalizacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceitaLocalizacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceitaLocalizacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceitaLocalizacaoGroupByOutputType[P]>
            : GetScalarType<T[P], ReceitaLocalizacaoGroupByOutputType[P]>
        }
      >
    >


  export type ReceitaLocalizacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    cidade?: boolean
    estado?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | ReceitaLocalizacao$filialArgs<ExtArgs>
  }, ExtArgs["result"]["receitaLocalizacao"]>



  export type ReceitaLocalizacaoSelectScalar = {
    id?: boolean
    filialId?: boolean
    cidade?: boolean
    estado?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceitaLocalizacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "cidade" | "estado" | "data" | "tipoPeriodo" | "valorTotal" | "quantidadeNotas" | "quantidadeItens" | "createdAt" | "updatedAt", ExtArgs["result"]["receitaLocalizacao"]>
  export type ReceitaLocalizacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | ReceitaLocalizacao$filialArgs<ExtArgs>
  }

  export type $ReceitaLocalizacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReceitaLocalizacao"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      cidade: string
      estado: string
      data: Date
      tipoPeriodo: string
      valorTotal: Prisma.Decimal
      quantidadeNotas: number
      quantidadeItens: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receitaLocalizacao"]>
    composites: {}
  }

  type ReceitaLocalizacaoGetPayload<S extends boolean | null | undefined | ReceitaLocalizacaoDefaultArgs> = $Result.GetResult<Prisma.$ReceitaLocalizacaoPayload, S>

  type ReceitaLocalizacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReceitaLocalizacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReceitaLocalizacaoCountAggregateInputType | true
    }

  export interface ReceitaLocalizacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReceitaLocalizacao'], meta: { name: 'ReceitaLocalizacao' } }
    /**
     * Find zero or one ReceitaLocalizacao that matches the filter.
     * @param {ReceitaLocalizacaoFindUniqueArgs} args - Arguments to find a ReceitaLocalizacao
     * @example
     * // Get one ReceitaLocalizacao
     * const receitaLocalizacao = await prisma.receitaLocalizacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceitaLocalizacaoFindUniqueArgs>(args: SelectSubset<T, ReceitaLocalizacaoFindUniqueArgs<ExtArgs>>): Prisma__ReceitaLocalizacaoClient<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReceitaLocalizacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReceitaLocalizacaoFindUniqueOrThrowArgs} args - Arguments to find a ReceitaLocalizacao
     * @example
     * // Get one ReceitaLocalizacao
     * const receitaLocalizacao = await prisma.receitaLocalizacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceitaLocalizacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceitaLocalizacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceitaLocalizacaoClient<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaLocalizacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaLocalizacaoFindFirstArgs} args - Arguments to find a ReceitaLocalizacao
     * @example
     * // Get one ReceitaLocalizacao
     * const receitaLocalizacao = await prisma.receitaLocalizacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceitaLocalizacaoFindFirstArgs>(args?: SelectSubset<T, ReceitaLocalizacaoFindFirstArgs<ExtArgs>>): Prisma__ReceitaLocalizacaoClient<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaLocalizacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaLocalizacaoFindFirstOrThrowArgs} args - Arguments to find a ReceitaLocalizacao
     * @example
     * // Get one ReceitaLocalizacao
     * const receitaLocalizacao = await prisma.receitaLocalizacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceitaLocalizacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceitaLocalizacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceitaLocalizacaoClient<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReceitaLocalizacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaLocalizacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReceitaLocalizacaos
     * const receitaLocalizacaos = await prisma.receitaLocalizacao.findMany()
     * 
     * // Get first 10 ReceitaLocalizacaos
     * const receitaLocalizacaos = await prisma.receitaLocalizacao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receitaLocalizacaoWithIdOnly = await prisma.receitaLocalizacao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceitaLocalizacaoFindManyArgs>(args?: SelectSubset<T, ReceitaLocalizacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReceitaLocalizacao.
     * @param {ReceitaLocalizacaoCreateArgs} args - Arguments to create a ReceitaLocalizacao.
     * @example
     * // Create one ReceitaLocalizacao
     * const ReceitaLocalizacao = await prisma.receitaLocalizacao.create({
     *   data: {
     *     // ... data to create a ReceitaLocalizacao
     *   }
     * })
     * 
     */
    create<T extends ReceitaLocalizacaoCreateArgs>(args: SelectSubset<T, ReceitaLocalizacaoCreateArgs<ExtArgs>>): Prisma__ReceitaLocalizacaoClient<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReceitaLocalizacaos.
     * @param {ReceitaLocalizacaoCreateManyArgs} args - Arguments to create many ReceitaLocalizacaos.
     * @example
     * // Create many ReceitaLocalizacaos
     * const receitaLocalizacao = await prisma.receitaLocalizacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceitaLocalizacaoCreateManyArgs>(args?: SelectSubset<T, ReceitaLocalizacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReceitaLocalizacao.
     * @param {ReceitaLocalizacaoDeleteArgs} args - Arguments to delete one ReceitaLocalizacao.
     * @example
     * // Delete one ReceitaLocalizacao
     * const ReceitaLocalizacao = await prisma.receitaLocalizacao.delete({
     *   where: {
     *     // ... filter to delete one ReceitaLocalizacao
     *   }
     * })
     * 
     */
    delete<T extends ReceitaLocalizacaoDeleteArgs>(args: SelectSubset<T, ReceitaLocalizacaoDeleteArgs<ExtArgs>>): Prisma__ReceitaLocalizacaoClient<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReceitaLocalizacao.
     * @param {ReceitaLocalizacaoUpdateArgs} args - Arguments to update one ReceitaLocalizacao.
     * @example
     * // Update one ReceitaLocalizacao
     * const receitaLocalizacao = await prisma.receitaLocalizacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceitaLocalizacaoUpdateArgs>(args: SelectSubset<T, ReceitaLocalizacaoUpdateArgs<ExtArgs>>): Prisma__ReceitaLocalizacaoClient<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReceitaLocalizacaos.
     * @param {ReceitaLocalizacaoDeleteManyArgs} args - Arguments to filter ReceitaLocalizacaos to delete.
     * @example
     * // Delete a few ReceitaLocalizacaos
     * const { count } = await prisma.receitaLocalizacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceitaLocalizacaoDeleteManyArgs>(args?: SelectSubset<T, ReceitaLocalizacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReceitaLocalizacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaLocalizacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReceitaLocalizacaos
     * const receitaLocalizacao = await prisma.receitaLocalizacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceitaLocalizacaoUpdateManyArgs>(args: SelectSubset<T, ReceitaLocalizacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReceitaLocalizacao.
     * @param {ReceitaLocalizacaoUpsertArgs} args - Arguments to update or create a ReceitaLocalizacao.
     * @example
     * // Update or create a ReceitaLocalizacao
     * const receitaLocalizacao = await prisma.receitaLocalizacao.upsert({
     *   create: {
     *     // ... data to create a ReceitaLocalizacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReceitaLocalizacao we want to update
     *   }
     * })
     */
    upsert<T extends ReceitaLocalizacaoUpsertArgs>(args: SelectSubset<T, ReceitaLocalizacaoUpsertArgs<ExtArgs>>): Prisma__ReceitaLocalizacaoClient<$Result.GetResult<Prisma.$ReceitaLocalizacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReceitaLocalizacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaLocalizacaoCountArgs} args - Arguments to filter ReceitaLocalizacaos to count.
     * @example
     * // Count the number of ReceitaLocalizacaos
     * const count = await prisma.receitaLocalizacao.count({
     *   where: {
     *     // ... the filter for the ReceitaLocalizacaos we want to count
     *   }
     * })
    **/
    count<T extends ReceitaLocalizacaoCountArgs>(
      args?: Subset<T, ReceitaLocalizacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceitaLocalizacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReceitaLocalizacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaLocalizacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceitaLocalizacaoAggregateArgs>(args: Subset<T, ReceitaLocalizacaoAggregateArgs>): Prisma.PrismaPromise<GetReceitaLocalizacaoAggregateType<T>>

    /**
     * Group by ReceitaLocalizacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaLocalizacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceitaLocalizacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceitaLocalizacaoGroupByArgs['orderBy'] }
        : { orderBy?: ReceitaLocalizacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceitaLocalizacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceitaLocalizacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReceitaLocalizacao model
   */
  readonly fields: ReceitaLocalizacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReceitaLocalizacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceitaLocalizacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends ReceitaLocalizacao$filialArgs<ExtArgs> = {}>(args?: Subset<T, ReceitaLocalizacao$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReceitaLocalizacao model
   */
  interface ReceitaLocalizacaoFieldRefs {
    readonly id: FieldRef<"ReceitaLocalizacao", 'Int'>
    readonly filialId: FieldRef<"ReceitaLocalizacao", 'Int'>
    readonly cidade: FieldRef<"ReceitaLocalizacao", 'String'>
    readonly estado: FieldRef<"ReceitaLocalizacao", 'String'>
    readonly data: FieldRef<"ReceitaLocalizacao", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ReceitaLocalizacao", 'String'>
    readonly valorTotal: FieldRef<"ReceitaLocalizacao", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"ReceitaLocalizacao", 'Int'>
    readonly quantidadeItens: FieldRef<"ReceitaLocalizacao", 'Int'>
    readonly createdAt: FieldRef<"ReceitaLocalizacao", 'DateTime'>
    readonly updatedAt: FieldRef<"ReceitaLocalizacao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReceitaLocalizacao findUnique
   */
  export type ReceitaLocalizacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaLocalizacao to fetch.
     */
    where: ReceitaLocalizacaoWhereUniqueInput
  }

  /**
   * ReceitaLocalizacao findUniqueOrThrow
   */
  export type ReceitaLocalizacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaLocalizacao to fetch.
     */
    where: ReceitaLocalizacaoWhereUniqueInput
  }

  /**
   * ReceitaLocalizacao findFirst
   */
  export type ReceitaLocalizacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaLocalizacao to fetch.
     */
    where?: ReceitaLocalizacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaLocalizacaos to fetch.
     */
    orderBy?: ReceitaLocalizacaoOrderByWithRelationInput | ReceitaLocalizacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaLocalizacaos.
     */
    cursor?: ReceitaLocalizacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaLocalizacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaLocalizacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaLocalizacaos.
     */
    distinct?: ReceitaLocalizacaoScalarFieldEnum | ReceitaLocalizacaoScalarFieldEnum[]
  }

  /**
   * ReceitaLocalizacao findFirstOrThrow
   */
  export type ReceitaLocalizacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaLocalizacao to fetch.
     */
    where?: ReceitaLocalizacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaLocalizacaos to fetch.
     */
    orderBy?: ReceitaLocalizacaoOrderByWithRelationInput | ReceitaLocalizacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaLocalizacaos.
     */
    cursor?: ReceitaLocalizacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaLocalizacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaLocalizacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaLocalizacaos.
     */
    distinct?: ReceitaLocalizacaoScalarFieldEnum | ReceitaLocalizacaoScalarFieldEnum[]
  }

  /**
   * ReceitaLocalizacao findMany
   */
  export type ReceitaLocalizacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaLocalizacaos to fetch.
     */
    where?: ReceitaLocalizacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaLocalizacaos to fetch.
     */
    orderBy?: ReceitaLocalizacaoOrderByWithRelationInput | ReceitaLocalizacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReceitaLocalizacaos.
     */
    cursor?: ReceitaLocalizacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaLocalizacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaLocalizacaos.
     */
    skip?: number
    distinct?: ReceitaLocalizacaoScalarFieldEnum | ReceitaLocalizacaoScalarFieldEnum[]
  }

  /**
   * ReceitaLocalizacao create
   */
  export type ReceitaLocalizacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReceitaLocalizacao.
     */
    data: XOR<ReceitaLocalizacaoCreateInput, ReceitaLocalizacaoUncheckedCreateInput>
  }

  /**
   * ReceitaLocalizacao createMany
   */
  export type ReceitaLocalizacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReceitaLocalizacaos.
     */
    data: ReceitaLocalizacaoCreateManyInput | ReceitaLocalizacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReceitaLocalizacao update
   */
  export type ReceitaLocalizacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReceitaLocalizacao.
     */
    data: XOR<ReceitaLocalizacaoUpdateInput, ReceitaLocalizacaoUncheckedUpdateInput>
    /**
     * Choose, which ReceitaLocalizacao to update.
     */
    where: ReceitaLocalizacaoWhereUniqueInput
  }

  /**
   * ReceitaLocalizacao updateMany
   */
  export type ReceitaLocalizacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReceitaLocalizacaos.
     */
    data: XOR<ReceitaLocalizacaoUpdateManyMutationInput, ReceitaLocalizacaoUncheckedUpdateManyInput>
    /**
     * Filter which ReceitaLocalizacaos to update
     */
    where?: ReceitaLocalizacaoWhereInput
    /**
     * Limit how many ReceitaLocalizacaos to update.
     */
    limit?: number
  }

  /**
   * ReceitaLocalizacao upsert
   */
  export type ReceitaLocalizacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReceitaLocalizacao to update in case it exists.
     */
    where: ReceitaLocalizacaoWhereUniqueInput
    /**
     * In case the ReceitaLocalizacao found by the `where` argument doesn't exist, create a new ReceitaLocalizacao with this data.
     */
    create: XOR<ReceitaLocalizacaoCreateInput, ReceitaLocalizacaoUncheckedCreateInput>
    /**
     * In case the ReceitaLocalizacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceitaLocalizacaoUpdateInput, ReceitaLocalizacaoUncheckedUpdateInput>
  }

  /**
   * ReceitaLocalizacao delete
   */
  export type ReceitaLocalizacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
    /**
     * Filter which ReceitaLocalizacao to delete.
     */
    where: ReceitaLocalizacaoWhereUniqueInput
  }

  /**
   * ReceitaLocalizacao deleteMany
   */
  export type ReceitaLocalizacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaLocalizacaos to delete
     */
    where?: ReceitaLocalizacaoWhereInput
    /**
     * Limit how many ReceitaLocalizacaos to delete.
     */
    limit?: number
  }

  /**
   * ReceitaLocalizacao.filial
   */
  export type ReceitaLocalizacao$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * ReceitaLocalizacao without action
   */
  export type ReceitaLocalizacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaLocalizacao
     */
    select?: ReceitaLocalizacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaLocalizacao
     */
    omit?: ReceitaLocalizacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaLocalizacaoInclude<ExtArgs> | null
  }


  /**
   * Model ReceitaVendedor
   */

  export type AggregateReceitaVendedor = {
    _count: ReceitaVendedorCountAggregateOutputType | null
    _avg: ReceitaVendedorAvgAggregateOutputType | null
    _sum: ReceitaVendedorSumAggregateOutputType | null
    _min: ReceitaVendedorMinAggregateOutputType | null
    _max: ReceitaVendedorMaxAggregateOutputType | null
  }

  export type ReceitaVendedorAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type ReceitaVendedorSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
  }

  export type ReceitaVendedorMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaVendedorMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    valorTotal: Decimal | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaVendedorCountAggregateOutputType = {
    id: number
    filialId: number
    vendedorId: number
    data: number
    tipoPeriodo: number
    valorTotal: number
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceitaVendedorAvgAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type ReceitaVendedorSumAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
  }

  export type ReceitaVendedorMinAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaVendedorMaxAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaVendedorCountAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    valorTotal?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceitaVendedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaVendedor to aggregate.
     */
    where?: ReceitaVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaVendedors to fetch.
     */
    orderBy?: ReceitaVendedorOrderByWithRelationInput | ReceitaVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceitaVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReceitaVendedors
    **/
    _count?: true | ReceitaVendedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceitaVendedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceitaVendedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceitaVendedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceitaVendedorMaxAggregateInputType
  }

  export type GetReceitaVendedorAggregateType<T extends ReceitaVendedorAggregateArgs> = {
        [P in keyof T & keyof AggregateReceitaVendedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceitaVendedor[P]>
      : GetScalarType<T[P], AggregateReceitaVendedor[P]>
  }




  export type ReceitaVendedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaVendedorWhereInput
    orderBy?: ReceitaVendedorOrderByWithAggregationInput | ReceitaVendedorOrderByWithAggregationInput[]
    by: ReceitaVendedorScalarFieldEnum[] | ReceitaVendedorScalarFieldEnum
    having?: ReceitaVendedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceitaVendedorCountAggregateInputType | true
    _avg?: ReceitaVendedorAvgAggregateInputType
    _sum?: ReceitaVendedorSumAggregateInputType
    _min?: ReceitaVendedorMinAggregateInputType
    _max?: ReceitaVendedorMaxAggregateInputType
  }

  export type ReceitaVendedorGroupByOutputType = {
    id: number
    filialId: number | null
    vendedorId: number
    data: Date
    tipoPeriodo: string
    valorTotal: Decimal
    quantidadeNotas: number
    quantidadeItens: number
    createdAt: Date
    updatedAt: Date
    _count: ReceitaVendedorCountAggregateOutputType | null
    _avg: ReceitaVendedorAvgAggregateOutputType | null
    _sum: ReceitaVendedorSumAggregateOutputType | null
    _min: ReceitaVendedorMinAggregateOutputType | null
    _max: ReceitaVendedorMaxAggregateOutputType | null
  }

  type GetReceitaVendedorGroupByPayload<T extends ReceitaVendedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceitaVendedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceitaVendedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceitaVendedorGroupByOutputType[P]>
            : GetScalarType<T[P], ReceitaVendedorGroupByOutputType[P]>
        }
      >
    >


  export type ReceitaVendedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | ReceitaVendedor$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["receitaVendedor"]>



  export type ReceitaVendedorSelectScalar = {
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    valorTotal?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceitaVendedorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "vendedorId" | "data" | "tipoPeriodo" | "valorTotal" | "quantidadeNotas" | "quantidadeItens" | "createdAt" | "updatedAt", ExtArgs["result"]["receitaVendedor"]>
  export type ReceitaVendedorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | ReceitaVendedor$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }

  export type $ReceitaVendedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReceitaVendedor"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      vendedor: Prisma.$VendedorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      vendedorId: number
      data: Date
      tipoPeriodo: string
      valorTotal: Prisma.Decimal
      quantidadeNotas: number
      quantidadeItens: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receitaVendedor"]>
    composites: {}
  }

  type ReceitaVendedorGetPayload<S extends boolean | null | undefined | ReceitaVendedorDefaultArgs> = $Result.GetResult<Prisma.$ReceitaVendedorPayload, S>

  type ReceitaVendedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReceitaVendedorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReceitaVendedorCountAggregateInputType | true
    }

  export interface ReceitaVendedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReceitaVendedor'], meta: { name: 'ReceitaVendedor' } }
    /**
     * Find zero or one ReceitaVendedor that matches the filter.
     * @param {ReceitaVendedorFindUniqueArgs} args - Arguments to find a ReceitaVendedor
     * @example
     * // Get one ReceitaVendedor
     * const receitaVendedor = await prisma.receitaVendedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceitaVendedorFindUniqueArgs>(args: SelectSubset<T, ReceitaVendedorFindUniqueArgs<ExtArgs>>): Prisma__ReceitaVendedorClient<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReceitaVendedor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReceitaVendedorFindUniqueOrThrowArgs} args - Arguments to find a ReceitaVendedor
     * @example
     * // Get one ReceitaVendedor
     * const receitaVendedor = await prisma.receitaVendedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceitaVendedorFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceitaVendedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceitaVendedorClient<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaVendedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorFindFirstArgs} args - Arguments to find a ReceitaVendedor
     * @example
     * // Get one ReceitaVendedor
     * const receitaVendedor = await prisma.receitaVendedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceitaVendedorFindFirstArgs>(args?: SelectSubset<T, ReceitaVendedorFindFirstArgs<ExtArgs>>): Prisma__ReceitaVendedorClient<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaVendedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorFindFirstOrThrowArgs} args - Arguments to find a ReceitaVendedor
     * @example
     * // Get one ReceitaVendedor
     * const receitaVendedor = await prisma.receitaVendedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceitaVendedorFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceitaVendedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceitaVendedorClient<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReceitaVendedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReceitaVendedors
     * const receitaVendedors = await prisma.receitaVendedor.findMany()
     * 
     * // Get first 10 ReceitaVendedors
     * const receitaVendedors = await prisma.receitaVendedor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receitaVendedorWithIdOnly = await prisma.receitaVendedor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceitaVendedorFindManyArgs>(args?: SelectSubset<T, ReceitaVendedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReceitaVendedor.
     * @param {ReceitaVendedorCreateArgs} args - Arguments to create a ReceitaVendedor.
     * @example
     * // Create one ReceitaVendedor
     * const ReceitaVendedor = await prisma.receitaVendedor.create({
     *   data: {
     *     // ... data to create a ReceitaVendedor
     *   }
     * })
     * 
     */
    create<T extends ReceitaVendedorCreateArgs>(args: SelectSubset<T, ReceitaVendedorCreateArgs<ExtArgs>>): Prisma__ReceitaVendedorClient<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReceitaVendedors.
     * @param {ReceitaVendedorCreateManyArgs} args - Arguments to create many ReceitaVendedors.
     * @example
     * // Create many ReceitaVendedors
     * const receitaVendedor = await prisma.receitaVendedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceitaVendedorCreateManyArgs>(args?: SelectSubset<T, ReceitaVendedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReceitaVendedor.
     * @param {ReceitaVendedorDeleteArgs} args - Arguments to delete one ReceitaVendedor.
     * @example
     * // Delete one ReceitaVendedor
     * const ReceitaVendedor = await prisma.receitaVendedor.delete({
     *   where: {
     *     // ... filter to delete one ReceitaVendedor
     *   }
     * })
     * 
     */
    delete<T extends ReceitaVendedorDeleteArgs>(args: SelectSubset<T, ReceitaVendedorDeleteArgs<ExtArgs>>): Prisma__ReceitaVendedorClient<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReceitaVendedor.
     * @param {ReceitaVendedorUpdateArgs} args - Arguments to update one ReceitaVendedor.
     * @example
     * // Update one ReceitaVendedor
     * const receitaVendedor = await prisma.receitaVendedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceitaVendedorUpdateArgs>(args: SelectSubset<T, ReceitaVendedorUpdateArgs<ExtArgs>>): Prisma__ReceitaVendedorClient<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReceitaVendedors.
     * @param {ReceitaVendedorDeleteManyArgs} args - Arguments to filter ReceitaVendedors to delete.
     * @example
     * // Delete a few ReceitaVendedors
     * const { count } = await prisma.receitaVendedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceitaVendedorDeleteManyArgs>(args?: SelectSubset<T, ReceitaVendedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReceitaVendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReceitaVendedors
     * const receitaVendedor = await prisma.receitaVendedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceitaVendedorUpdateManyArgs>(args: SelectSubset<T, ReceitaVendedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReceitaVendedor.
     * @param {ReceitaVendedorUpsertArgs} args - Arguments to update or create a ReceitaVendedor.
     * @example
     * // Update or create a ReceitaVendedor
     * const receitaVendedor = await prisma.receitaVendedor.upsert({
     *   create: {
     *     // ... data to create a ReceitaVendedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReceitaVendedor we want to update
     *   }
     * })
     */
    upsert<T extends ReceitaVendedorUpsertArgs>(args: SelectSubset<T, ReceitaVendedorUpsertArgs<ExtArgs>>): Prisma__ReceitaVendedorClient<$Result.GetResult<Prisma.$ReceitaVendedorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReceitaVendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorCountArgs} args - Arguments to filter ReceitaVendedors to count.
     * @example
     * // Count the number of ReceitaVendedors
     * const count = await prisma.receitaVendedor.count({
     *   where: {
     *     // ... the filter for the ReceitaVendedors we want to count
     *   }
     * })
    **/
    count<T extends ReceitaVendedorCountArgs>(
      args?: Subset<T, ReceitaVendedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceitaVendedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReceitaVendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceitaVendedorAggregateArgs>(args: Subset<T, ReceitaVendedorAggregateArgs>): Prisma.PrismaPromise<GetReceitaVendedorAggregateType<T>>

    /**
     * Group by ReceitaVendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceitaVendedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceitaVendedorGroupByArgs['orderBy'] }
        : { orderBy?: ReceitaVendedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceitaVendedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceitaVendedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReceitaVendedor model
   */
  readonly fields: ReceitaVendedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReceitaVendedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceitaVendedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends ReceitaVendedor$filialArgs<ExtArgs> = {}>(args?: Subset<T, ReceitaVendedor$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends VendedorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VendedorDefaultArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReceitaVendedor model
   */
  interface ReceitaVendedorFieldRefs {
    readonly id: FieldRef<"ReceitaVendedor", 'Int'>
    readonly filialId: FieldRef<"ReceitaVendedor", 'Int'>
    readonly vendedorId: FieldRef<"ReceitaVendedor", 'Int'>
    readonly data: FieldRef<"ReceitaVendedor", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ReceitaVendedor", 'String'>
    readonly valorTotal: FieldRef<"ReceitaVendedor", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"ReceitaVendedor", 'Int'>
    readonly quantidadeItens: FieldRef<"ReceitaVendedor", 'Int'>
    readonly createdAt: FieldRef<"ReceitaVendedor", 'DateTime'>
    readonly updatedAt: FieldRef<"ReceitaVendedor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReceitaVendedor findUnique
   */
  export type ReceitaVendedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedor to fetch.
     */
    where: ReceitaVendedorWhereUniqueInput
  }

  /**
   * ReceitaVendedor findUniqueOrThrow
   */
  export type ReceitaVendedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedor to fetch.
     */
    where: ReceitaVendedorWhereUniqueInput
  }

  /**
   * ReceitaVendedor findFirst
   */
  export type ReceitaVendedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedor to fetch.
     */
    where?: ReceitaVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaVendedors to fetch.
     */
    orderBy?: ReceitaVendedorOrderByWithRelationInput | ReceitaVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaVendedors.
     */
    cursor?: ReceitaVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaVendedors.
     */
    distinct?: ReceitaVendedorScalarFieldEnum | ReceitaVendedorScalarFieldEnum[]
  }

  /**
   * ReceitaVendedor findFirstOrThrow
   */
  export type ReceitaVendedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedor to fetch.
     */
    where?: ReceitaVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaVendedors to fetch.
     */
    orderBy?: ReceitaVendedorOrderByWithRelationInput | ReceitaVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaVendedors.
     */
    cursor?: ReceitaVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaVendedors.
     */
    distinct?: ReceitaVendedorScalarFieldEnum | ReceitaVendedorScalarFieldEnum[]
  }

  /**
   * ReceitaVendedor findMany
   */
  export type ReceitaVendedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedors to fetch.
     */
    where?: ReceitaVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaVendedors to fetch.
     */
    orderBy?: ReceitaVendedorOrderByWithRelationInput | ReceitaVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReceitaVendedors.
     */
    cursor?: ReceitaVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaVendedors.
     */
    skip?: number
    distinct?: ReceitaVendedorScalarFieldEnum | ReceitaVendedorScalarFieldEnum[]
  }

  /**
   * ReceitaVendedor create
   */
  export type ReceitaVendedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * The data needed to create a ReceitaVendedor.
     */
    data: XOR<ReceitaVendedorCreateInput, ReceitaVendedorUncheckedCreateInput>
  }

  /**
   * ReceitaVendedor createMany
   */
  export type ReceitaVendedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReceitaVendedors.
     */
    data: ReceitaVendedorCreateManyInput | ReceitaVendedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReceitaVendedor update
   */
  export type ReceitaVendedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * The data needed to update a ReceitaVendedor.
     */
    data: XOR<ReceitaVendedorUpdateInput, ReceitaVendedorUncheckedUpdateInput>
    /**
     * Choose, which ReceitaVendedor to update.
     */
    where: ReceitaVendedorWhereUniqueInput
  }

  /**
   * ReceitaVendedor updateMany
   */
  export type ReceitaVendedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReceitaVendedors.
     */
    data: XOR<ReceitaVendedorUpdateManyMutationInput, ReceitaVendedorUncheckedUpdateManyInput>
    /**
     * Filter which ReceitaVendedors to update
     */
    where?: ReceitaVendedorWhereInput
    /**
     * Limit how many ReceitaVendedors to update.
     */
    limit?: number
  }

  /**
   * ReceitaVendedor upsert
   */
  export type ReceitaVendedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * The filter to search for the ReceitaVendedor to update in case it exists.
     */
    where: ReceitaVendedorWhereUniqueInput
    /**
     * In case the ReceitaVendedor found by the `where` argument doesn't exist, create a new ReceitaVendedor with this data.
     */
    create: XOR<ReceitaVendedorCreateInput, ReceitaVendedorUncheckedCreateInput>
    /**
     * In case the ReceitaVendedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceitaVendedorUpdateInput, ReceitaVendedorUncheckedUpdateInput>
  }

  /**
   * ReceitaVendedor delete
   */
  export type ReceitaVendedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
    /**
     * Filter which ReceitaVendedor to delete.
     */
    where: ReceitaVendedorWhereUniqueInput
  }

  /**
   * ReceitaVendedor deleteMany
   */
  export type ReceitaVendedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaVendedors to delete
     */
    where?: ReceitaVendedorWhereInput
    /**
     * Limit how many ReceitaVendedors to delete.
     */
    limit?: number
  }

  /**
   * ReceitaVendedor.filial
   */
  export type ReceitaVendedor$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * ReceitaVendedor without action
   */
  export type ReceitaVendedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedor
     */
    select?: ReceitaVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedor
     */
    omit?: ReceitaVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorInclude<ExtArgs> | null
  }


  /**
   * Model EstatisticasNotasFiscais
   */

  export type AggregateEstatisticasNotasFiscais = {
    _count: EstatisticasNotasFiscaisCountAggregateOutputType | null
    _avg: EstatisticasNotasFiscaisAvgAggregateOutputType | null
    _sum: EstatisticasNotasFiscaisSumAggregateOutputType | null
    _min: EstatisticasNotasFiscaisMinAggregateOutputType | null
    _max: EstatisticasNotasFiscaisMaxAggregateOutputType | null
  }

  export type EstatisticasNotasFiscaisAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    mediaItensPorNota: Decimal | null
    valorTotalNotas: Decimal | null
  }

  export type EstatisticasNotasFiscaisSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    mediaItensPorNota: Decimal | null
    valorTotalNotas: Decimal | null
  }

  export type EstatisticasNotasFiscaisMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    mediaItensPorNota: Decimal | null
    valorTotalNotas: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EstatisticasNotasFiscaisMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    quantidadeNotas: number | null
    quantidadeItens: number | null
    mediaItensPorNota: Decimal | null
    valorTotalNotas: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EstatisticasNotasFiscaisCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    quantidadeNotas: number
    quantidadeItens: number
    mediaItensPorNota: number
    valorTotalNotas: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EstatisticasNotasFiscaisAvgAggregateInputType = {
    id?: true
    filialId?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    mediaItensPorNota?: true
    valorTotalNotas?: true
  }

  export type EstatisticasNotasFiscaisSumAggregateInputType = {
    id?: true
    filialId?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    mediaItensPorNota?: true
    valorTotalNotas?: true
  }

  export type EstatisticasNotasFiscaisMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    mediaItensPorNota?: true
    valorTotalNotas?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EstatisticasNotasFiscaisMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    mediaItensPorNota?: true
    valorTotalNotas?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EstatisticasNotasFiscaisCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    quantidadeNotas?: true
    quantidadeItens?: true
    mediaItensPorNota?: true
    valorTotalNotas?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EstatisticasNotasFiscaisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstatisticasNotasFiscais to aggregate.
     */
    where?: EstatisticasNotasFiscaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstatisticasNotasFiscais to fetch.
     */
    orderBy?: EstatisticasNotasFiscaisOrderByWithRelationInput | EstatisticasNotasFiscaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstatisticasNotasFiscaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstatisticasNotasFiscais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstatisticasNotasFiscais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstatisticasNotasFiscais
    **/
    _count?: true | EstatisticasNotasFiscaisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstatisticasNotasFiscaisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstatisticasNotasFiscaisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstatisticasNotasFiscaisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstatisticasNotasFiscaisMaxAggregateInputType
  }

  export type GetEstatisticasNotasFiscaisAggregateType<T extends EstatisticasNotasFiscaisAggregateArgs> = {
        [P in keyof T & keyof AggregateEstatisticasNotasFiscais]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstatisticasNotasFiscais[P]>
      : GetScalarType<T[P], AggregateEstatisticasNotasFiscais[P]>
  }




  export type EstatisticasNotasFiscaisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstatisticasNotasFiscaisWhereInput
    orderBy?: EstatisticasNotasFiscaisOrderByWithAggregationInput | EstatisticasNotasFiscaisOrderByWithAggregationInput[]
    by: EstatisticasNotasFiscaisScalarFieldEnum[] | EstatisticasNotasFiscaisScalarFieldEnum
    having?: EstatisticasNotasFiscaisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstatisticasNotasFiscaisCountAggregateInputType | true
    _avg?: EstatisticasNotasFiscaisAvgAggregateInputType
    _sum?: EstatisticasNotasFiscaisSumAggregateInputType
    _min?: EstatisticasNotasFiscaisMinAggregateInputType
    _max?: EstatisticasNotasFiscaisMaxAggregateInputType
  }

  export type EstatisticasNotasFiscaisGroupByOutputType = {
    id: number
    filialId: number | null
    data: Date
    tipoPeriodo: string
    quantidadeNotas: number
    quantidadeItens: number
    mediaItensPorNota: Decimal
    valorTotalNotas: Decimal
    createdAt: Date
    updatedAt: Date
    _count: EstatisticasNotasFiscaisCountAggregateOutputType | null
    _avg: EstatisticasNotasFiscaisAvgAggregateOutputType | null
    _sum: EstatisticasNotasFiscaisSumAggregateOutputType | null
    _min: EstatisticasNotasFiscaisMinAggregateOutputType | null
    _max: EstatisticasNotasFiscaisMaxAggregateOutputType | null
  }

  type GetEstatisticasNotasFiscaisGroupByPayload<T extends EstatisticasNotasFiscaisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstatisticasNotasFiscaisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstatisticasNotasFiscaisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstatisticasNotasFiscaisGroupByOutputType[P]>
            : GetScalarType<T[P], EstatisticasNotasFiscaisGroupByOutputType[P]>
        }
      >
    >


  export type EstatisticasNotasFiscaisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    mediaItensPorNota?: boolean
    valorTotalNotas?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | EstatisticasNotasFiscais$filialArgs<ExtArgs>
  }, ExtArgs["result"]["estatisticasNotasFiscais"]>



  export type EstatisticasNotasFiscaisSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    quantidadeNotas?: boolean
    quantidadeItens?: boolean
    mediaItensPorNota?: boolean
    valorTotalNotas?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EstatisticasNotasFiscaisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "quantidadeNotas" | "quantidadeItens" | "mediaItensPorNota" | "valorTotalNotas" | "createdAt" | "updatedAt", ExtArgs["result"]["estatisticasNotasFiscais"]>
  export type EstatisticasNotasFiscaisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | EstatisticasNotasFiscais$filialArgs<ExtArgs>
  }

  export type $EstatisticasNotasFiscaisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstatisticasNotasFiscais"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      data: Date
      tipoPeriodo: string
      quantidadeNotas: number
      quantidadeItens: number
      mediaItensPorNota: Prisma.Decimal
      valorTotalNotas: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["estatisticasNotasFiscais"]>
    composites: {}
  }

  type EstatisticasNotasFiscaisGetPayload<S extends boolean | null | undefined | EstatisticasNotasFiscaisDefaultArgs> = $Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload, S>

  type EstatisticasNotasFiscaisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstatisticasNotasFiscaisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstatisticasNotasFiscaisCountAggregateInputType | true
    }

  export interface EstatisticasNotasFiscaisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstatisticasNotasFiscais'], meta: { name: 'EstatisticasNotasFiscais' } }
    /**
     * Find zero or one EstatisticasNotasFiscais that matches the filter.
     * @param {EstatisticasNotasFiscaisFindUniqueArgs} args - Arguments to find a EstatisticasNotasFiscais
     * @example
     * // Get one EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstatisticasNotasFiscaisFindUniqueArgs>(args: SelectSubset<T, EstatisticasNotasFiscaisFindUniqueArgs<ExtArgs>>): Prisma__EstatisticasNotasFiscaisClient<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstatisticasNotasFiscais that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstatisticasNotasFiscaisFindUniqueOrThrowArgs} args - Arguments to find a EstatisticasNotasFiscais
     * @example
     * // Get one EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstatisticasNotasFiscaisFindUniqueOrThrowArgs>(args: SelectSubset<T, EstatisticasNotasFiscaisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstatisticasNotasFiscaisClient<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstatisticasNotasFiscais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstatisticasNotasFiscaisFindFirstArgs} args - Arguments to find a EstatisticasNotasFiscais
     * @example
     * // Get one EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstatisticasNotasFiscaisFindFirstArgs>(args?: SelectSubset<T, EstatisticasNotasFiscaisFindFirstArgs<ExtArgs>>): Prisma__EstatisticasNotasFiscaisClient<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstatisticasNotasFiscais that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstatisticasNotasFiscaisFindFirstOrThrowArgs} args - Arguments to find a EstatisticasNotasFiscais
     * @example
     * // Get one EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstatisticasNotasFiscaisFindFirstOrThrowArgs>(args?: SelectSubset<T, EstatisticasNotasFiscaisFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstatisticasNotasFiscaisClient<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstatisticasNotasFiscais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstatisticasNotasFiscaisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.findMany()
     * 
     * // Get first 10 EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estatisticasNotasFiscaisWithIdOnly = await prisma.estatisticasNotasFiscais.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstatisticasNotasFiscaisFindManyArgs>(args?: SelectSubset<T, EstatisticasNotasFiscaisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstatisticasNotasFiscais.
     * @param {EstatisticasNotasFiscaisCreateArgs} args - Arguments to create a EstatisticasNotasFiscais.
     * @example
     * // Create one EstatisticasNotasFiscais
     * const EstatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.create({
     *   data: {
     *     // ... data to create a EstatisticasNotasFiscais
     *   }
     * })
     * 
     */
    create<T extends EstatisticasNotasFiscaisCreateArgs>(args: SelectSubset<T, EstatisticasNotasFiscaisCreateArgs<ExtArgs>>): Prisma__EstatisticasNotasFiscaisClient<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstatisticasNotasFiscais.
     * @param {EstatisticasNotasFiscaisCreateManyArgs} args - Arguments to create many EstatisticasNotasFiscais.
     * @example
     * // Create many EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstatisticasNotasFiscaisCreateManyArgs>(args?: SelectSubset<T, EstatisticasNotasFiscaisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EstatisticasNotasFiscais.
     * @param {EstatisticasNotasFiscaisDeleteArgs} args - Arguments to delete one EstatisticasNotasFiscais.
     * @example
     * // Delete one EstatisticasNotasFiscais
     * const EstatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.delete({
     *   where: {
     *     // ... filter to delete one EstatisticasNotasFiscais
     *   }
     * })
     * 
     */
    delete<T extends EstatisticasNotasFiscaisDeleteArgs>(args: SelectSubset<T, EstatisticasNotasFiscaisDeleteArgs<ExtArgs>>): Prisma__EstatisticasNotasFiscaisClient<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstatisticasNotasFiscais.
     * @param {EstatisticasNotasFiscaisUpdateArgs} args - Arguments to update one EstatisticasNotasFiscais.
     * @example
     * // Update one EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstatisticasNotasFiscaisUpdateArgs>(args: SelectSubset<T, EstatisticasNotasFiscaisUpdateArgs<ExtArgs>>): Prisma__EstatisticasNotasFiscaisClient<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstatisticasNotasFiscais.
     * @param {EstatisticasNotasFiscaisDeleteManyArgs} args - Arguments to filter EstatisticasNotasFiscais to delete.
     * @example
     * // Delete a few EstatisticasNotasFiscais
     * const { count } = await prisma.estatisticasNotasFiscais.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstatisticasNotasFiscaisDeleteManyArgs>(args?: SelectSubset<T, EstatisticasNotasFiscaisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstatisticasNotasFiscais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstatisticasNotasFiscaisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstatisticasNotasFiscaisUpdateManyArgs>(args: SelectSubset<T, EstatisticasNotasFiscaisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EstatisticasNotasFiscais.
     * @param {EstatisticasNotasFiscaisUpsertArgs} args - Arguments to update or create a EstatisticasNotasFiscais.
     * @example
     * // Update or create a EstatisticasNotasFiscais
     * const estatisticasNotasFiscais = await prisma.estatisticasNotasFiscais.upsert({
     *   create: {
     *     // ... data to create a EstatisticasNotasFiscais
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstatisticasNotasFiscais we want to update
     *   }
     * })
     */
    upsert<T extends EstatisticasNotasFiscaisUpsertArgs>(args: SelectSubset<T, EstatisticasNotasFiscaisUpsertArgs<ExtArgs>>): Prisma__EstatisticasNotasFiscaisClient<$Result.GetResult<Prisma.$EstatisticasNotasFiscaisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstatisticasNotasFiscais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstatisticasNotasFiscaisCountArgs} args - Arguments to filter EstatisticasNotasFiscais to count.
     * @example
     * // Count the number of EstatisticasNotasFiscais
     * const count = await prisma.estatisticasNotasFiscais.count({
     *   where: {
     *     // ... the filter for the EstatisticasNotasFiscais we want to count
     *   }
     * })
    **/
    count<T extends EstatisticasNotasFiscaisCountArgs>(
      args?: Subset<T, EstatisticasNotasFiscaisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstatisticasNotasFiscaisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstatisticasNotasFiscais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstatisticasNotasFiscaisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstatisticasNotasFiscaisAggregateArgs>(args: Subset<T, EstatisticasNotasFiscaisAggregateArgs>): Prisma.PrismaPromise<GetEstatisticasNotasFiscaisAggregateType<T>>

    /**
     * Group by EstatisticasNotasFiscais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstatisticasNotasFiscaisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstatisticasNotasFiscaisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstatisticasNotasFiscaisGroupByArgs['orderBy'] }
        : { orderBy?: EstatisticasNotasFiscaisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstatisticasNotasFiscaisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstatisticasNotasFiscaisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstatisticasNotasFiscais model
   */
  readonly fields: EstatisticasNotasFiscaisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstatisticasNotasFiscais.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstatisticasNotasFiscaisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends EstatisticasNotasFiscais$filialArgs<ExtArgs> = {}>(args?: Subset<T, EstatisticasNotasFiscais$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstatisticasNotasFiscais model
   */
  interface EstatisticasNotasFiscaisFieldRefs {
    readonly id: FieldRef<"EstatisticasNotasFiscais", 'Int'>
    readonly filialId: FieldRef<"EstatisticasNotasFiscais", 'Int'>
    readonly data: FieldRef<"EstatisticasNotasFiscais", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"EstatisticasNotasFiscais", 'String'>
    readonly quantidadeNotas: FieldRef<"EstatisticasNotasFiscais", 'Int'>
    readonly quantidadeItens: FieldRef<"EstatisticasNotasFiscais", 'Int'>
    readonly mediaItensPorNota: FieldRef<"EstatisticasNotasFiscais", 'Decimal'>
    readonly valorTotalNotas: FieldRef<"EstatisticasNotasFiscais", 'Decimal'>
    readonly createdAt: FieldRef<"EstatisticasNotasFiscais", 'DateTime'>
    readonly updatedAt: FieldRef<"EstatisticasNotasFiscais", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EstatisticasNotasFiscais findUnique
   */
  export type EstatisticasNotasFiscaisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * Filter, which EstatisticasNotasFiscais to fetch.
     */
    where: EstatisticasNotasFiscaisWhereUniqueInput
  }

  /**
   * EstatisticasNotasFiscais findUniqueOrThrow
   */
  export type EstatisticasNotasFiscaisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * Filter, which EstatisticasNotasFiscais to fetch.
     */
    where: EstatisticasNotasFiscaisWhereUniqueInput
  }

  /**
   * EstatisticasNotasFiscais findFirst
   */
  export type EstatisticasNotasFiscaisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * Filter, which EstatisticasNotasFiscais to fetch.
     */
    where?: EstatisticasNotasFiscaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstatisticasNotasFiscais to fetch.
     */
    orderBy?: EstatisticasNotasFiscaisOrderByWithRelationInput | EstatisticasNotasFiscaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstatisticasNotasFiscais.
     */
    cursor?: EstatisticasNotasFiscaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstatisticasNotasFiscais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstatisticasNotasFiscais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstatisticasNotasFiscais.
     */
    distinct?: EstatisticasNotasFiscaisScalarFieldEnum | EstatisticasNotasFiscaisScalarFieldEnum[]
  }

  /**
   * EstatisticasNotasFiscais findFirstOrThrow
   */
  export type EstatisticasNotasFiscaisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * Filter, which EstatisticasNotasFiscais to fetch.
     */
    where?: EstatisticasNotasFiscaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstatisticasNotasFiscais to fetch.
     */
    orderBy?: EstatisticasNotasFiscaisOrderByWithRelationInput | EstatisticasNotasFiscaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstatisticasNotasFiscais.
     */
    cursor?: EstatisticasNotasFiscaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstatisticasNotasFiscais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstatisticasNotasFiscais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstatisticasNotasFiscais.
     */
    distinct?: EstatisticasNotasFiscaisScalarFieldEnum | EstatisticasNotasFiscaisScalarFieldEnum[]
  }

  /**
   * EstatisticasNotasFiscais findMany
   */
  export type EstatisticasNotasFiscaisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * Filter, which EstatisticasNotasFiscais to fetch.
     */
    where?: EstatisticasNotasFiscaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstatisticasNotasFiscais to fetch.
     */
    orderBy?: EstatisticasNotasFiscaisOrderByWithRelationInput | EstatisticasNotasFiscaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstatisticasNotasFiscais.
     */
    cursor?: EstatisticasNotasFiscaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstatisticasNotasFiscais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstatisticasNotasFiscais.
     */
    skip?: number
    distinct?: EstatisticasNotasFiscaisScalarFieldEnum | EstatisticasNotasFiscaisScalarFieldEnum[]
  }

  /**
   * EstatisticasNotasFiscais create
   */
  export type EstatisticasNotasFiscaisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * The data needed to create a EstatisticasNotasFiscais.
     */
    data: XOR<EstatisticasNotasFiscaisCreateInput, EstatisticasNotasFiscaisUncheckedCreateInput>
  }

  /**
   * EstatisticasNotasFiscais createMany
   */
  export type EstatisticasNotasFiscaisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstatisticasNotasFiscais.
     */
    data: EstatisticasNotasFiscaisCreateManyInput | EstatisticasNotasFiscaisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstatisticasNotasFiscais update
   */
  export type EstatisticasNotasFiscaisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * The data needed to update a EstatisticasNotasFiscais.
     */
    data: XOR<EstatisticasNotasFiscaisUpdateInput, EstatisticasNotasFiscaisUncheckedUpdateInput>
    /**
     * Choose, which EstatisticasNotasFiscais to update.
     */
    where: EstatisticasNotasFiscaisWhereUniqueInput
  }

  /**
   * EstatisticasNotasFiscais updateMany
   */
  export type EstatisticasNotasFiscaisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstatisticasNotasFiscais.
     */
    data: XOR<EstatisticasNotasFiscaisUpdateManyMutationInput, EstatisticasNotasFiscaisUncheckedUpdateManyInput>
    /**
     * Filter which EstatisticasNotasFiscais to update
     */
    where?: EstatisticasNotasFiscaisWhereInput
    /**
     * Limit how many EstatisticasNotasFiscais to update.
     */
    limit?: number
  }

  /**
   * EstatisticasNotasFiscais upsert
   */
  export type EstatisticasNotasFiscaisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * The filter to search for the EstatisticasNotasFiscais to update in case it exists.
     */
    where: EstatisticasNotasFiscaisWhereUniqueInput
    /**
     * In case the EstatisticasNotasFiscais found by the `where` argument doesn't exist, create a new EstatisticasNotasFiscais with this data.
     */
    create: XOR<EstatisticasNotasFiscaisCreateInput, EstatisticasNotasFiscaisUncheckedCreateInput>
    /**
     * In case the EstatisticasNotasFiscais was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstatisticasNotasFiscaisUpdateInput, EstatisticasNotasFiscaisUncheckedUpdateInput>
  }

  /**
   * EstatisticasNotasFiscais delete
   */
  export type EstatisticasNotasFiscaisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
    /**
     * Filter which EstatisticasNotasFiscais to delete.
     */
    where: EstatisticasNotasFiscaisWhereUniqueInput
  }

  /**
   * EstatisticasNotasFiscais deleteMany
   */
  export type EstatisticasNotasFiscaisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstatisticasNotasFiscais to delete
     */
    where?: EstatisticasNotasFiscaisWhereInput
    /**
     * Limit how many EstatisticasNotasFiscais to delete.
     */
    limit?: number
  }

  /**
   * EstatisticasNotasFiscais.filial
   */
  export type EstatisticasNotasFiscais$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * EstatisticasNotasFiscais without action
   */
  export type EstatisticasNotasFiscaisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstatisticasNotasFiscais
     */
    select?: EstatisticasNotasFiscaisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstatisticasNotasFiscais
     */
    omit?: EstatisticasNotasFiscaisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstatisticasNotasFiscaisInclude<ExtArgs> | null
  }


  /**
   * Model ReceitaVendedorDetalhada
   */

  export type AggregateReceitaVendedorDetalhada = {
    _count: ReceitaVendedorDetalhadaCountAggregateOutputType | null
    _avg: ReceitaVendedorDetalhadaAvgAggregateOutputType | null
    _sum: ReceitaVendedorDetalhadaSumAggregateOutputType | null
    _min: ReceitaVendedorDetalhadaMinAggregateOutputType | null
    _max: ReceitaVendedorDetalhadaMaxAggregateOutputType | null
  }

  export type ReceitaVendedorDetalhadaAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    receitaTotal: Decimal | null
    numeroNotas: number | null
  }

  export type ReceitaVendedorDetalhadaSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    receitaTotal: Decimal | null
    numeroNotas: number | null
  }

  export type ReceitaVendedorDetalhadaMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaTotal: Decimal | null
    numeroNotas: number | null
    dataInicio: Date | null
    dataFim: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaVendedorDetalhadaMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaTotal: Decimal | null
    numeroNotas: number | null
    dataInicio: Date | null
    dataFim: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaVendedorDetalhadaCountAggregateOutputType = {
    id: number
    filialId: number
    vendedorId: number
    data: number
    tipoPeriodo: number
    receitaTotal: number
    numeroNotas: number
    dataInicio: number
    dataFim: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceitaVendedorDetalhadaAvgAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    receitaTotal?: true
    numeroNotas?: true
  }

  export type ReceitaVendedorDetalhadaSumAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    receitaTotal?: true
    numeroNotas?: true
  }

  export type ReceitaVendedorDetalhadaMinAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    receitaTotal?: true
    numeroNotas?: true
    dataInicio?: true
    dataFim?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaVendedorDetalhadaMaxAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    receitaTotal?: true
    numeroNotas?: true
    dataInicio?: true
    dataFim?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaVendedorDetalhadaCountAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    receitaTotal?: true
    numeroNotas?: true
    dataInicio?: true
    dataFim?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceitaVendedorDetalhadaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaVendedorDetalhada to aggregate.
     */
    where?: ReceitaVendedorDetalhadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaVendedorDetalhadas to fetch.
     */
    orderBy?: ReceitaVendedorDetalhadaOrderByWithRelationInput | ReceitaVendedorDetalhadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceitaVendedorDetalhadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaVendedorDetalhadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaVendedorDetalhadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReceitaVendedorDetalhadas
    **/
    _count?: true | ReceitaVendedorDetalhadaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceitaVendedorDetalhadaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceitaVendedorDetalhadaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceitaVendedorDetalhadaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceitaVendedorDetalhadaMaxAggregateInputType
  }

  export type GetReceitaVendedorDetalhadaAggregateType<T extends ReceitaVendedorDetalhadaAggregateArgs> = {
        [P in keyof T & keyof AggregateReceitaVendedorDetalhada]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceitaVendedorDetalhada[P]>
      : GetScalarType<T[P], AggregateReceitaVendedorDetalhada[P]>
  }




  export type ReceitaVendedorDetalhadaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaVendedorDetalhadaWhereInput
    orderBy?: ReceitaVendedorDetalhadaOrderByWithAggregationInput | ReceitaVendedorDetalhadaOrderByWithAggregationInput[]
    by: ReceitaVendedorDetalhadaScalarFieldEnum[] | ReceitaVendedorDetalhadaScalarFieldEnum
    having?: ReceitaVendedorDetalhadaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceitaVendedorDetalhadaCountAggregateInputType | true
    _avg?: ReceitaVendedorDetalhadaAvgAggregateInputType
    _sum?: ReceitaVendedorDetalhadaSumAggregateInputType
    _min?: ReceitaVendedorDetalhadaMinAggregateInputType
    _max?: ReceitaVendedorDetalhadaMaxAggregateInputType
  }

  export type ReceitaVendedorDetalhadaGroupByOutputType = {
    id: number
    filialId: number | null
    vendedorId: number
    data: Date
    tipoPeriodo: string
    receitaTotal: Decimal
    numeroNotas: number
    dataInicio: Date | null
    dataFim: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ReceitaVendedorDetalhadaCountAggregateOutputType | null
    _avg: ReceitaVendedorDetalhadaAvgAggregateOutputType | null
    _sum: ReceitaVendedorDetalhadaSumAggregateOutputType | null
    _min: ReceitaVendedorDetalhadaMinAggregateOutputType | null
    _max: ReceitaVendedorDetalhadaMaxAggregateOutputType | null
  }

  type GetReceitaVendedorDetalhadaGroupByPayload<T extends ReceitaVendedorDetalhadaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceitaVendedorDetalhadaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceitaVendedorDetalhadaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceitaVendedorDetalhadaGroupByOutputType[P]>
            : GetScalarType<T[P], ReceitaVendedorDetalhadaGroupByOutputType[P]>
        }
      >
    >


  export type ReceitaVendedorDetalhadaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaTotal?: boolean
    numeroNotas?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | ReceitaVendedorDetalhada$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["receitaVendedorDetalhada"]>



  export type ReceitaVendedorDetalhadaSelectScalar = {
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaTotal?: boolean
    numeroNotas?: boolean
    dataInicio?: boolean
    dataFim?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceitaVendedorDetalhadaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "vendedorId" | "data" | "tipoPeriodo" | "receitaTotal" | "numeroNotas" | "dataInicio" | "dataFim" | "createdAt" | "updatedAt", ExtArgs["result"]["receitaVendedorDetalhada"]>
  export type ReceitaVendedorDetalhadaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | ReceitaVendedorDetalhada$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }

  export type $ReceitaVendedorDetalhadaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReceitaVendedorDetalhada"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      vendedor: Prisma.$VendedorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      vendedorId: number
      data: Date
      tipoPeriodo: string
      receitaTotal: Prisma.Decimal
      numeroNotas: number
      dataInicio: Date | null
      dataFim: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receitaVendedorDetalhada"]>
    composites: {}
  }

  type ReceitaVendedorDetalhadaGetPayload<S extends boolean | null | undefined | ReceitaVendedorDetalhadaDefaultArgs> = $Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload, S>

  type ReceitaVendedorDetalhadaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReceitaVendedorDetalhadaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReceitaVendedorDetalhadaCountAggregateInputType | true
    }

  export interface ReceitaVendedorDetalhadaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReceitaVendedorDetalhada'], meta: { name: 'ReceitaVendedorDetalhada' } }
    /**
     * Find zero or one ReceitaVendedorDetalhada that matches the filter.
     * @param {ReceitaVendedorDetalhadaFindUniqueArgs} args - Arguments to find a ReceitaVendedorDetalhada
     * @example
     * // Get one ReceitaVendedorDetalhada
     * const receitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceitaVendedorDetalhadaFindUniqueArgs>(args: SelectSubset<T, ReceitaVendedorDetalhadaFindUniqueArgs<ExtArgs>>): Prisma__ReceitaVendedorDetalhadaClient<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReceitaVendedorDetalhada that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReceitaVendedorDetalhadaFindUniqueOrThrowArgs} args - Arguments to find a ReceitaVendedorDetalhada
     * @example
     * // Get one ReceitaVendedorDetalhada
     * const receitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceitaVendedorDetalhadaFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceitaVendedorDetalhadaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceitaVendedorDetalhadaClient<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaVendedorDetalhada that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorDetalhadaFindFirstArgs} args - Arguments to find a ReceitaVendedorDetalhada
     * @example
     * // Get one ReceitaVendedorDetalhada
     * const receitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceitaVendedorDetalhadaFindFirstArgs>(args?: SelectSubset<T, ReceitaVendedorDetalhadaFindFirstArgs<ExtArgs>>): Prisma__ReceitaVendedorDetalhadaClient<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaVendedorDetalhada that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorDetalhadaFindFirstOrThrowArgs} args - Arguments to find a ReceitaVendedorDetalhada
     * @example
     * // Get one ReceitaVendedorDetalhada
     * const receitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceitaVendedorDetalhadaFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceitaVendedorDetalhadaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceitaVendedorDetalhadaClient<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReceitaVendedorDetalhadas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorDetalhadaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReceitaVendedorDetalhadas
     * const receitaVendedorDetalhadas = await prisma.receitaVendedorDetalhada.findMany()
     * 
     * // Get first 10 ReceitaVendedorDetalhadas
     * const receitaVendedorDetalhadas = await prisma.receitaVendedorDetalhada.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receitaVendedorDetalhadaWithIdOnly = await prisma.receitaVendedorDetalhada.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceitaVendedorDetalhadaFindManyArgs>(args?: SelectSubset<T, ReceitaVendedorDetalhadaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReceitaVendedorDetalhada.
     * @param {ReceitaVendedorDetalhadaCreateArgs} args - Arguments to create a ReceitaVendedorDetalhada.
     * @example
     * // Create one ReceitaVendedorDetalhada
     * const ReceitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.create({
     *   data: {
     *     // ... data to create a ReceitaVendedorDetalhada
     *   }
     * })
     * 
     */
    create<T extends ReceitaVendedorDetalhadaCreateArgs>(args: SelectSubset<T, ReceitaVendedorDetalhadaCreateArgs<ExtArgs>>): Prisma__ReceitaVendedorDetalhadaClient<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReceitaVendedorDetalhadas.
     * @param {ReceitaVendedorDetalhadaCreateManyArgs} args - Arguments to create many ReceitaVendedorDetalhadas.
     * @example
     * // Create many ReceitaVendedorDetalhadas
     * const receitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceitaVendedorDetalhadaCreateManyArgs>(args?: SelectSubset<T, ReceitaVendedorDetalhadaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReceitaVendedorDetalhada.
     * @param {ReceitaVendedorDetalhadaDeleteArgs} args - Arguments to delete one ReceitaVendedorDetalhada.
     * @example
     * // Delete one ReceitaVendedorDetalhada
     * const ReceitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.delete({
     *   where: {
     *     // ... filter to delete one ReceitaVendedorDetalhada
     *   }
     * })
     * 
     */
    delete<T extends ReceitaVendedorDetalhadaDeleteArgs>(args: SelectSubset<T, ReceitaVendedorDetalhadaDeleteArgs<ExtArgs>>): Prisma__ReceitaVendedorDetalhadaClient<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReceitaVendedorDetalhada.
     * @param {ReceitaVendedorDetalhadaUpdateArgs} args - Arguments to update one ReceitaVendedorDetalhada.
     * @example
     * // Update one ReceitaVendedorDetalhada
     * const receitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceitaVendedorDetalhadaUpdateArgs>(args: SelectSubset<T, ReceitaVendedorDetalhadaUpdateArgs<ExtArgs>>): Prisma__ReceitaVendedorDetalhadaClient<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReceitaVendedorDetalhadas.
     * @param {ReceitaVendedorDetalhadaDeleteManyArgs} args - Arguments to filter ReceitaVendedorDetalhadas to delete.
     * @example
     * // Delete a few ReceitaVendedorDetalhadas
     * const { count } = await prisma.receitaVendedorDetalhada.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceitaVendedorDetalhadaDeleteManyArgs>(args?: SelectSubset<T, ReceitaVendedorDetalhadaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReceitaVendedorDetalhadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorDetalhadaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReceitaVendedorDetalhadas
     * const receitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceitaVendedorDetalhadaUpdateManyArgs>(args: SelectSubset<T, ReceitaVendedorDetalhadaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReceitaVendedorDetalhada.
     * @param {ReceitaVendedorDetalhadaUpsertArgs} args - Arguments to update or create a ReceitaVendedorDetalhada.
     * @example
     * // Update or create a ReceitaVendedorDetalhada
     * const receitaVendedorDetalhada = await prisma.receitaVendedorDetalhada.upsert({
     *   create: {
     *     // ... data to create a ReceitaVendedorDetalhada
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReceitaVendedorDetalhada we want to update
     *   }
     * })
     */
    upsert<T extends ReceitaVendedorDetalhadaUpsertArgs>(args: SelectSubset<T, ReceitaVendedorDetalhadaUpsertArgs<ExtArgs>>): Prisma__ReceitaVendedorDetalhadaClient<$Result.GetResult<Prisma.$ReceitaVendedorDetalhadaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReceitaVendedorDetalhadas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorDetalhadaCountArgs} args - Arguments to filter ReceitaVendedorDetalhadas to count.
     * @example
     * // Count the number of ReceitaVendedorDetalhadas
     * const count = await prisma.receitaVendedorDetalhada.count({
     *   where: {
     *     // ... the filter for the ReceitaVendedorDetalhadas we want to count
     *   }
     * })
    **/
    count<T extends ReceitaVendedorDetalhadaCountArgs>(
      args?: Subset<T, ReceitaVendedorDetalhadaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceitaVendedorDetalhadaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReceitaVendedorDetalhada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorDetalhadaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceitaVendedorDetalhadaAggregateArgs>(args: Subset<T, ReceitaVendedorDetalhadaAggregateArgs>): Prisma.PrismaPromise<GetReceitaVendedorDetalhadaAggregateType<T>>

    /**
     * Group by ReceitaVendedorDetalhada.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaVendedorDetalhadaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceitaVendedorDetalhadaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceitaVendedorDetalhadaGroupByArgs['orderBy'] }
        : { orderBy?: ReceitaVendedorDetalhadaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceitaVendedorDetalhadaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceitaVendedorDetalhadaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReceitaVendedorDetalhada model
   */
  readonly fields: ReceitaVendedorDetalhadaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReceitaVendedorDetalhada.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceitaVendedorDetalhadaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends ReceitaVendedorDetalhada$filialArgs<ExtArgs> = {}>(args?: Subset<T, ReceitaVendedorDetalhada$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends VendedorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VendedorDefaultArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReceitaVendedorDetalhada model
   */
  interface ReceitaVendedorDetalhadaFieldRefs {
    readonly id: FieldRef<"ReceitaVendedorDetalhada", 'Int'>
    readonly filialId: FieldRef<"ReceitaVendedorDetalhada", 'Int'>
    readonly vendedorId: FieldRef<"ReceitaVendedorDetalhada", 'Int'>
    readonly data: FieldRef<"ReceitaVendedorDetalhada", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ReceitaVendedorDetalhada", 'String'>
    readonly receitaTotal: FieldRef<"ReceitaVendedorDetalhada", 'Decimal'>
    readonly numeroNotas: FieldRef<"ReceitaVendedorDetalhada", 'Int'>
    readonly dataInicio: FieldRef<"ReceitaVendedorDetalhada", 'DateTime'>
    readonly dataFim: FieldRef<"ReceitaVendedorDetalhada", 'DateTime'>
    readonly createdAt: FieldRef<"ReceitaVendedorDetalhada", 'DateTime'>
    readonly updatedAt: FieldRef<"ReceitaVendedorDetalhada", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReceitaVendedorDetalhada findUnique
   */
  export type ReceitaVendedorDetalhadaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedorDetalhada to fetch.
     */
    where: ReceitaVendedorDetalhadaWhereUniqueInput
  }

  /**
   * ReceitaVendedorDetalhada findUniqueOrThrow
   */
  export type ReceitaVendedorDetalhadaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedorDetalhada to fetch.
     */
    where: ReceitaVendedorDetalhadaWhereUniqueInput
  }

  /**
   * ReceitaVendedorDetalhada findFirst
   */
  export type ReceitaVendedorDetalhadaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedorDetalhada to fetch.
     */
    where?: ReceitaVendedorDetalhadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaVendedorDetalhadas to fetch.
     */
    orderBy?: ReceitaVendedorDetalhadaOrderByWithRelationInput | ReceitaVendedorDetalhadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaVendedorDetalhadas.
     */
    cursor?: ReceitaVendedorDetalhadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaVendedorDetalhadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaVendedorDetalhadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaVendedorDetalhadas.
     */
    distinct?: ReceitaVendedorDetalhadaScalarFieldEnum | ReceitaVendedorDetalhadaScalarFieldEnum[]
  }

  /**
   * ReceitaVendedorDetalhada findFirstOrThrow
   */
  export type ReceitaVendedorDetalhadaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedorDetalhada to fetch.
     */
    where?: ReceitaVendedorDetalhadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaVendedorDetalhadas to fetch.
     */
    orderBy?: ReceitaVendedorDetalhadaOrderByWithRelationInput | ReceitaVendedorDetalhadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaVendedorDetalhadas.
     */
    cursor?: ReceitaVendedorDetalhadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaVendedorDetalhadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaVendedorDetalhadas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaVendedorDetalhadas.
     */
    distinct?: ReceitaVendedorDetalhadaScalarFieldEnum | ReceitaVendedorDetalhadaScalarFieldEnum[]
  }

  /**
   * ReceitaVendedorDetalhada findMany
   */
  export type ReceitaVendedorDetalhadaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaVendedorDetalhadas to fetch.
     */
    where?: ReceitaVendedorDetalhadaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaVendedorDetalhadas to fetch.
     */
    orderBy?: ReceitaVendedorDetalhadaOrderByWithRelationInput | ReceitaVendedorDetalhadaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReceitaVendedorDetalhadas.
     */
    cursor?: ReceitaVendedorDetalhadaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaVendedorDetalhadas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaVendedorDetalhadas.
     */
    skip?: number
    distinct?: ReceitaVendedorDetalhadaScalarFieldEnum | ReceitaVendedorDetalhadaScalarFieldEnum[]
  }

  /**
   * ReceitaVendedorDetalhada create
   */
  export type ReceitaVendedorDetalhadaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * The data needed to create a ReceitaVendedorDetalhada.
     */
    data: XOR<ReceitaVendedorDetalhadaCreateInput, ReceitaVendedorDetalhadaUncheckedCreateInput>
  }

  /**
   * ReceitaVendedorDetalhada createMany
   */
  export type ReceitaVendedorDetalhadaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReceitaVendedorDetalhadas.
     */
    data: ReceitaVendedorDetalhadaCreateManyInput | ReceitaVendedorDetalhadaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReceitaVendedorDetalhada update
   */
  export type ReceitaVendedorDetalhadaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * The data needed to update a ReceitaVendedorDetalhada.
     */
    data: XOR<ReceitaVendedorDetalhadaUpdateInput, ReceitaVendedorDetalhadaUncheckedUpdateInput>
    /**
     * Choose, which ReceitaVendedorDetalhada to update.
     */
    where: ReceitaVendedorDetalhadaWhereUniqueInput
  }

  /**
   * ReceitaVendedorDetalhada updateMany
   */
  export type ReceitaVendedorDetalhadaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReceitaVendedorDetalhadas.
     */
    data: XOR<ReceitaVendedorDetalhadaUpdateManyMutationInput, ReceitaVendedorDetalhadaUncheckedUpdateManyInput>
    /**
     * Filter which ReceitaVendedorDetalhadas to update
     */
    where?: ReceitaVendedorDetalhadaWhereInput
    /**
     * Limit how many ReceitaVendedorDetalhadas to update.
     */
    limit?: number
  }

  /**
   * ReceitaVendedorDetalhada upsert
   */
  export type ReceitaVendedorDetalhadaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * The filter to search for the ReceitaVendedorDetalhada to update in case it exists.
     */
    where: ReceitaVendedorDetalhadaWhereUniqueInput
    /**
     * In case the ReceitaVendedorDetalhada found by the `where` argument doesn't exist, create a new ReceitaVendedorDetalhada with this data.
     */
    create: XOR<ReceitaVendedorDetalhadaCreateInput, ReceitaVendedorDetalhadaUncheckedCreateInput>
    /**
     * In case the ReceitaVendedorDetalhada was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceitaVendedorDetalhadaUpdateInput, ReceitaVendedorDetalhadaUncheckedUpdateInput>
  }

  /**
   * ReceitaVendedorDetalhada delete
   */
  export type ReceitaVendedorDetalhadaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
    /**
     * Filter which ReceitaVendedorDetalhada to delete.
     */
    where: ReceitaVendedorDetalhadaWhereUniqueInput
  }

  /**
   * ReceitaVendedorDetalhada deleteMany
   */
  export type ReceitaVendedorDetalhadaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaVendedorDetalhadas to delete
     */
    where?: ReceitaVendedorDetalhadaWhereInput
    /**
     * Limit how many ReceitaVendedorDetalhadas to delete.
     */
    limit?: number
  }

  /**
   * ReceitaVendedorDetalhada.filial
   */
  export type ReceitaVendedorDetalhada$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * ReceitaVendedorDetalhada without action
   */
  export type ReceitaVendedorDetalhadaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaVendedorDetalhada
     */
    select?: ReceitaVendedorDetalhadaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaVendedorDetalhada
     */
    omit?: ReceitaVendedorDetalhadaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaVendedorDetalhadaInclude<ExtArgs> | null
  }


  /**
   * Model TicketMedioVendedor
   */

  export type AggregateTicketMedioVendedor = {
    _count: TicketMedioVendedorCountAggregateOutputType | null
    _avg: TicketMedioVendedorAvgAggregateOutputType | null
    _sum: TicketMedioVendedorSumAggregateOutputType | null
    _min: TicketMedioVendedorMinAggregateOutputType | null
    _max: TicketMedioVendedorMaxAggregateOutputType | null
  }

  export type TicketMedioVendedorAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    ticketMedio: Decimal | null
    quantidadeNotas: number | null
    valorTotal: Decimal | null
  }

  export type TicketMedioVendedorSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    ticketMedio: Decimal | null
    quantidadeNotas: number | null
    valorTotal: Decimal | null
  }

  export type TicketMedioVendedorMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    ticketMedio: Decimal | null
    quantidadeNotas: number | null
    valorTotal: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TicketMedioVendedorMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    ticketMedio: Decimal | null
    quantidadeNotas: number | null
    valorTotal: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TicketMedioVendedorCountAggregateOutputType = {
    id: number
    filialId: number
    vendedorId: number
    data: number
    tipoPeriodo: number
    ticketMedio: number
    quantidadeNotas: number
    valorTotal: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TicketMedioVendedorAvgAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    ticketMedio?: true
    quantidadeNotas?: true
    valorTotal?: true
  }

  export type TicketMedioVendedorSumAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    ticketMedio?: true
    quantidadeNotas?: true
    valorTotal?: true
  }

  export type TicketMedioVendedorMinAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    ticketMedio?: true
    quantidadeNotas?: true
    valorTotal?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TicketMedioVendedorMaxAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    ticketMedio?: true
    quantidadeNotas?: true
    valorTotal?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TicketMedioVendedorCountAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    ticketMedio?: true
    quantidadeNotas?: true
    valorTotal?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TicketMedioVendedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketMedioVendedor to aggregate.
     */
    where?: TicketMedioVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketMedioVendedors to fetch.
     */
    orderBy?: TicketMedioVendedorOrderByWithRelationInput | TicketMedioVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TicketMedioVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketMedioVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketMedioVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TicketMedioVendedors
    **/
    _count?: true | TicketMedioVendedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketMedioVendedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketMedioVendedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketMedioVendedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketMedioVendedorMaxAggregateInputType
  }

  export type GetTicketMedioVendedorAggregateType<T extends TicketMedioVendedorAggregateArgs> = {
        [P in keyof T & keyof AggregateTicketMedioVendedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicketMedioVendedor[P]>
      : GetScalarType<T[P], AggregateTicketMedioVendedor[P]>
  }




  export type TicketMedioVendedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketMedioVendedorWhereInput
    orderBy?: TicketMedioVendedorOrderByWithAggregationInput | TicketMedioVendedorOrderByWithAggregationInput[]
    by: TicketMedioVendedorScalarFieldEnum[] | TicketMedioVendedorScalarFieldEnum
    having?: TicketMedioVendedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketMedioVendedorCountAggregateInputType | true
    _avg?: TicketMedioVendedorAvgAggregateInputType
    _sum?: TicketMedioVendedorSumAggregateInputType
    _min?: TicketMedioVendedorMinAggregateInputType
    _max?: TicketMedioVendedorMaxAggregateInputType
  }

  export type TicketMedioVendedorGroupByOutputType = {
    id: number
    filialId: number | null
    vendedorId: number
    data: Date
    tipoPeriodo: string
    ticketMedio: Decimal
    quantidadeNotas: number
    valorTotal: Decimal
    createdAt: Date
    updatedAt: Date
    _count: TicketMedioVendedorCountAggregateOutputType | null
    _avg: TicketMedioVendedorAvgAggregateOutputType | null
    _sum: TicketMedioVendedorSumAggregateOutputType | null
    _min: TicketMedioVendedorMinAggregateOutputType | null
    _max: TicketMedioVendedorMaxAggregateOutputType | null
  }

  type GetTicketMedioVendedorGroupByPayload<T extends TicketMedioVendedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketMedioVendedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketMedioVendedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketMedioVendedorGroupByOutputType[P]>
            : GetScalarType<T[P], TicketMedioVendedorGroupByOutputType[P]>
        }
      >
    >


  export type TicketMedioVendedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    ticketMedio?: boolean
    quantidadeNotas?: boolean
    valorTotal?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | TicketMedioVendedor$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticketMedioVendedor"]>



  export type TicketMedioVendedorSelectScalar = {
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    ticketMedio?: boolean
    quantidadeNotas?: boolean
    valorTotal?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TicketMedioVendedorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "vendedorId" | "data" | "tipoPeriodo" | "ticketMedio" | "quantidadeNotas" | "valorTotal" | "createdAt" | "updatedAt", ExtArgs["result"]["ticketMedioVendedor"]>
  export type TicketMedioVendedorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | TicketMedioVendedor$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }

  export type $TicketMedioVendedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TicketMedioVendedor"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      vendedor: Prisma.$VendedorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      vendedorId: number
      data: Date
      tipoPeriodo: string
      ticketMedio: Prisma.Decimal
      quantidadeNotas: number
      valorTotal: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["ticketMedioVendedor"]>
    composites: {}
  }

  type TicketMedioVendedorGetPayload<S extends boolean | null | undefined | TicketMedioVendedorDefaultArgs> = $Result.GetResult<Prisma.$TicketMedioVendedorPayload, S>

  type TicketMedioVendedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TicketMedioVendedorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketMedioVendedorCountAggregateInputType | true
    }

  export interface TicketMedioVendedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TicketMedioVendedor'], meta: { name: 'TicketMedioVendedor' } }
    /**
     * Find zero or one TicketMedioVendedor that matches the filter.
     * @param {TicketMedioVendedorFindUniqueArgs} args - Arguments to find a TicketMedioVendedor
     * @example
     * // Get one TicketMedioVendedor
     * const ticketMedioVendedor = await prisma.ticketMedioVendedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TicketMedioVendedorFindUniqueArgs>(args: SelectSubset<T, TicketMedioVendedorFindUniqueArgs<ExtArgs>>): Prisma__TicketMedioVendedorClient<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TicketMedioVendedor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TicketMedioVendedorFindUniqueOrThrowArgs} args - Arguments to find a TicketMedioVendedor
     * @example
     * // Get one TicketMedioVendedor
     * const ticketMedioVendedor = await prisma.ticketMedioVendedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TicketMedioVendedorFindUniqueOrThrowArgs>(args: SelectSubset<T, TicketMedioVendedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TicketMedioVendedorClient<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketMedioVendedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioVendedorFindFirstArgs} args - Arguments to find a TicketMedioVendedor
     * @example
     * // Get one TicketMedioVendedor
     * const ticketMedioVendedor = await prisma.ticketMedioVendedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TicketMedioVendedorFindFirstArgs>(args?: SelectSubset<T, TicketMedioVendedorFindFirstArgs<ExtArgs>>): Prisma__TicketMedioVendedorClient<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketMedioVendedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioVendedorFindFirstOrThrowArgs} args - Arguments to find a TicketMedioVendedor
     * @example
     * // Get one TicketMedioVendedor
     * const ticketMedioVendedor = await prisma.ticketMedioVendedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TicketMedioVendedorFindFirstOrThrowArgs>(args?: SelectSubset<T, TicketMedioVendedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__TicketMedioVendedorClient<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TicketMedioVendedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioVendedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TicketMedioVendedors
     * const ticketMedioVendedors = await prisma.ticketMedioVendedor.findMany()
     * 
     * // Get first 10 TicketMedioVendedors
     * const ticketMedioVendedors = await prisma.ticketMedioVendedor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketMedioVendedorWithIdOnly = await prisma.ticketMedioVendedor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TicketMedioVendedorFindManyArgs>(args?: SelectSubset<T, TicketMedioVendedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TicketMedioVendedor.
     * @param {TicketMedioVendedorCreateArgs} args - Arguments to create a TicketMedioVendedor.
     * @example
     * // Create one TicketMedioVendedor
     * const TicketMedioVendedor = await prisma.ticketMedioVendedor.create({
     *   data: {
     *     // ... data to create a TicketMedioVendedor
     *   }
     * })
     * 
     */
    create<T extends TicketMedioVendedorCreateArgs>(args: SelectSubset<T, TicketMedioVendedorCreateArgs<ExtArgs>>): Prisma__TicketMedioVendedorClient<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TicketMedioVendedors.
     * @param {TicketMedioVendedorCreateManyArgs} args - Arguments to create many TicketMedioVendedors.
     * @example
     * // Create many TicketMedioVendedors
     * const ticketMedioVendedor = await prisma.ticketMedioVendedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TicketMedioVendedorCreateManyArgs>(args?: SelectSubset<T, TicketMedioVendedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TicketMedioVendedor.
     * @param {TicketMedioVendedorDeleteArgs} args - Arguments to delete one TicketMedioVendedor.
     * @example
     * // Delete one TicketMedioVendedor
     * const TicketMedioVendedor = await prisma.ticketMedioVendedor.delete({
     *   where: {
     *     // ... filter to delete one TicketMedioVendedor
     *   }
     * })
     * 
     */
    delete<T extends TicketMedioVendedorDeleteArgs>(args: SelectSubset<T, TicketMedioVendedorDeleteArgs<ExtArgs>>): Prisma__TicketMedioVendedorClient<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TicketMedioVendedor.
     * @param {TicketMedioVendedorUpdateArgs} args - Arguments to update one TicketMedioVendedor.
     * @example
     * // Update one TicketMedioVendedor
     * const ticketMedioVendedor = await prisma.ticketMedioVendedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TicketMedioVendedorUpdateArgs>(args: SelectSubset<T, TicketMedioVendedorUpdateArgs<ExtArgs>>): Prisma__TicketMedioVendedorClient<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TicketMedioVendedors.
     * @param {TicketMedioVendedorDeleteManyArgs} args - Arguments to filter TicketMedioVendedors to delete.
     * @example
     * // Delete a few TicketMedioVendedors
     * const { count } = await prisma.ticketMedioVendedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TicketMedioVendedorDeleteManyArgs>(args?: SelectSubset<T, TicketMedioVendedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TicketMedioVendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioVendedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TicketMedioVendedors
     * const ticketMedioVendedor = await prisma.ticketMedioVendedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TicketMedioVendedorUpdateManyArgs>(args: SelectSubset<T, TicketMedioVendedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TicketMedioVendedor.
     * @param {TicketMedioVendedorUpsertArgs} args - Arguments to update or create a TicketMedioVendedor.
     * @example
     * // Update or create a TicketMedioVendedor
     * const ticketMedioVendedor = await prisma.ticketMedioVendedor.upsert({
     *   create: {
     *     // ... data to create a TicketMedioVendedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TicketMedioVendedor we want to update
     *   }
     * })
     */
    upsert<T extends TicketMedioVendedorUpsertArgs>(args: SelectSubset<T, TicketMedioVendedorUpsertArgs<ExtArgs>>): Prisma__TicketMedioVendedorClient<$Result.GetResult<Prisma.$TicketMedioVendedorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TicketMedioVendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioVendedorCountArgs} args - Arguments to filter TicketMedioVendedors to count.
     * @example
     * // Count the number of TicketMedioVendedors
     * const count = await prisma.ticketMedioVendedor.count({
     *   where: {
     *     // ... the filter for the TicketMedioVendedors we want to count
     *   }
     * })
    **/
    count<T extends TicketMedioVendedorCountArgs>(
      args?: Subset<T, TicketMedioVendedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketMedioVendedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TicketMedioVendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioVendedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketMedioVendedorAggregateArgs>(args: Subset<T, TicketMedioVendedorAggregateArgs>): Prisma.PrismaPromise<GetTicketMedioVendedorAggregateType<T>>

    /**
     * Group by TicketMedioVendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketMedioVendedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketMedioVendedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketMedioVendedorGroupByArgs['orderBy'] }
        : { orderBy?: TicketMedioVendedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketMedioVendedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketMedioVendedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TicketMedioVendedor model
   */
  readonly fields: TicketMedioVendedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TicketMedioVendedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TicketMedioVendedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends TicketMedioVendedor$filialArgs<ExtArgs> = {}>(args?: Subset<T, TicketMedioVendedor$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends VendedorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VendedorDefaultArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TicketMedioVendedor model
   */
  interface TicketMedioVendedorFieldRefs {
    readonly id: FieldRef<"TicketMedioVendedor", 'Int'>
    readonly filialId: FieldRef<"TicketMedioVendedor", 'Int'>
    readonly vendedorId: FieldRef<"TicketMedioVendedor", 'Int'>
    readonly data: FieldRef<"TicketMedioVendedor", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"TicketMedioVendedor", 'String'>
    readonly ticketMedio: FieldRef<"TicketMedioVendedor", 'Decimal'>
    readonly quantidadeNotas: FieldRef<"TicketMedioVendedor", 'Int'>
    readonly valorTotal: FieldRef<"TicketMedioVendedor", 'Decimal'>
    readonly createdAt: FieldRef<"TicketMedioVendedor", 'DateTime'>
    readonly updatedAt: FieldRef<"TicketMedioVendedor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TicketMedioVendedor findUnique
   */
  export type TicketMedioVendedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedioVendedor to fetch.
     */
    where: TicketMedioVendedorWhereUniqueInput
  }

  /**
   * TicketMedioVendedor findUniqueOrThrow
   */
  export type TicketMedioVendedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedioVendedor to fetch.
     */
    where: TicketMedioVendedorWhereUniqueInput
  }

  /**
   * TicketMedioVendedor findFirst
   */
  export type TicketMedioVendedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedioVendedor to fetch.
     */
    where?: TicketMedioVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketMedioVendedors to fetch.
     */
    orderBy?: TicketMedioVendedorOrderByWithRelationInput | TicketMedioVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketMedioVendedors.
     */
    cursor?: TicketMedioVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketMedioVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketMedioVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketMedioVendedors.
     */
    distinct?: TicketMedioVendedorScalarFieldEnum | TicketMedioVendedorScalarFieldEnum[]
  }

  /**
   * TicketMedioVendedor findFirstOrThrow
   */
  export type TicketMedioVendedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedioVendedor to fetch.
     */
    where?: TicketMedioVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketMedioVendedors to fetch.
     */
    orderBy?: TicketMedioVendedorOrderByWithRelationInput | TicketMedioVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketMedioVendedors.
     */
    cursor?: TicketMedioVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketMedioVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketMedioVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketMedioVendedors.
     */
    distinct?: TicketMedioVendedorScalarFieldEnum | TicketMedioVendedorScalarFieldEnum[]
  }

  /**
   * TicketMedioVendedor findMany
   */
  export type TicketMedioVendedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * Filter, which TicketMedioVendedors to fetch.
     */
    where?: TicketMedioVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketMedioVendedors to fetch.
     */
    orderBy?: TicketMedioVendedorOrderByWithRelationInput | TicketMedioVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TicketMedioVendedors.
     */
    cursor?: TicketMedioVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketMedioVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketMedioVendedors.
     */
    skip?: number
    distinct?: TicketMedioVendedorScalarFieldEnum | TicketMedioVendedorScalarFieldEnum[]
  }

  /**
   * TicketMedioVendedor create
   */
  export type TicketMedioVendedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * The data needed to create a TicketMedioVendedor.
     */
    data: XOR<TicketMedioVendedorCreateInput, TicketMedioVendedorUncheckedCreateInput>
  }

  /**
   * TicketMedioVendedor createMany
   */
  export type TicketMedioVendedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TicketMedioVendedors.
     */
    data: TicketMedioVendedorCreateManyInput | TicketMedioVendedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TicketMedioVendedor update
   */
  export type TicketMedioVendedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * The data needed to update a TicketMedioVendedor.
     */
    data: XOR<TicketMedioVendedorUpdateInput, TicketMedioVendedorUncheckedUpdateInput>
    /**
     * Choose, which TicketMedioVendedor to update.
     */
    where: TicketMedioVendedorWhereUniqueInput
  }

  /**
   * TicketMedioVendedor updateMany
   */
  export type TicketMedioVendedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TicketMedioVendedors.
     */
    data: XOR<TicketMedioVendedorUpdateManyMutationInput, TicketMedioVendedorUncheckedUpdateManyInput>
    /**
     * Filter which TicketMedioVendedors to update
     */
    where?: TicketMedioVendedorWhereInput
    /**
     * Limit how many TicketMedioVendedors to update.
     */
    limit?: number
  }

  /**
   * TicketMedioVendedor upsert
   */
  export type TicketMedioVendedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * The filter to search for the TicketMedioVendedor to update in case it exists.
     */
    where: TicketMedioVendedorWhereUniqueInput
    /**
     * In case the TicketMedioVendedor found by the `where` argument doesn't exist, create a new TicketMedioVendedor with this data.
     */
    create: XOR<TicketMedioVendedorCreateInput, TicketMedioVendedorUncheckedCreateInput>
    /**
     * In case the TicketMedioVendedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TicketMedioVendedorUpdateInput, TicketMedioVendedorUncheckedUpdateInput>
  }

  /**
   * TicketMedioVendedor delete
   */
  export type TicketMedioVendedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
    /**
     * Filter which TicketMedioVendedor to delete.
     */
    where: TicketMedioVendedorWhereUniqueInput
  }

  /**
   * TicketMedioVendedor deleteMany
   */
  export type TicketMedioVendedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketMedioVendedors to delete
     */
    where?: TicketMedioVendedorWhereInput
    /**
     * Limit how many TicketMedioVendedors to delete.
     */
    limit?: number
  }

  /**
   * TicketMedioVendedor.filial
   */
  export type TicketMedioVendedor$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * TicketMedioVendedor without action
   */
  export type TicketMedioVendedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketMedioVendedor
     */
    select?: TicketMedioVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketMedioVendedor
     */
    omit?: TicketMedioVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketMedioVendedorInclude<ExtArgs> | null
  }


  /**
   * Model MixVendedor
   */

  export type AggregateMixVendedor = {
    _count: MixVendedorCountAggregateOutputType | null
    _avg: MixVendedorAvgAggregateOutputType | null
    _sum: MixVendedorSumAggregateOutputType | null
    _min: MixVendedorMinAggregateOutputType | null
    _max: MixVendedorMaxAggregateOutputType | null
  }

  export type MixVendedorAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    receitaMaquinas: Decimal | null
    receitaPecas: Decimal | null
    receitaServicos: Decimal | null
    percentualMaquinas: Decimal | null
    percentualPecas: Decimal | null
    percentualServicos: Decimal | null
    quantidadeNotasMaquinas: number | null
    quantidadeNotasPecas: number | null
    quantidadeNotasServicos: number | null
  }

  export type MixVendedorSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    receitaMaquinas: Decimal | null
    receitaPecas: Decimal | null
    receitaServicos: Decimal | null
    percentualMaquinas: Decimal | null
    percentualPecas: Decimal | null
    percentualServicos: Decimal | null
    quantidadeNotasMaquinas: number | null
    quantidadeNotasPecas: number | null
    quantidadeNotasServicos: number | null
  }

  export type MixVendedorMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaMaquinas: Decimal | null
    receitaPecas: Decimal | null
    receitaServicos: Decimal | null
    percentualMaquinas: Decimal | null
    percentualPecas: Decimal | null
    percentualServicos: Decimal | null
    quantidadeNotasMaquinas: number | null
    quantidadeNotasPecas: number | null
    quantidadeNotasServicos: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MixVendedorMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaMaquinas: Decimal | null
    receitaPecas: Decimal | null
    receitaServicos: Decimal | null
    percentualMaquinas: Decimal | null
    percentualPecas: Decimal | null
    percentualServicos: Decimal | null
    quantidadeNotasMaquinas: number | null
    quantidadeNotasPecas: number | null
    quantidadeNotasServicos: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MixVendedorCountAggregateOutputType = {
    id: number
    filialId: number
    vendedorId: number
    data: number
    tipoPeriodo: number
    receitaMaquinas: number
    receitaPecas: number
    receitaServicos: number
    percentualMaquinas: number
    percentualPecas: number
    percentualServicos: number
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MixVendedorAvgAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
  }

  export type MixVendedorSumAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
  }

  export type MixVendedorMinAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MixVendedorMaxAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MixVendedorCountAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MixVendedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MixVendedor to aggregate.
     */
    where?: MixVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MixVendedors to fetch.
     */
    orderBy?: MixVendedorOrderByWithRelationInput | MixVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MixVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MixVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MixVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MixVendedors
    **/
    _count?: true | MixVendedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MixVendedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MixVendedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MixVendedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MixVendedorMaxAggregateInputType
  }

  export type GetMixVendedorAggregateType<T extends MixVendedorAggregateArgs> = {
        [P in keyof T & keyof AggregateMixVendedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMixVendedor[P]>
      : GetScalarType<T[P], AggregateMixVendedor[P]>
  }




  export type MixVendedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MixVendedorWhereInput
    orderBy?: MixVendedorOrderByWithAggregationInput | MixVendedorOrderByWithAggregationInput[]
    by: MixVendedorScalarFieldEnum[] | MixVendedorScalarFieldEnum
    having?: MixVendedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MixVendedorCountAggregateInputType | true
    _avg?: MixVendedorAvgAggregateInputType
    _sum?: MixVendedorSumAggregateInputType
    _min?: MixVendedorMinAggregateInputType
    _max?: MixVendedorMaxAggregateInputType
  }

  export type MixVendedorGroupByOutputType = {
    id: number
    filialId: number | null
    vendedorId: number
    data: Date
    tipoPeriodo: string
    receitaMaquinas: Decimal
    receitaPecas: Decimal
    receitaServicos: Decimal
    percentualMaquinas: Decimal
    percentualPecas: Decimal
    percentualServicos: Decimal
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt: Date
    updatedAt: Date
    _count: MixVendedorCountAggregateOutputType | null
    _avg: MixVendedorAvgAggregateOutputType | null
    _sum: MixVendedorSumAggregateOutputType | null
    _min: MixVendedorMinAggregateOutputType | null
    _max: MixVendedorMaxAggregateOutputType | null
  }

  type GetMixVendedorGroupByPayload<T extends MixVendedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MixVendedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MixVendedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MixVendedorGroupByOutputType[P]>
            : GetScalarType<T[P], MixVendedorGroupByOutputType[P]>
        }
      >
    >


  export type MixVendedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaMaquinas?: boolean
    receitaPecas?: boolean
    receitaServicos?: boolean
    percentualMaquinas?: boolean
    percentualPecas?: boolean
    percentualServicos?: boolean
    quantidadeNotasMaquinas?: boolean
    quantidadeNotasPecas?: boolean
    quantidadeNotasServicos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | MixVendedor$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mixVendedor"]>



  export type MixVendedorSelectScalar = {
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaMaquinas?: boolean
    receitaPecas?: boolean
    receitaServicos?: boolean
    percentualMaquinas?: boolean
    percentualPecas?: boolean
    percentualServicos?: boolean
    quantidadeNotasMaquinas?: boolean
    quantidadeNotasPecas?: boolean
    quantidadeNotasServicos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MixVendedorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "vendedorId" | "data" | "tipoPeriodo" | "receitaMaquinas" | "receitaPecas" | "receitaServicos" | "percentualMaquinas" | "percentualPecas" | "percentualServicos" | "quantidadeNotasMaquinas" | "quantidadeNotasPecas" | "quantidadeNotasServicos" | "createdAt" | "updatedAt", ExtArgs["result"]["mixVendedor"]>
  export type MixVendedorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | MixVendedor$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }

  export type $MixVendedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MixVendedor"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      vendedor: Prisma.$VendedorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      vendedorId: number
      data: Date
      tipoPeriodo: string
      receitaMaquinas: Prisma.Decimal
      receitaPecas: Prisma.Decimal
      receitaServicos: Prisma.Decimal
      percentualMaquinas: Prisma.Decimal
      percentualPecas: Prisma.Decimal
      percentualServicos: Prisma.Decimal
      quantidadeNotasMaquinas: number
      quantidadeNotasPecas: number
      quantidadeNotasServicos: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["mixVendedor"]>
    composites: {}
  }

  type MixVendedorGetPayload<S extends boolean | null | undefined | MixVendedorDefaultArgs> = $Result.GetResult<Prisma.$MixVendedorPayload, S>

  type MixVendedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MixVendedorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MixVendedorCountAggregateInputType | true
    }

  export interface MixVendedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MixVendedor'], meta: { name: 'MixVendedor' } }
    /**
     * Find zero or one MixVendedor that matches the filter.
     * @param {MixVendedorFindUniqueArgs} args - Arguments to find a MixVendedor
     * @example
     * // Get one MixVendedor
     * const mixVendedor = await prisma.mixVendedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MixVendedorFindUniqueArgs>(args: SelectSubset<T, MixVendedorFindUniqueArgs<ExtArgs>>): Prisma__MixVendedorClient<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MixVendedor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MixVendedorFindUniqueOrThrowArgs} args - Arguments to find a MixVendedor
     * @example
     * // Get one MixVendedor
     * const mixVendedor = await prisma.mixVendedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MixVendedorFindUniqueOrThrowArgs>(args: SelectSubset<T, MixVendedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MixVendedorClient<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MixVendedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixVendedorFindFirstArgs} args - Arguments to find a MixVendedor
     * @example
     * // Get one MixVendedor
     * const mixVendedor = await prisma.mixVendedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MixVendedorFindFirstArgs>(args?: SelectSubset<T, MixVendedorFindFirstArgs<ExtArgs>>): Prisma__MixVendedorClient<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MixVendedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixVendedorFindFirstOrThrowArgs} args - Arguments to find a MixVendedor
     * @example
     * // Get one MixVendedor
     * const mixVendedor = await prisma.mixVendedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MixVendedorFindFirstOrThrowArgs>(args?: SelectSubset<T, MixVendedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__MixVendedorClient<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MixVendedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixVendedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MixVendedors
     * const mixVendedors = await prisma.mixVendedor.findMany()
     * 
     * // Get first 10 MixVendedors
     * const mixVendedors = await prisma.mixVendedor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mixVendedorWithIdOnly = await prisma.mixVendedor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MixVendedorFindManyArgs>(args?: SelectSubset<T, MixVendedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MixVendedor.
     * @param {MixVendedorCreateArgs} args - Arguments to create a MixVendedor.
     * @example
     * // Create one MixVendedor
     * const MixVendedor = await prisma.mixVendedor.create({
     *   data: {
     *     // ... data to create a MixVendedor
     *   }
     * })
     * 
     */
    create<T extends MixVendedorCreateArgs>(args: SelectSubset<T, MixVendedorCreateArgs<ExtArgs>>): Prisma__MixVendedorClient<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MixVendedors.
     * @param {MixVendedorCreateManyArgs} args - Arguments to create many MixVendedors.
     * @example
     * // Create many MixVendedors
     * const mixVendedor = await prisma.mixVendedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MixVendedorCreateManyArgs>(args?: SelectSubset<T, MixVendedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MixVendedor.
     * @param {MixVendedorDeleteArgs} args - Arguments to delete one MixVendedor.
     * @example
     * // Delete one MixVendedor
     * const MixVendedor = await prisma.mixVendedor.delete({
     *   where: {
     *     // ... filter to delete one MixVendedor
     *   }
     * })
     * 
     */
    delete<T extends MixVendedorDeleteArgs>(args: SelectSubset<T, MixVendedorDeleteArgs<ExtArgs>>): Prisma__MixVendedorClient<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MixVendedor.
     * @param {MixVendedorUpdateArgs} args - Arguments to update one MixVendedor.
     * @example
     * // Update one MixVendedor
     * const mixVendedor = await prisma.mixVendedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MixVendedorUpdateArgs>(args: SelectSubset<T, MixVendedorUpdateArgs<ExtArgs>>): Prisma__MixVendedorClient<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MixVendedors.
     * @param {MixVendedorDeleteManyArgs} args - Arguments to filter MixVendedors to delete.
     * @example
     * // Delete a few MixVendedors
     * const { count } = await prisma.mixVendedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MixVendedorDeleteManyArgs>(args?: SelectSubset<T, MixVendedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MixVendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixVendedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MixVendedors
     * const mixVendedor = await prisma.mixVendedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MixVendedorUpdateManyArgs>(args: SelectSubset<T, MixVendedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MixVendedor.
     * @param {MixVendedorUpsertArgs} args - Arguments to update or create a MixVendedor.
     * @example
     * // Update or create a MixVendedor
     * const mixVendedor = await prisma.mixVendedor.upsert({
     *   create: {
     *     // ... data to create a MixVendedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MixVendedor we want to update
     *   }
     * })
     */
    upsert<T extends MixVendedorUpsertArgs>(args: SelectSubset<T, MixVendedorUpsertArgs<ExtArgs>>): Prisma__MixVendedorClient<$Result.GetResult<Prisma.$MixVendedorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MixVendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixVendedorCountArgs} args - Arguments to filter MixVendedors to count.
     * @example
     * // Count the number of MixVendedors
     * const count = await prisma.mixVendedor.count({
     *   where: {
     *     // ... the filter for the MixVendedors we want to count
     *   }
     * })
    **/
    count<T extends MixVendedorCountArgs>(
      args?: Subset<T, MixVendedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MixVendedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MixVendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixVendedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MixVendedorAggregateArgs>(args: Subset<T, MixVendedorAggregateArgs>): Prisma.PrismaPromise<GetMixVendedorAggregateType<T>>

    /**
     * Group by MixVendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixVendedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MixVendedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MixVendedorGroupByArgs['orderBy'] }
        : { orderBy?: MixVendedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MixVendedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMixVendedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MixVendedor model
   */
  readonly fields: MixVendedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MixVendedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MixVendedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends MixVendedor$filialArgs<ExtArgs> = {}>(args?: Subset<T, MixVendedor$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends VendedorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VendedorDefaultArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MixVendedor model
   */
  interface MixVendedorFieldRefs {
    readonly id: FieldRef<"MixVendedor", 'Int'>
    readonly filialId: FieldRef<"MixVendedor", 'Int'>
    readonly vendedorId: FieldRef<"MixVendedor", 'Int'>
    readonly data: FieldRef<"MixVendedor", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"MixVendedor", 'String'>
    readonly receitaMaquinas: FieldRef<"MixVendedor", 'Decimal'>
    readonly receitaPecas: FieldRef<"MixVendedor", 'Decimal'>
    readonly receitaServicos: FieldRef<"MixVendedor", 'Decimal'>
    readonly percentualMaquinas: FieldRef<"MixVendedor", 'Decimal'>
    readonly percentualPecas: FieldRef<"MixVendedor", 'Decimal'>
    readonly percentualServicos: FieldRef<"MixVendedor", 'Decimal'>
    readonly quantidadeNotasMaquinas: FieldRef<"MixVendedor", 'Int'>
    readonly quantidadeNotasPecas: FieldRef<"MixVendedor", 'Int'>
    readonly quantidadeNotasServicos: FieldRef<"MixVendedor", 'Int'>
    readonly createdAt: FieldRef<"MixVendedor", 'DateTime'>
    readonly updatedAt: FieldRef<"MixVendedor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MixVendedor findUnique
   */
  export type MixVendedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * Filter, which MixVendedor to fetch.
     */
    where: MixVendedorWhereUniqueInput
  }

  /**
   * MixVendedor findUniqueOrThrow
   */
  export type MixVendedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * Filter, which MixVendedor to fetch.
     */
    where: MixVendedorWhereUniqueInput
  }

  /**
   * MixVendedor findFirst
   */
  export type MixVendedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * Filter, which MixVendedor to fetch.
     */
    where?: MixVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MixVendedors to fetch.
     */
    orderBy?: MixVendedorOrderByWithRelationInput | MixVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MixVendedors.
     */
    cursor?: MixVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MixVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MixVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MixVendedors.
     */
    distinct?: MixVendedorScalarFieldEnum | MixVendedorScalarFieldEnum[]
  }

  /**
   * MixVendedor findFirstOrThrow
   */
  export type MixVendedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * Filter, which MixVendedor to fetch.
     */
    where?: MixVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MixVendedors to fetch.
     */
    orderBy?: MixVendedorOrderByWithRelationInput | MixVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MixVendedors.
     */
    cursor?: MixVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MixVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MixVendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MixVendedors.
     */
    distinct?: MixVendedorScalarFieldEnum | MixVendedorScalarFieldEnum[]
  }

  /**
   * MixVendedor findMany
   */
  export type MixVendedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * Filter, which MixVendedors to fetch.
     */
    where?: MixVendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MixVendedors to fetch.
     */
    orderBy?: MixVendedorOrderByWithRelationInput | MixVendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MixVendedors.
     */
    cursor?: MixVendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MixVendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MixVendedors.
     */
    skip?: number
    distinct?: MixVendedorScalarFieldEnum | MixVendedorScalarFieldEnum[]
  }

  /**
   * MixVendedor create
   */
  export type MixVendedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * The data needed to create a MixVendedor.
     */
    data: XOR<MixVendedorCreateInput, MixVendedorUncheckedCreateInput>
  }

  /**
   * MixVendedor createMany
   */
  export type MixVendedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MixVendedors.
     */
    data: MixVendedorCreateManyInput | MixVendedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MixVendedor update
   */
  export type MixVendedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * The data needed to update a MixVendedor.
     */
    data: XOR<MixVendedorUpdateInput, MixVendedorUncheckedUpdateInput>
    /**
     * Choose, which MixVendedor to update.
     */
    where: MixVendedorWhereUniqueInput
  }

  /**
   * MixVendedor updateMany
   */
  export type MixVendedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MixVendedors.
     */
    data: XOR<MixVendedorUpdateManyMutationInput, MixVendedorUncheckedUpdateManyInput>
    /**
     * Filter which MixVendedors to update
     */
    where?: MixVendedorWhereInput
    /**
     * Limit how many MixVendedors to update.
     */
    limit?: number
  }

  /**
   * MixVendedor upsert
   */
  export type MixVendedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * The filter to search for the MixVendedor to update in case it exists.
     */
    where: MixVendedorWhereUniqueInput
    /**
     * In case the MixVendedor found by the `where` argument doesn't exist, create a new MixVendedor with this data.
     */
    create: XOR<MixVendedorCreateInput, MixVendedorUncheckedCreateInput>
    /**
     * In case the MixVendedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MixVendedorUpdateInput, MixVendedorUncheckedUpdateInput>
  }

  /**
   * MixVendedor delete
   */
  export type MixVendedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
    /**
     * Filter which MixVendedor to delete.
     */
    where: MixVendedorWhereUniqueInput
  }

  /**
   * MixVendedor deleteMany
   */
  export type MixVendedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MixVendedors to delete
     */
    where?: MixVendedorWhereInput
    /**
     * Limit how many MixVendedors to delete.
     */
    limit?: number
  }

  /**
   * MixVendedor.filial
   */
  export type MixVendedor$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * MixVendedor without action
   */
  export type MixVendedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixVendedor
     */
    select?: MixVendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixVendedor
     */
    omit?: MixVendedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixVendedorInclude<ExtArgs> | null
  }


  /**
   * Model CoberturaCarteira
   */

  export type AggregateCoberturaCarteira = {
    _count: CoberturaCarteiraCountAggregateOutputType | null
    _avg: CoberturaCarteiraAvgAggregateOutputType | null
    _sum: CoberturaCarteiraSumAggregateOutputType | null
    _min: CoberturaCarteiraMinAggregateOutputType | null
    _max: CoberturaCarteiraMaxAggregateOutputType | null
  }

  export type CoberturaCarteiraAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    clientesUnicosAtendidos: number | null
    clientesAtivos: number | null
    percentualCobertura: Decimal | null
  }

  export type CoberturaCarteiraSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    clientesUnicosAtendidos: number | null
    clientesAtivos: number | null
    percentualCobertura: Decimal | null
  }

  export type CoberturaCarteiraMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    clientesUnicosAtendidos: number | null
    clientesAtivos: number | null
    percentualCobertura: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CoberturaCarteiraMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    clientesUnicosAtendidos: number | null
    clientesAtivos: number | null
    percentualCobertura: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CoberturaCarteiraCountAggregateOutputType = {
    id: number
    filialId: number
    vendedorId: number
    data: number
    tipoPeriodo: number
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CoberturaCarteiraAvgAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    clientesUnicosAtendidos?: true
    clientesAtivos?: true
    percentualCobertura?: true
  }

  export type CoberturaCarteiraSumAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    clientesUnicosAtendidos?: true
    clientesAtivos?: true
    percentualCobertura?: true
  }

  export type CoberturaCarteiraMinAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    clientesUnicosAtendidos?: true
    clientesAtivos?: true
    percentualCobertura?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CoberturaCarteiraMaxAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    clientesUnicosAtendidos?: true
    clientesAtivos?: true
    percentualCobertura?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CoberturaCarteiraCountAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    clientesUnicosAtendidos?: true
    clientesAtivos?: true
    percentualCobertura?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CoberturaCarteiraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CoberturaCarteira to aggregate.
     */
    where?: CoberturaCarteiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CoberturaCarteiras to fetch.
     */
    orderBy?: CoberturaCarteiraOrderByWithRelationInput | CoberturaCarteiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CoberturaCarteiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CoberturaCarteiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CoberturaCarteiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CoberturaCarteiras
    **/
    _count?: true | CoberturaCarteiraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CoberturaCarteiraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CoberturaCarteiraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CoberturaCarteiraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CoberturaCarteiraMaxAggregateInputType
  }

  export type GetCoberturaCarteiraAggregateType<T extends CoberturaCarteiraAggregateArgs> = {
        [P in keyof T & keyof AggregateCoberturaCarteira]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCoberturaCarteira[P]>
      : GetScalarType<T[P], AggregateCoberturaCarteira[P]>
  }




  export type CoberturaCarteiraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CoberturaCarteiraWhereInput
    orderBy?: CoberturaCarteiraOrderByWithAggregationInput | CoberturaCarteiraOrderByWithAggregationInput[]
    by: CoberturaCarteiraScalarFieldEnum[] | CoberturaCarteiraScalarFieldEnum
    having?: CoberturaCarteiraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CoberturaCarteiraCountAggregateInputType | true
    _avg?: CoberturaCarteiraAvgAggregateInputType
    _sum?: CoberturaCarteiraSumAggregateInputType
    _min?: CoberturaCarteiraMinAggregateInputType
    _max?: CoberturaCarteiraMaxAggregateInputType
  }

  export type CoberturaCarteiraGroupByOutputType = {
    id: number
    filialId: number | null
    vendedorId: number
    data: Date
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal
    createdAt: Date
    updatedAt: Date
    _count: CoberturaCarteiraCountAggregateOutputType | null
    _avg: CoberturaCarteiraAvgAggregateOutputType | null
    _sum: CoberturaCarteiraSumAggregateOutputType | null
    _min: CoberturaCarteiraMinAggregateOutputType | null
    _max: CoberturaCarteiraMaxAggregateOutputType | null
  }

  type GetCoberturaCarteiraGroupByPayload<T extends CoberturaCarteiraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CoberturaCarteiraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CoberturaCarteiraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CoberturaCarteiraGroupByOutputType[P]>
            : GetScalarType<T[P], CoberturaCarteiraGroupByOutputType[P]>
        }
      >
    >


  export type CoberturaCarteiraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    clientesUnicosAtendidos?: boolean
    clientesAtivos?: boolean
    percentualCobertura?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | CoberturaCarteira$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["coberturaCarteira"]>



  export type CoberturaCarteiraSelectScalar = {
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    clientesUnicosAtendidos?: boolean
    clientesAtivos?: boolean
    percentualCobertura?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CoberturaCarteiraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "vendedorId" | "data" | "tipoPeriodo" | "clientesUnicosAtendidos" | "clientesAtivos" | "percentualCobertura" | "createdAt" | "updatedAt", ExtArgs["result"]["coberturaCarteira"]>
  export type CoberturaCarteiraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | CoberturaCarteira$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }

  export type $CoberturaCarteiraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CoberturaCarteira"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      vendedor: Prisma.$VendedorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      vendedorId: number
      data: Date
      tipoPeriodo: string
      clientesUnicosAtendidos: number
      clientesAtivos: number
      percentualCobertura: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["coberturaCarteira"]>
    composites: {}
  }

  type CoberturaCarteiraGetPayload<S extends boolean | null | undefined | CoberturaCarteiraDefaultArgs> = $Result.GetResult<Prisma.$CoberturaCarteiraPayload, S>

  type CoberturaCarteiraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CoberturaCarteiraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CoberturaCarteiraCountAggregateInputType | true
    }

  export interface CoberturaCarteiraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CoberturaCarteira'], meta: { name: 'CoberturaCarteira' } }
    /**
     * Find zero or one CoberturaCarteira that matches the filter.
     * @param {CoberturaCarteiraFindUniqueArgs} args - Arguments to find a CoberturaCarteira
     * @example
     * // Get one CoberturaCarteira
     * const coberturaCarteira = await prisma.coberturaCarteira.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CoberturaCarteiraFindUniqueArgs>(args: SelectSubset<T, CoberturaCarteiraFindUniqueArgs<ExtArgs>>): Prisma__CoberturaCarteiraClient<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CoberturaCarteira that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CoberturaCarteiraFindUniqueOrThrowArgs} args - Arguments to find a CoberturaCarteira
     * @example
     * // Get one CoberturaCarteira
     * const coberturaCarteira = await prisma.coberturaCarteira.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CoberturaCarteiraFindUniqueOrThrowArgs>(args: SelectSubset<T, CoberturaCarteiraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CoberturaCarteiraClient<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CoberturaCarteira that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoberturaCarteiraFindFirstArgs} args - Arguments to find a CoberturaCarteira
     * @example
     * // Get one CoberturaCarteira
     * const coberturaCarteira = await prisma.coberturaCarteira.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CoberturaCarteiraFindFirstArgs>(args?: SelectSubset<T, CoberturaCarteiraFindFirstArgs<ExtArgs>>): Prisma__CoberturaCarteiraClient<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CoberturaCarteira that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoberturaCarteiraFindFirstOrThrowArgs} args - Arguments to find a CoberturaCarteira
     * @example
     * // Get one CoberturaCarteira
     * const coberturaCarteira = await prisma.coberturaCarteira.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CoberturaCarteiraFindFirstOrThrowArgs>(args?: SelectSubset<T, CoberturaCarteiraFindFirstOrThrowArgs<ExtArgs>>): Prisma__CoberturaCarteiraClient<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CoberturaCarteiras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoberturaCarteiraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CoberturaCarteiras
     * const coberturaCarteiras = await prisma.coberturaCarteira.findMany()
     * 
     * // Get first 10 CoberturaCarteiras
     * const coberturaCarteiras = await prisma.coberturaCarteira.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const coberturaCarteiraWithIdOnly = await prisma.coberturaCarteira.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CoberturaCarteiraFindManyArgs>(args?: SelectSubset<T, CoberturaCarteiraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CoberturaCarteira.
     * @param {CoberturaCarteiraCreateArgs} args - Arguments to create a CoberturaCarteira.
     * @example
     * // Create one CoberturaCarteira
     * const CoberturaCarteira = await prisma.coberturaCarteira.create({
     *   data: {
     *     // ... data to create a CoberturaCarteira
     *   }
     * })
     * 
     */
    create<T extends CoberturaCarteiraCreateArgs>(args: SelectSubset<T, CoberturaCarteiraCreateArgs<ExtArgs>>): Prisma__CoberturaCarteiraClient<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CoberturaCarteiras.
     * @param {CoberturaCarteiraCreateManyArgs} args - Arguments to create many CoberturaCarteiras.
     * @example
     * // Create many CoberturaCarteiras
     * const coberturaCarteira = await prisma.coberturaCarteira.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CoberturaCarteiraCreateManyArgs>(args?: SelectSubset<T, CoberturaCarteiraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CoberturaCarteira.
     * @param {CoberturaCarteiraDeleteArgs} args - Arguments to delete one CoberturaCarteira.
     * @example
     * // Delete one CoberturaCarteira
     * const CoberturaCarteira = await prisma.coberturaCarteira.delete({
     *   where: {
     *     // ... filter to delete one CoberturaCarteira
     *   }
     * })
     * 
     */
    delete<T extends CoberturaCarteiraDeleteArgs>(args: SelectSubset<T, CoberturaCarteiraDeleteArgs<ExtArgs>>): Prisma__CoberturaCarteiraClient<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CoberturaCarteira.
     * @param {CoberturaCarteiraUpdateArgs} args - Arguments to update one CoberturaCarteira.
     * @example
     * // Update one CoberturaCarteira
     * const coberturaCarteira = await prisma.coberturaCarteira.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CoberturaCarteiraUpdateArgs>(args: SelectSubset<T, CoberturaCarteiraUpdateArgs<ExtArgs>>): Prisma__CoberturaCarteiraClient<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CoberturaCarteiras.
     * @param {CoberturaCarteiraDeleteManyArgs} args - Arguments to filter CoberturaCarteiras to delete.
     * @example
     * // Delete a few CoberturaCarteiras
     * const { count } = await prisma.coberturaCarteira.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CoberturaCarteiraDeleteManyArgs>(args?: SelectSubset<T, CoberturaCarteiraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CoberturaCarteiras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoberturaCarteiraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CoberturaCarteiras
     * const coberturaCarteira = await prisma.coberturaCarteira.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CoberturaCarteiraUpdateManyArgs>(args: SelectSubset<T, CoberturaCarteiraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CoberturaCarteira.
     * @param {CoberturaCarteiraUpsertArgs} args - Arguments to update or create a CoberturaCarteira.
     * @example
     * // Update or create a CoberturaCarteira
     * const coberturaCarteira = await prisma.coberturaCarteira.upsert({
     *   create: {
     *     // ... data to create a CoberturaCarteira
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CoberturaCarteira we want to update
     *   }
     * })
     */
    upsert<T extends CoberturaCarteiraUpsertArgs>(args: SelectSubset<T, CoberturaCarteiraUpsertArgs<ExtArgs>>): Prisma__CoberturaCarteiraClient<$Result.GetResult<Prisma.$CoberturaCarteiraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CoberturaCarteiras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoberturaCarteiraCountArgs} args - Arguments to filter CoberturaCarteiras to count.
     * @example
     * // Count the number of CoberturaCarteiras
     * const count = await prisma.coberturaCarteira.count({
     *   where: {
     *     // ... the filter for the CoberturaCarteiras we want to count
     *   }
     * })
    **/
    count<T extends CoberturaCarteiraCountArgs>(
      args?: Subset<T, CoberturaCarteiraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CoberturaCarteiraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CoberturaCarteira.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoberturaCarteiraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CoberturaCarteiraAggregateArgs>(args: Subset<T, CoberturaCarteiraAggregateArgs>): Prisma.PrismaPromise<GetCoberturaCarteiraAggregateType<T>>

    /**
     * Group by CoberturaCarteira.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoberturaCarteiraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CoberturaCarteiraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CoberturaCarteiraGroupByArgs['orderBy'] }
        : { orderBy?: CoberturaCarteiraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CoberturaCarteiraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCoberturaCarteiraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CoberturaCarteira model
   */
  readonly fields: CoberturaCarteiraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CoberturaCarteira.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CoberturaCarteiraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends CoberturaCarteira$filialArgs<ExtArgs> = {}>(args?: Subset<T, CoberturaCarteira$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends VendedorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VendedorDefaultArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CoberturaCarteira model
   */
  interface CoberturaCarteiraFieldRefs {
    readonly id: FieldRef<"CoberturaCarteira", 'Int'>
    readonly filialId: FieldRef<"CoberturaCarteira", 'Int'>
    readonly vendedorId: FieldRef<"CoberturaCarteira", 'Int'>
    readonly data: FieldRef<"CoberturaCarteira", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"CoberturaCarteira", 'String'>
    readonly clientesUnicosAtendidos: FieldRef<"CoberturaCarteira", 'Int'>
    readonly clientesAtivos: FieldRef<"CoberturaCarteira", 'Int'>
    readonly percentualCobertura: FieldRef<"CoberturaCarteira", 'Decimal'>
    readonly createdAt: FieldRef<"CoberturaCarteira", 'DateTime'>
    readonly updatedAt: FieldRef<"CoberturaCarteira", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CoberturaCarteira findUnique
   */
  export type CoberturaCarteiraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * Filter, which CoberturaCarteira to fetch.
     */
    where: CoberturaCarteiraWhereUniqueInput
  }

  /**
   * CoberturaCarteira findUniqueOrThrow
   */
  export type CoberturaCarteiraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * Filter, which CoberturaCarteira to fetch.
     */
    where: CoberturaCarteiraWhereUniqueInput
  }

  /**
   * CoberturaCarteira findFirst
   */
  export type CoberturaCarteiraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * Filter, which CoberturaCarteira to fetch.
     */
    where?: CoberturaCarteiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CoberturaCarteiras to fetch.
     */
    orderBy?: CoberturaCarteiraOrderByWithRelationInput | CoberturaCarteiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CoberturaCarteiras.
     */
    cursor?: CoberturaCarteiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CoberturaCarteiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CoberturaCarteiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CoberturaCarteiras.
     */
    distinct?: CoberturaCarteiraScalarFieldEnum | CoberturaCarteiraScalarFieldEnum[]
  }

  /**
   * CoberturaCarteira findFirstOrThrow
   */
  export type CoberturaCarteiraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * Filter, which CoberturaCarteira to fetch.
     */
    where?: CoberturaCarteiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CoberturaCarteiras to fetch.
     */
    orderBy?: CoberturaCarteiraOrderByWithRelationInput | CoberturaCarteiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CoberturaCarteiras.
     */
    cursor?: CoberturaCarteiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CoberturaCarteiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CoberturaCarteiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CoberturaCarteiras.
     */
    distinct?: CoberturaCarteiraScalarFieldEnum | CoberturaCarteiraScalarFieldEnum[]
  }

  /**
   * CoberturaCarteira findMany
   */
  export type CoberturaCarteiraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * Filter, which CoberturaCarteiras to fetch.
     */
    where?: CoberturaCarteiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CoberturaCarteiras to fetch.
     */
    orderBy?: CoberturaCarteiraOrderByWithRelationInput | CoberturaCarteiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CoberturaCarteiras.
     */
    cursor?: CoberturaCarteiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CoberturaCarteiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CoberturaCarteiras.
     */
    skip?: number
    distinct?: CoberturaCarteiraScalarFieldEnum | CoberturaCarteiraScalarFieldEnum[]
  }

  /**
   * CoberturaCarteira create
   */
  export type CoberturaCarteiraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * The data needed to create a CoberturaCarteira.
     */
    data: XOR<CoberturaCarteiraCreateInput, CoberturaCarteiraUncheckedCreateInput>
  }

  /**
   * CoberturaCarteira createMany
   */
  export type CoberturaCarteiraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CoberturaCarteiras.
     */
    data: CoberturaCarteiraCreateManyInput | CoberturaCarteiraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CoberturaCarteira update
   */
  export type CoberturaCarteiraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * The data needed to update a CoberturaCarteira.
     */
    data: XOR<CoberturaCarteiraUpdateInput, CoberturaCarteiraUncheckedUpdateInput>
    /**
     * Choose, which CoberturaCarteira to update.
     */
    where: CoberturaCarteiraWhereUniqueInput
  }

  /**
   * CoberturaCarteira updateMany
   */
  export type CoberturaCarteiraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CoberturaCarteiras.
     */
    data: XOR<CoberturaCarteiraUpdateManyMutationInput, CoberturaCarteiraUncheckedUpdateManyInput>
    /**
     * Filter which CoberturaCarteiras to update
     */
    where?: CoberturaCarteiraWhereInput
    /**
     * Limit how many CoberturaCarteiras to update.
     */
    limit?: number
  }

  /**
   * CoberturaCarteira upsert
   */
  export type CoberturaCarteiraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * The filter to search for the CoberturaCarteira to update in case it exists.
     */
    where: CoberturaCarteiraWhereUniqueInput
    /**
     * In case the CoberturaCarteira found by the `where` argument doesn't exist, create a new CoberturaCarteira with this data.
     */
    create: XOR<CoberturaCarteiraCreateInput, CoberturaCarteiraUncheckedCreateInput>
    /**
     * In case the CoberturaCarteira was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CoberturaCarteiraUpdateInput, CoberturaCarteiraUncheckedUpdateInput>
  }

  /**
   * CoberturaCarteira delete
   */
  export type CoberturaCarteiraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
    /**
     * Filter which CoberturaCarteira to delete.
     */
    where: CoberturaCarteiraWhereUniqueInput
  }

  /**
   * CoberturaCarteira deleteMany
   */
  export type CoberturaCarteiraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CoberturaCarteiras to delete
     */
    where?: CoberturaCarteiraWhereInput
    /**
     * Limit how many CoberturaCarteiras to delete.
     */
    limit?: number
  }

  /**
   * CoberturaCarteira.filial
   */
  export type CoberturaCarteira$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * CoberturaCarteira without action
   */
  export type CoberturaCarteiraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CoberturaCarteira
     */
    select?: CoberturaCarteiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CoberturaCarteira
     */
    omit?: CoberturaCarteiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CoberturaCarteiraInclude<ExtArgs> | null
  }


  /**
   * Model RankingVendedores
   */

  export type AggregateRankingVendedores = {
    _count: RankingVendedoresCountAggregateOutputType | null
    _avg: RankingVendedoresAvgAggregateOutputType | null
    _sum: RankingVendedoresSumAggregateOutputType | null
    _min: RankingVendedoresMinAggregateOutputType | null
    _max: RankingVendedoresMaxAggregateOutputType | null
  }

  export type RankingVendedoresAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    posicaoRanking: number | null
    valorMetrica: Decimal | null
    totalVendedores: number | null
    percentilRanking: Decimal | null
  }

  export type RankingVendedoresSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    posicaoRanking: number | null
    valorMetrica: Decimal | null
    totalVendedores: number | null
    percentilRanking: Decimal | null
  }

  export type RankingVendedoresMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    tipoRanking: string | null
    posicaoRanking: number | null
    valorMetrica: Decimal | null
    totalVendedores: number | null
    percentilRanking: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RankingVendedoresMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    vendedorId: number | null
    data: Date | null
    tipoPeriodo: string | null
    tipoRanking: string | null
    posicaoRanking: number | null
    valorMetrica: Decimal | null
    totalVendedores: number | null
    percentilRanking: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RankingVendedoresCountAggregateOutputType = {
    id: number
    filialId: number
    vendedorId: number
    data: number
    tipoPeriodo: number
    tipoRanking: number
    posicaoRanking: number
    valorMetrica: number
    totalVendedores: number
    percentilRanking: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RankingVendedoresAvgAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    posicaoRanking?: true
    valorMetrica?: true
    totalVendedores?: true
    percentilRanking?: true
  }

  export type RankingVendedoresSumAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    posicaoRanking?: true
    valorMetrica?: true
    totalVendedores?: true
    percentilRanking?: true
  }

  export type RankingVendedoresMinAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    tipoRanking?: true
    posicaoRanking?: true
    valorMetrica?: true
    totalVendedores?: true
    percentilRanking?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RankingVendedoresMaxAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    tipoRanking?: true
    posicaoRanking?: true
    valorMetrica?: true
    totalVendedores?: true
    percentilRanking?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RankingVendedoresCountAggregateInputType = {
    id?: true
    filialId?: true
    vendedorId?: true
    data?: true
    tipoPeriodo?: true
    tipoRanking?: true
    posicaoRanking?: true
    valorMetrica?: true
    totalVendedores?: true
    percentilRanking?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RankingVendedoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RankingVendedores to aggregate.
     */
    where?: RankingVendedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RankingVendedores to fetch.
     */
    orderBy?: RankingVendedoresOrderByWithRelationInput | RankingVendedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RankingVendedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RankingVendedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RankingVendedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RankingVendedores
    **/
    _count?: true | RankingVendedoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RankingVendedoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RankingVendedoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RankingVendedoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RankingVendedoresMaxAggregateInputType
  }

  export type GetRankingVendedoresAggregateType<T extends RankingVendedoresAggregateArgs> = {
        [P in keyof T & keyof AggregateRankingVendedores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRankingVendedores[P]>
      : GetScalarType<T[P], AggregateRankingVendedores[P]>
  }




  export type RankingVendedoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RankingVendedoresWhereInput
    orderBy?: RankingVendedoresOrderByWithAggregationInput | RankingVendedoresOrderByWithAggregationInput[]
    by: RankingVendedoresScalarFieldEnum[] | RankingVendedoresScalarFieldEnum
    having?: RankingVendedoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RankingVendedoresCountAggregateInputType | true
    _avg?: RankingVendedoresAvgAggregateInputType
    _sum?: RankingVendedoresSumAggregateInputType
    _min?: RankingVendedoresMinAggregateInputType
    _max?: RankingVendedoresMaxAggregateInputType
  }

  export type RankingVendedoresGroupByOutputType = {
    id: number
    filialId: number | null
    vendedorId: number
    data: Date
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal
    totalVendedores: number
    percentilRanking: Decimal
    createdAt: Date
    updatedAt: Date
    _count: RankingVendedoresCountAggregateOutputType | null
    _avg: RankingVendedoresAvgAggregateOutputType | null
    _sum: RankingVendedoresSumAggregateOutputType | null
    _min: RankingVendedoresMinAggregateOutputType | null
    _max: RankingVendedoresMaxAggregateOutputType | null
  }

  type GetRankingVendedoresGroupByPayload<T extends RankingVendedoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RankingVendedoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RankingVendedoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RankingVendedoresGroupByOutputType[P]>
            : GetScalarType<T[P], RankingVendedoresGroupByOutputType[P]>
        }
      >
    >


  export type RankingVendedoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    tipoRanking?: boolean
    posicaoRanking?: boolean
    valorMetrica?: boolean
    totalVendedores?: boolean
    percentilRanking?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | RankingVendedores$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rankingVendedores"]>



  export type RankingVendedoresSelectScalar = {
    id?: boolean
    filialId?: boolean
    vendedorId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    tipoRanking?: boolean
    posicaoRanking?: boolean
    valorMetrica?: boolean
    totalVendedores?: boolean
    percentilRanking?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RankingVendedoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "vendedorId" | "data" | "tipoPeriodo" | "tipoRanking" | "posicaoRanking" | "valorMetrica" | "totalVendedores" | "percentilRanking" | "createdAt" | "updatedAt", ExtArgs["result"]["rankingVendedores"]>
  export type RankingVendedoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | RankingVendedores$filialArgs<ExtArgs>
    vendedor?: boolean | VendedorDefaultArgs<ExtArgs>
  }

  export type $RankingVendedoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RankingVendedores"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs> | null
      vendedor: Prisma.$VendedorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number | null
      vendedorId: number
      data: Date
      tipoPeriodo: string
      tipoRanking: string
      posicaoRanking: number
      valorMetrica: Prisma.Decimal
      totalVendedores: number
      percentilRanking: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["rankingVendedores"]>
    composites: {}
  }

  type RankingVendedoresGetPayload<S extends boolean | null | undefined | RankingVendedoresDefaultArgs> = $Result.GetResult<Prisma.$RankingVendedoresPayload, S>

  type RankingVendedoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RankingVendedoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RankingVendedoresCountAggregateInputType | true
    }

  export interface RankingVendedoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RankingVendedores'], meta: { name: 'RankingVendedores' } }
    /**
     * Find zero or one RankingVendedores that matches the filter.
     * @param {RankingVendedoresFindUniqueArgs} args - Arguments to find a RankingVendedores
     * @example
     * // Get one RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RankingVendedoresFindUniqueArgs>(args: SelectSubset<T, RankingVendedoresFindUniqueArgs<ExtArgs>>): Prisma__RankingVendedoresClient<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RankingVendedores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RankingVendedoresFindUniqueOrThrowArgs} args - Arguments to find a RankingVendedores
     * @example
     * // Get one RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RankingVendedoresFindUniqueOrThrowArgs>(args: SelectSubset<T, RankingVendedoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RankingVendedoresClient<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RankingVendedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RankingVendedoresFindFirstArgs} args - Arguments to find a RankingVendedores
     * @example
     * // Get one RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RankingVendedoresFindFirstArgs>(args?: SelectSubset<T, RankingVendedoresFindFirstArgs<ExtArgs>>): Prisma__RankingVendedoresClient<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RankingVendedores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RankingVendedoresFindFirstOrThrowArgs} args - Arguments to find a RankingVendedores
     * @example
     * // Get one RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RankingVendedoresFindFirstOrThrowArgs>(args?: SelectSubset<T, RankingVendedoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__RankingVendedoresClient<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RankingVendedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RankingVendedoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.findMany()
     * 
     * // Get first 10 RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rankingVendedoresWithIdOnly = await prisma.rankingVendedores.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RankingVendedoresFindManyArgs>(args?: SelectSubset<T, RankingVendedoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RankingVendedores.
     * @param {RankingVendedoresCreateArgs} args - Arguments to create a RankingVendedores.
     * @example
     * // Create one RankingVendedores
     * const RankingVendedores = await prisma.rankingVendedores.create({
     *   data: {
     *     // ... data to create a RankingVendedores
     *   }
     * })
     * 
     */
    create<T extends RankingVendedoresCreateArgs>(args: SelectSubset<T, RankingVendedoresCreateArgs<ExtArgs>>): Prisma__RankingVendedoresClient<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RankingVendedores.
     * @param {RankingVendedoresCreateManyArgs} args - Arguments to create many RankingVendedores.
     * @example
     * // Create many RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RankingVendedoresCreateManyArgs>(args?: SelectSubset<T, RankingVendedoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RankingVendedores.
     * @param {RankingVendedoresDeleteArgs} args - Arguments to delete one RankingVendedores.
     * @example
     * // Delete one RankingVendedores
     * const RankingVendedores = await prisma.rankingVendedores.delete({
     *   where: {
     *     // ... filter to delete one RankingVendedores
     *   }
     * })
     * 
     */
    delete<T extends RankingVendedoresDeleteArgs>(args: SelectSubset<T, RankingVendedoresDeleteArgs<ExtArgs>>): Prisma__RankingVendedoresClient<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RankingVendedores.
     * @param {RankingVendedoresUpdateArgs} args - Arguments to update one RankingVendedores.
     * @example
     * // Update one RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RankingVendedoresUpdateArgs>(args: SelectSubset<T, RankingVendedoresUpdateArgs<ExtArgs>>): Prisma__RankingVendedoresClient<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RankingVendedores.
     * @param {RankingVendedoresDeleteManyArgs} args - Arguments to filter RankingVendedores to delete.
     * @example
     * // Delete a few RankingVendedores
     * const { count } = await prisma.rankingVendedores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RankingVendedoresDeleteManyArgs>(args?: SelectSubset<T, RankingVendedoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RankingVendedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RankingVendedoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RankingVendedoresUpdateManyArgs>(args: SelectSubset<T, RankingVendedoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RankingVendedores.
     * @param {RankingVendedoresUpsertArgs} args - Arguments to update or create a RankingVendedores.
     * @example
     * // Update or create a RankingVendedores
     * const rankingVendedores = await prisma.rankingVendedores.upsert({
     *   create: {
     *     // ... data to create a RankingVendedores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RankingVendedores we want to update
     *   }
     * })
     */
    upsert<T extends RankingVendedoresUpsertArgs>(args: SelectSubset<T, RankingVendedoresUpsertArgs<ExtArgs>>): Prisma__RankingVendedoresClient<$Result.GetResult<Prisma.$RankingVendedoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RankingVendedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RankingVendedoresCountArgs} args - Arguments to filter RankingVendedores to count.
     * @example
     * // Count the number of RankingVendedores
     * const count = await prisma.rankingVendedores.count({
     *   where: {
     *     // ... the filter for the RankingVendedores we want to count
     *   }
     * })
    **/
    count<T extends RankingVendedoresCountArgs>(
      args?: Subset<T, RankingVendedoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RankingVendedoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RankingVendedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RankingVendedoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RankingVendedoresAggregateArgs>(args: Subset<T, RankingVendedoresAggregateArgs>): Prisma.PrismaPromise<GetRankingVendedoresAggregateType<T>>

    /**
     * Group by RankingVendedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RankingVendedoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RankingVendedoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RankingVendedoresGroupByArgs['orderBy'] }
        : { orderBy?: RankingVendedoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RankingVendedoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRankingVendedoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RankingVendedores model
   */
  readonly fields: RankingVendedoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RankingVendedores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RankingVendedoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends RankingVendedores$filialArgs<ExtArgs> = {}>(args?: Subset<T, RankingVendedores$filialArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends VendedorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VendedorDefaultArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RankingVendedores model
   */
  interface RankingVendedoresFieldRefs {
    readonly id: FieldRef<"RankingVendedores", 'Int'>
    readonly filialId: FieldRef<"RankingVendedores", 'Int'>
    readonly vendedorId: FieldRef<"RankingVendedores", 'Int'>
    readonly data: FieldRef<"RankingVendedores", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"RankingVendedores", 'String'>
    readonly tipoRanking: FieldRef<"RankingVendedores", 'String'>
    readonly posicaoRanking: FieldRef<"RankingVendedores", 'Int'>
    readonly valorMetrica: FieldRef<"RankingVendedores", 'Decimal'>
    readonly totalVendedores: FieldRef<"RankingVendedores", 'Int'>
    readonly percentilRanking: FieldRef<"RankingVendedores", 'Decimal'>
    readonly createdAt: FieldRef<"RankingVendedores", 'DateTime'>
    readonly updatedAt: FieldRef<"RankingVendedores", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RankingVendedores findUnique
   */
  export type RankingVendedoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * Filter, which RankingVendedores to fetch.
     */
    where: RankingVendedoresWhereUniqueInput
  }

  /**
   * RankingVendedores findUniqueOrThrow
   */
  export type RankingVendedoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * Filter, which RankingVendedores to fetch.
     */
    where: RankingVendedoresWhereUniqueInput
  }

  /**
   * RankingVendedores findFirst
   */
  export type RankingVendedoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * Filter, which RankingVendedores to fetch.
     */
    where?: RankingVendedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RankingVendedores to fetch.
     */
    orderBy?: RankingVendedoresOrderByWithRelationInput | RankingVendedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RankingVendedores.
     */
    cursor?: RankingVendedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RankingVendedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RankingVendedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RankingVendedores.
     */
    distinct?: RankingVendedoresScalarFieldEnum | RankingVendedoresScalarFieldEnum[]
  }

  /**
   * RankingVendedores findFirstOrThrow
   */
  export type RankingVendedoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * Filter, which RankingVendedores to fetch.
     */
    where?: RankingVendedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RankingVendedores to fetch.
     */
    orderBy?: RankingVendedoresOrderByWithRelationInput | RankingVendedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RankingVendedores.
     */
    cursor?: RankingVendedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RankingVendedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RankingVendedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RankingVendedores.
     */
    distinct?: RankingVendedoresScalarFieldEnum | RankingVendedoresScalarFieldEnum[]
  }

  /**
   * RankingVendedores findMany
   */
  export type RankingVendedoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * Filter, which RankingVendedores to fetch.
     */
    where?: RankingVendedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RankingVendedores to fetch.
     */
    orderBy?: RankingVendedoresOrderByWithRelationInput | RankingVendedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RankingVendedores.
     */
    cursor?: RankingVendedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RankingVendedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RankingVendedores.
     */
    skip?: number
    distinct?: RankingVendedoresScalarFieldEnum | RankingVendedoresScalarFieldEnum[]
  }

  /**
   * RankingVendedores create
   */
  export type RankingVendedoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * The data needed to create a RankingVendedores.
     */
    data: XOR<RankingVendedoresCreateInput, RankingVendedoresUncheckedCreateInput>
  }

  /**
   * RankingVendedores createMany
   */
  export type RankingVendedoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RankingVendedores.
     */
    data: RankingVendedoresCreateManyInput | RankingVendedoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RankingVendedores update
   */
  export type RankingVendedoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * The data needed to update a RankingVendedores.
     */
    data: XOR<RankingVendedoresUpdateInput, RankingVendedoresUncheckedUpdateInput>
    /**
     * Choose, which RankingVendedores to update.
     */
    where: RankingVendedoresWhereUniqueInput
  }

  /**
   * RankingVendedores updateMany
   */
  export type RankingVendedoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RankingVendedores.
     */
    data: XOR<RankingVendedoresUpdateManyMutationInput, RankingVendedoresUncheckedUpdateManyInput>
    /**
     * Filter which RankingVendedores to update
     */
    where?: RankingVendedoresWhereInput
    /**
     * Limit how many RankingVendedores to update.
     */
    limit?: number
  }

  /**
   * RankingVendedores upsert
   */
  export type RankingVendedoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * The filter to search for the RankingVendedores to update in case it exists.
     */
    where: RankingVendedoresWhereUniqueInput
    /**
     * In case the RankingVendedores found by the `where` argument doesn't exist, create a new RankingVendedores with this data.
     */
    create: XOR<RankingVendedoresCreateInput, RankingVendedoresUncheckedCreateInput>
    /**
     * In case the RankingVendedores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RankingVendedoresUpdateInput, RankingVendedoresUncheckedUpdateInput>
  }

  /**
   * RankingVendedores delete
   */
  export type RankingVendedoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
    /**
     * Filter which RankingVendedores to delete.
     */
    where: RankingVendedoresWhereUniqueInput
  }

  /**
   * RankingVendedores deleteMany
   */
  export type RankingVendedoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RankingVendedores to delete
     */
    where?: RankingVendedoresWhereInput
    /**
     * Limit how many RankingVendedores to delete.
     */
    limit?: number
  }

  /**
   * RankingVendedores.filial
   */
  export type RankingVendedores$filialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Filial
     */
    select?: FilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Filial
     */
    omit?: FilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FilialInclude<ExtArgs> | null
    where?: FilialWhereInput
  }

  /**
   * RankingVendedores without action
   */
  export type RankingVendedoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RankingVendedores
     */
    select?: RankingVendedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RankingVendedores
     */
    omit?: RankingVendedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RankingVendedoresInclude<ExtArgs> | null
  }


  /**
   * Model ReceitaFilial
   */

  export type AggregateReceitaFilial = {
    _count: ReceitaFilialCountAggregateOutputType | null
    _avg: ReceitaFilialAvgAggregateOutputType | null
    _sum: ReceitaFilialSumAggregateOutputType | null
    _min: ReceitaFilialMinAggregateOutputType | null
    _max: ReceitaFilialMaxAggregateOutputType | null
  }

  export type ReceitaFilialAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    receitaTotal: Decimal | null
    numeroNotas: number | null
    ticketMedio: Decimal | null
    numeroItens: number | null
  }

  export type ReceitaFilialSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    receitaTotal: Decimal | null
    numeroNotas: number | null
    ticketMedio: Decimal | null
    numeroItens: number | null
  }

  export type ReceitaFilialMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaTotal: Decimal | null
    numeroNotas: number | null
    ticketMedio: Decimal | null
    numeroItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaFilialMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaTotal: Decimal | null
    numeroNotas: number | null
    ticketMedio: Decimal | null
    numeroItens: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaFilialCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    receitaTotal: number
    numeroNotas: number
    ticketMedio: number
    numeroItens: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceitaFilialAvgAggregateInputType = {
    id?: true
    filialId?: true
    receitaTotal?: true
    numeroNotas?: true
    ticketMedio?: true
    numeroItens?: true
  }

  export type ReceitaFilialSumAggregateInputType = {
    id?: true
    filialId?: true
    receitaTotal?: true
    numeroNotas?: true
    ticketMedio?: true
    numeroItens?: true
  }

  export type ReceitaFilialMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaTotal?: true
    numeroNotas?: true
    ticketMedio?: true
    numeroItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaFilialMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaTotal?: true
    numeroNotas?: true
    ticketMedio?: true
    numeroItens?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaFilialCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaTotal?: true
    numeroNotas?: true
    ticketMedio?: true
    numeroItens?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceitaFilialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaFilial to aggregate.
     */
    where?: ReceitaFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaFilials to fetch.
     */
    orderBy?: ReceitaFilialOrderByWithRelationInput | ReceitaFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceitaFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReceitaFilials
    **/
    _count?: true | ReceitaFilialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceitaFilialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceitaFilialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceitaFilialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceitaFilialMaxAggregateInputType
  }

  export type GetReceitaFilialAggregateType<T extends ReceitaFilialAggregateArgs> = {
        [P in keyof T & keyof AggregateReceitaFilial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceitaFilial[P]>
      : GetScalarType<T[P], AggregateReceitaFilial[P]>
  }




  export type ReceitaFilialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaFilialWhereInput
    orderBy?: ReceitaFilialOrderByWithAggregationInput | ReceitaFilialOrderByWithAggregationInput[]
    by: ReceitaFilialScalarFieldEnum[] | ReceitaFilialScalarFieldEnum
    having?: ReceitaFilialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceitaFilialCountAggregateInputType | true
    _avg?: ReceitaFilialAvgAggregateInputType
    _sum?: ReceitaFilialSumAggregateInputType
    _min?: ReceitaFilialMinAggregateInputType
    _max?: ReceitaFilialMaxAggregateInputType
  }

  export type ReceitaFilialGroupByOutputType = {
    id: number
    filialId: number
    data: Date
    tipoPeriodo: string
    receitaTotal: Decimal
    numeroNotas: number
    ticketMedio: Decimal
    numeroItens: number
    createdAt: Date
    updatedAt: Date
    _count: ReceitaFilialCountAggregateOutputType | null
    _avg: ReceitaFilialAvgAggregateOutputType | null
    _sum: ReceitaFilialSumAggregateOutputType | null
    _min: ReceitaFilialMinAggregateOutputType | null
    _max: ReceitaFilialMaxAggregateOutputType | null
  }

  type GetReceitaFilialGroupByPayload<T extends ReceitaFilialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceitaFilialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceitaFilialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceitaFilialGroupByOutputType[P]>
            : GetScalarType<T[P], ReceitaFilialGroupByOutputType[P]>
        }
      >
    >


  export type ReceitaFilialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaTotal?: boolean
    numeroNotas?: boolean
    ticketMedio?: boolean
    numeroItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | FilialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["receitaFilial"]>



  export type ReceitaFilialSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaTotal?: boolean
    numeroNotas?: boolean
    ticketMedio?: boolean
    numeroItens?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceitaFilialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "receitaTotal" | "numeroNotas" | "ticketMedio" | "numeroItens" | "createdAt" | "updatedAt", ExtArgs["result"]["receitaFilial"]>
  export type ReceitaFilialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | FilialDefaultArgs<ExtArgs>
  }

  export type $ReceitaFilialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReceitaFilial"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number
      data: Date
      tipoPeriodo: string
      receitaTotal: Prisma.Decimal
      numeroNotas: number
      ticketMedio: Prisma.Decimal
      numeroItens: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receitaFilial"]>
    composites: {}
  }

  type ReceitaFilialGetPayload<S extends boolean | null | undefined | ReceitaFilialDefaultArgs> = $Result.GetResult<Prisma.$ReceitaFilialPayload, S>

  type ReceitaFilialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReceitaFilialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReceitaFilialCountAggregateInputType | true
    }

  export interface ReceitaFilialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReceitaFilial'], meta: { name: 'ReceitaFilial' } }
    /**
     * Find zero or one ReceitaFilial that matches the filter.
     * @param {ReceitaFilialFindUniqueArgs} args - Arguments to find a ReceitaFilial
     * @example
     * // Get one ReceitaFilial
     * const receitaFilial = await prisma.receitaFilial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceitaFilialFindUniqueArgs>(args: SelectSubset<T, ReceitaFilialFindUniqueArgs<ExtArgs>>): Prisma__ReceitaFilialClient<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReceitaFilial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReceitaFilialFindUniqueOrThrowArgs} args - Arguments to find a ReceitaFilial
     * @example
     * // Get one ReceitaFilial
     * const receitaFilial = await prisma.receitaFilial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceitaFilialFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceitaFilialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceitaFilialClient<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaFilial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialFindFirstArgs} args - Arguments to find a ReceitaFilial
     * @example
     * // Get one ReceitaFilial
     * const receitaFilial = await prisma.receitaFilial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceitaFilialFindFirstArgs>(args?: SelectSubset<T, ReceitaFilialFindFirstArgs<ExtArgs>>): Prisma__ReceitaFilialClient<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaFilial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialFindFirstOrThrowArgs} args - Arguments to find a ReceitaFilial
     * @example
     * // Get one ReceitaFilial
     * const receitaFilial = await prisma.receitaFilial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceitaFilialFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceitaFilialFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceitaFilialClient<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReceitaFilials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReceitaFilials
     * const receitaFilials = await prisma.receitaFilial.findMany()
     * 
     * // Get first 10 ReceitaFilials
     * const receitaFilials = await prisma.receitaFilial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receitaFilialWithIdOnly = await prisma.receitaFilial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceitaFilialFindManyArgs>(args?: SelectSubset<T, ReceitaFilialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReceitaFilial.
     * @param {ReceitaFilialCreateArgs} args - Arguments to create a ReceitaFilial.
     * @example
     * // Create one ReceitaFilial
     * const ReceitaFilial = await prisma.receitaFilial.create({
     *   data: {
     *     // ... data to create a ReceitaFilial
     *   }
     * })
     * 
     */
    create<T extends ReceitaFilialCreateArgs>(args: SelectSubset<T, ReceitaFilialCreateArgs<ExtArgs>>): Prisma__ReceitaFilialClient<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReceitaFilials.
     * @param {ReceitaFilialCreateManyArgs} args - Arguments to create many ReceitaFilials.
     * @example
     * // Create many ReceitaFilials
     * const receitaFilial = await prisma.receitaFilial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceitaFilialCreateManyArgs>(args?: SelectSubset<T, ReceitaFilialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReceitaFilial.
     * @param {ReceitaFilialDeleteArgs} args - Arguments to delete one ReceitaFilial.
     * @example
     * // Delete one ReceitaFilial
     * const ReceitaFilial = await prisma.receitaFilial.delete({
     *   where: {
     *     // ... filter to delete one ReceitaFilial
     *   }
     * })
     * 
     */
    delete<T extends ReceitaFilialDeleteArgs>(args: SelectSubset<T, ReceitaFilialDeleteArgs<ExtArgs>>): Prisma__ReceitaFilialClient<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReceitaFilial.
     * @param {ReceitaFilialUpdateArgs} args - Arguments to update one ReceitaFilial.
     * @example
     * // Update one ReceitaFilial
     * const receitaFilial = await prisma.receitaFilial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceitaFilialUpdateArgs>(args: SelectSubset<T, ReceitaFilialUpdateArgs<ExtArgs>>): Prisma__ReceitaFilialClient<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReceitaFilials.
     * @param {ReceitaFilialDeleteManyArgs} args - Arguments to filter ReceitaFilials to delete.
     * @example
     * // Delete a few ReceitaFilials
     * const { count } = await prisma.receitaFilial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceitaFilialDeleteManyArgs>(args?: SelectSubset<T, ReceitaFilialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReceitaFilials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReceitaFilials
     * const receitaFilial = await prisma.receitaFilial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceitaFilialUpdateManyArgs>(args: SelectSubset<T, ReceitaFilialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReceitaFilial.
     * @param {ReceitaFilialUpsertArgs} args - Arguments to update or create a ReceitaFilial.
     * @example
     * // Update or create a ReceitaFilial
     * const receitaFilial = await prisma.receitaFilial.upsert({
     *   create: {
     *     // ... data to create a ReceitaFilial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReceitaFilial we want to update
     *   }
     * })
     */
    upsert<T extends ReceitaFilialUpsertArgs>(args: SelectSubset<T, ReceitaFilialUpsertArgs<ExtArgs>>): Prisma__ReceitaFilialClient<$Result.GetResult<Prisma.$ReceitaFilialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReceitaFilials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialCountArgs} args - Arguments to filter ReceitaFilials to count.
     * @example
     * // Count the number of ReceitaFilials
     * const count = await prisma.receitaFilial.count({
     *   where: {
     *     // ... the filter for the ReceitaFilials we want to count
     *   }
     * })
    **/
    count<T extends ReceitaFilialCountArgs>(
      args?: Subset<T, ReceitaFilialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceitaFilialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReceitaFilial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceitaFilialAggregateArgs>(args: Subset<T, ReceitaFilialAggregateArgs>): Prisma.PrismaPromise<GetReceitaFilialAggregateType<T>>

    /**
     * Group by ReceitaFilial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceitaFilialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceitaFilialGroupByArgs['orderBy'] }
        : { orderBy?: ReceitaFilialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceitaFilialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceitaFilialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReceitaFilial model
   */
  readonly fields: ReceitaFilialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReceitaFilial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceitaFilialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends FilialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FilialDefaultArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReceitaFilial model
   */
  interface ReceitaFilialFieldRefs {
    readonly id: FieldRef<"ReceitaFilial", 'Int'>
    readonly filialId: FieldRef<"ReceitaFilial", 'Int'>
    readonly data: FieldRef<"ReceitaFilial", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ReceitaFilial", 'String'>
    readonly receitaTotal: FieldRef<"ReceitaFilial", 'Decimal'>
    readonly numeroNotas: FieldRef<"ReceitaFilial", 'Int'>
    readonly ticketMedio: FieldRef<"ReceitaFilial", 'Decimal'>
    readonly numeroItens: FieldRef<"ReceitaFilial", 'Int'>
    readonly createdAt: FieldRef<"ReceitaFilial", 'DateTime'>
    readonly updatedAt: FieldRef<"ReceitaFilial", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReceitaFilial findUnique
   */
  export type ReceitaFilialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilial to fetch.
     */
    where: ReceitaFilialWhereUniqueInput
  }

  /**
   * ReceitaFilial findUniqueOrThrow
   */
  export type ReceitaFilialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilial to fetch.
     */
    where: ReceitaFilialWhereUniqueInput
  }

  /**
   * ReceitaFilial findFirst
   */
  export type ReceitaFilialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilial to fetch.
     */
    where?: ReceitaFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaFilials to fetch.
     */
    orderBy?: ReceitaFilialOrderByWithRelationInput | ReceitaFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaFilials.
     */
    cursor?: ReceitaFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaFilials.
     */
    distinct?: ReceitaFilialScalarFieldEnum | ReceitaFilialScalarFieldEnum[]
  }

  /**
   * ReceitaFilial findFirstOrThrow
   */
  export type ReceitaFilialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilial to fetch.
     */
    where?: ReceitaFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaFilials to fetch.
     */
    orderBy?: ReceitaFilialOrderByWithRelationInput | ReceitaFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaFilials.
     */
    cursor?: ReceitaFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaFilials.
     */
    distinct?: ReceitaFilialScalarFieldEnum | ReceitaFilialScalarFieldEnum[]
  }

  /**
   * ReceitaFilial findMany
   */
  export type ReceitaFilialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilials to fetch.
     */
    where?: ReceitaFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaFilials to fetch.
     */
    orderBy?: ReceitaFilialOrderByWithRelationInput | ReceitaFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReceitaFilials.
     */
    cursor?: ReceitaFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaFilials.
     */
    skip?: number
    distinct?: ReceitaFilialScalarFieldEnum | ReceitaFilialScalarFieldEnum[]
  }

  /**
   * ReceitaFilial create
   */
  export type ReceitaFilialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * The data needed to create a ReceitaFilial.
     */
    data: XOR<ReceitaFilialCreateInput, ReceitaFilialUncheckedCreateInput>
  }

  /**
   * ReceitaFilial createMany
   */
  export type ReceitaFilialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReceitaFilials.
     */
    data: ReceitaFilialCreateManyInput | ReceitaFilialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReceitaFilial update
   */
  export type ReceitaFilialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * The data needed to update a ReceitaFilial.
     */
    data: XOR<ReceitaFilialUpdateInput, ReceitaFilialUncheckedUpdateInput>
    /**
     * Choose, which ReceitaFilial to update.
     */
    where: ReceitaFilialWhereUniqueInput
  }

  /**
   * ReceitaFilial updateMany
   */
  export type ReceitaFilialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReceitaFilials.
     */
    data: XOR<ReceitaFilialUpdateManyMutationInput, ReceitaFilialUncheckedUpdateManyInput>
    /**
     * Filter which ReceitaFilials to update
     */
    where?: ReceitaFilialWhereInput
    /**
     * Limit how many ReceitaFilials to update.
     */
    limit?: number
  }

  /**
   * ReceitaFilial upsert
   */
  export type ReceitaFilialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * The filter to search for the ReceitaFilial to update in case it exists.
     */
    where: ReceitaFilialWhereUniqueInput
    /**
     * In case the ReceitaFilial found by the `where` argument doesn't exist, create a new ReceitaFilial with this data.
     */
    create: XOR<ReceitaFilialCreateInput, ReceitaFilialUncheckedCreateInput>
    /**
     * In case the ReceitaFilial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceitaFilialUpdateInput, ReceitaFilialUncheckedUpdateInput>
  }

  /**
   * ReceitaFilial delete
   */
  export type ReceitaFilialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter which ReceitaFilial to delete.
     */
    where: ReceitaFilialWhereUniqueInput
  }

  /**
   * ReceitaFilial deleteMany
   */
  export type ReceitaFilialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaFilials to delete
     */
    where?: ReceitaFilialWhereInput
    /**
     * Limit how many ReceitaFilials to delete.
     */
    limit?: number
  }

  /**
   * ReceitaFilial without action
   */
  export type ReceitaFilialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilial
     */
    select?: ReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilial
     */
    omit?: ReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialInclude<ExtArgs> | null
  }


  /**
   * Model MixFilial
   */

  export type AggregateMixFilial = {
    _count: MixFilialCountAggregateOutputType | null
    _avg: MixFilialAvgAggregateOutputType | null
    _sum: MixFilialSumAggregateOutputType | null
    _min: MixFilialMinAggregateOutputType | null
    _max: MixFilialMaxAggregateOutputType | null
  }

  export type MixFilialAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    receitaMaquinas: Decimal | null
    receitaPecas: Decimal | null
    receitaServicos: Decimal | null
    percentualMaquinas: Decimal | null
    percentualPecas: Decimal | null
    percentualServicos: Decimal | null
    quantidadeNotasMaquinas: number | null
    quantidadeNotasPecas: number | null
    quantidadeNotasServicos: number | null
  }

  export type MixFilialSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    receitaMaquinas: Decimal | null
    receitaPecas: Decimal | null
    receitaServicos: Decimal | null
    percentualMaquinas: Decimal | null
    percentualPecas: Decimal | null
    percentualServicos: Decimal | null
    quantidadeNotasMaquinas: number | null
    quantidadeNotasPecas: number | null
    quantidadeNotasServicos: number | null
  }

  export type MixFilialMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaMaquinas: Decimal | null
    receitaPecas: Decimal | null
    receitaServicos: Decimal | null
    percentualMaquinas: Decimal | null
    percentualPecas: Decimal | null
    percentualServicos: Decimal | null
    quantidadeNotasMaquinas: number | null
    quantidadeNotasPecas: number | null
    quantidadeNotasServicos: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MixFilialMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaMaquinas: Decimal | null
    receitaPecas: Decimal | null
    receitaServicos: Decimal | null
    percentualMaquinas: Decimal | null
    percentualPecas: Decimal | null
    percentualServicos: Decimal | null
    quantidadeNotasMaquinas: number | null
    quantidadeNotasPecas: number | null
    quantidadeNotasServicos: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MixFilialCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    receitaMaquinas: number
    receitaPecas: number
    receitaServicos: number
    percentualMaquinas: number
    percentualPecas: number
    percentualServicos: number
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MixFilialAvgAggregateInputType = {
    id?: true
    filialId?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
  }

  export type MixFilialSumAggregateInputType = {
    id?: true
    filialId?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
  }

  export type MixFilialMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MixFilialMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MixFilialCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaMaquinas?: true
    receitaPecas?: true
    receitaServicos?: true
    percentualMaquinas?: true
    percentualPecas?: true
    percentualServicos?: true
    quantidadeNotasMaquinas?: true
    quantidadeNotasPecas?: true
    quantidadeNotasServicos?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MixFilialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MixFilial to aggregate.
     */
    where?: MixFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MixFilials to fetch.
     */
    orderBy?: MixFilialOrderByWithRelationInput | MixFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MixFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MixFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MixFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MixFilials
    **/
    _count?: true | MixFilialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MixFilialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MixFilialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MixFilialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MixFilialMaxAggregateInputType
  }

  export type GetMixFilialAggregateType<T extends MixFilialAggregateArgs> = {
        [P in keyof T & keyof AggregateMixFilial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMixFilial[P]>
      : GetScalarType<T[P], AggregateMixFilial[P]>
  }




  export type MixFilialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MixFilialWhereInput
    orderBy?: MixFilialOrderByWithAggregationInput | MixFilialOrderByWithAggregationInput[]
    by: MixFilialScalarFieldEnum[] | MixFilialScalarFieldEnum
    having?: MixFilialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MixFilialCountAggregateInputType | true
    _avg?: MixFilialAvgAggregateInputType
    _sum?: MixFilialSumAggregateInputType
    _min?: MixFilialMinAggregateInputType
    _max?: MixFilialMaxAggregateInputType
  }

  export type MixFilialGroupByOutputType = {
    id: number
    filialId: number
    data: Date
    tipoPeriodo: string
    receitaMaquinas: Decimal
    receitaPecas: Decimal
    receitaServicos: Decimal
    percentualMaquinas: Decimal
    percentualPecas: Decimal
    percentualServicos: Decimal
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt: Date
    updatedAt: Date
    _count: MixFilialCountAggregateOutputType | null
    _avg: MixFilialAvgAggregateOutputType | null
    _sum: MixFilialSumAggregateOutputType | null
    _min: MixFilialMinAggregateOutputType | null
    _max: MixFilialMaxAggregateOutputType | null
  }

  type GetMixFilialGroupByPayload<T extends MixFilialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MixFilialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MixFilialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MixFilialGroupByOutputType[P]>
            : GetScalarType<T[P], MixFilialGroupByOutputType[P]>
        }
      >
    >


  export type MixFilialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaMaquinas?: boolean
    receitaPecas?: boolean
    receitaServicos?: boolean
    percentualMaquinas?: boolean
    percentualPecas?: boolean
    percentualServicos?: boolean
    quantidadeNotasMaquinas?: boolean
    quantidadeNotasPecas?: boolean
    quantidadeNotasServicos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | FilialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mixFilial"]>



  export type MixFilialSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaMaquinas?: boolean
    receitaPecas?: boolean
    receitaServicos?: boolean
    percentualMaquinas?: boolean
    percentualPecas?: boolean
    percentualServicos?: boolean
    quantidadeNotasMaquinas?: boolean
    quantidadeNotasPecas?: boolean
    quantidadeNotasServicos?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MixFilialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "receitaMaquinas" | "receitaPecas" | "receitaServicos" | "percentualMaquinas" | "percentualPecas" | "percentualServicos" | "quantidadeNotasMaquinas" | "quantidadeNotasPecas" | "quantidadeNotasServicos" | "createdAt" | "updatedAt", ExtArgs["result"]["mixFilial"]>
  export type MixFilialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | FilialDefaultArgs<ExtArgs>
  }

  export type $MixFilialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MixFilial"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number
      data: Date
      tipoPeriodo: string
      receitaMaquinas: Prisma.Decimal
      receitaPecas: Prisma.Decimal
      receitaServicos: Prisma.Decimal
      percentualMaquinas: Prisma.Decimal
      percentualPecas: Prisma.Decimal
      percentualServicos: Prisma.Decimal
      quantidadeNotasMaquinas: number
      quantidadeNotasPecas: number
      quantidadeNotasServicos: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["mixFilial"]>
    composites: {}
  }

  type MixFilialGetPayload<S extends boolean | null | undefined | MixFilialDefaultArgs> = $Result.GetResult<Prisma.$MixFilialPayload, S>

  type MixFilialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MixFilialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MixFilialCountAggregateInputType | true
    }

  export interface MixFilialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MixFilial'], meta: { name: 'MixFilial' } }
    /**
     * Find zero or one MixFilial that matches the filter.
     * @param {MixFilialFindUniqueArgs} args - Arguments to find a MixFilial
     * @example
     * // Get one MixFilial
     * const mixFilial = await prisma.mixFilial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MixFilialFindUniqueArgs>(args: SelectSubset<T, MixFilialFindUniqueArgs<ExtArgs>>): Prisma__MixFilialClient<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MixFilial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MixFilialFindUniqueOrThrowArgs} args - Arguments to find a MixFilial
     * @example
     * // Get one MixFilial
     * const mixFilial = await prisma.mixFilial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MixFilialFindUniqueOrThrowArgs>(args: SelectSubset<T, MixFilialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MixFilialClient<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MixFilial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixFilialFindFirstArgs} args - Arguments to find a MixFilial
     * @example
     * // Get one MixFilial
     * const mixFilial = await prisma.mixFilial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MixFilialFindFirstArgs>(args?: SelectSubset<T, MixFilialFindFirstArgs<ExtArgs>>): Prisma__MixFilialClient<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MixFilial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixFilialFindFirstOrThrowArgs} args - Arguments to find a MixFilial
     * @example
     * // Get one MixFilial
     * const mixFilial = await prisma.mixFilial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MixFilialFindFirstOrThrowArgs>(args?: SelectSubset<T, MixFilialFindFirstOrThrowArgs<ExtArgs>>): Prisma__MixFilialClient<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MixFilials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixFilialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MixFilials
     * const mixFilials = await prisma.mixFilial.findMany()
     * 
     * // Get first 10 MixFilials
     * const mixFilials = await prisma.mixFilial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mixFilialWithIdOnly = await prisma.mixFilial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MixFilialFindManyArgs>(args?: SelectSubset<T, MixFilialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MixFilial.
     * @param {MixFilialCreateArgs} args - Arguments to create a MixFilial.
     * @example
     * // Create one MixFilial
     * const MixFilial = await prisma.mixFilial.create({
     *   data: {
     *     // ... data to create a MixFilial
     *   }
     * })
     * 
     */
    create<T extends MixFilialCreateArgs>(args: SelectSubset<T, MixFilialCreateArgs<ExtArgs>>): Prisma__MixFilialClient<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MixFilials.
     * @param {MixFilialCreateManyArgs} args - Arguments to create many MixFilials.
     * @example
     * // Create many MixFilials
     * const mixFilial = await prisma.mixFilial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MixFilialCreateManyArgs>(args?: SelectSubset<T, MixFilialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MixFilial.
     * @param {MixFilialDeleteArgs} args - Arguments to delete one MixFilial.
     * @example
     * // Delete one MixFilial
     * const MixFilial = await prisma.mixFilial.delete({
     *   where: {
     *     // ... filter to delete one MixFilial
     *   }
     * })
     * 
     */
    delete<T extends MixFilialDeleteArgs>(args: SelectSubset<T, MixFilialDeleteArgs<ExtArgs>>): Prisma__MixFilialClient<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MixFilial.
     * @param {MixFilialUpdateArgs} args - Arguments to update one MixFilial.
     * @example
     * // Update one MixFilial
     * const mixFilial = await prisma.mixFilial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MixFilialUpdateArgs>(args: SelectSubset<T, MixFilialUpdateArgs<ExtArgs>>): Prisma__MixFilialClient<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MixFilials.
     * @param {MixFilialDeleteManyArgs} args - Arguments to filter MixFilials to delete.
     * @example
     * // Delete a few MixFilials
     * const { count } = await prisma.mixFilial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MixFilialDeleteManyArgs>(args?: SelectSubset<T, MixFilialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MixFilials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixFilialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MixFilials
     * const mixFilial = await prisma.mixFilial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MixFilialUpdateManyArgs>(args: SelectSubset<T, MixFilialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MixFilial.
     * @param {MixFilialUpsertArgs} args - Arguments to update or create a MixFilial.
     * @example
     * // Update or create a MixFilial
     * const mixFilial = await prisma.mixFilial.upsert({
     *   create: {
     *     // ... data to create a MixFilial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MixFilial we want to update
     *   }
     * })
     */
    upsert<T extends MixFilialUpsertArgs>(args: SelectSubset<T, MixFilialUpsertArgs<ExtArgs>>): Prisma__MixFilialClient<$Result.GetResult<Prisma.$MixFilialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MixFilials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixFilialCountArgs} args - Arguments to filter MixFilials to count.
     * @example
     * // Count the number of MixFilials
     * const count = await prisma.mixFilial.count({
     *   where: {
     *     // ... the filter for the MixFilials we want to count
     *   }
     * })
    **/
    count<T extends MixFilialCountArgs>(
      args?: Subset<T, MixFilialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MixFilialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MixFilial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixFilialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MixFilialAggregateArgs>(args: Subset<T, MixFilialAggregateArgs>): Prisma.PrismaPromise<GetMixFilialAggregateType<T>>

    /**
     * Group by MixFilial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MixFilialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MixFilialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MixFilialGroupByArgs['orderBy'] }
        : { orderBy?: MixFilialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MixFilialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMixFilialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MixFilial model
   */
  readonly fields: MixFilialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MixFilial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MixFilialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends FilialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FilialDefaultArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MixFilial model
   */
  interface MixFilialFieldRefs {
    readonly id: FieldRef<"MixFilial", 'Int'>
    readonly filialId: FieldRef<"MixFilial", 'Int'>
    readonly data: FieldRef<"MixFilial", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"MixFilial", 'String'>
    readonly receitaMaquinas: FieldRef<"MixFilial", 'Decimal'>
    readonly receitaPecas: FieldRef<"MixFilial", 'Decimal'>
    readonly receitaServicos: FieldRef<"MixFilial", 'Decimal'>
    readonly percentualMaquinas: FieldRef<"MixFilial", 'Decimal'>
    readonly percentualPecas: FieldRef<"MixFilial", 'Decimal'>
    readonly percentualServicos: FieldRef<"MixFilial", 'Decimal'>
    readonly quantidadeNotasMaquinas: FieldRef<"MixFilial", 'Int'>
    readonly quantidadeNotasPecas: FieldRef<"MixFilial", 'Int'>
    readonly quantidadeNotasServicos: FieldRef<"MixFilial", 'Int'>
    readonly createdAt: FieldRef<"MixFilial", 'DateTime'>
    readonly updatedAt: FieldRef<"MixFilial", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MixFilial findUnique
   */
  export type MixFilialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * Filter, which MixFilial to fetch.
     */
    where: MixFilialWhereUniqueInput
  }

  /**
   * MixFilial findUniqueOrThrow
   */
  export type MixFilialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * Filter, which MixFilial to fetch.
     */
    where: MixFilialWhereUniqueInput
  }

  /**
   * MixFilial findFirst
   */
  export type MixFilialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * Filter, which MixFilial to fetch.
     */
    where?: MixFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MixFilials to fetch.
     */
    orderBy?: MixFilialOrderByWithRelationInput | MixFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MixFilials.
     */
    cursor?: MixFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MixFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MixFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MixFilials.
     */
    distinct?: MixFilialScalarFieldEnum | MixFilialScalarFieldEnum[]
  }

  /**
   * MixFilial findFirstOrThrow
   */
  export type MixFilialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * Filter, which MixFilial to fetch.
     */
    where?: MixFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MixFilials to fetch.
     */
    orderBy?: MixFilialOrderByWithRelationInput | MixFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MixFilials.
     */
    cursor?: MixFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MixFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MixFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MixFilials.
     */
    distinct?: MixFilialScalarFieldEnum | MixFilialScalarFieldEnum[]
  }

  /**
   * MixFilial findMany
   */
  export type MixFilialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * Filter, which MixFilials to fetch.
     */
    where?: MixFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MixFilials to fetch.
     */
    orderBy?: MixFilialOrderByWithRelationInput | MixFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MixFilials.
     */
    cursor?: MixFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MixFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MixFilials.
     */
    skip?: number
    distinct?: MixFilialScalarFieldEnum | MixFilialScalarFieldEnum[]
  }

  /**
   * MixFilial create
   */
  export type MixFilialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * The data needed to create a MixFilial.
     */
    data: XOR<MixFilialCreateInput, MixFilialUncheckedCreateInput>
  }

  /**
   * MixFilial createMany
   */
  export type MixFilialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MixFilials.
     */
    data: MixFilialCreateManyInput | MixFilialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MixFilial update
   */
  export type MixFilialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * The data needed to update a MixFilial.
     */
    data: XOR<MixFilialUpdateInput, MixFilialUncheckedUpdateInput>
    /**
     * Choose, which MixFilial to update.
     */
    where: MixFilialWhereUniqueInput
  }

  /**
   * MixFilial updateMany
   */
  export type MixFilialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MixFilials.
     */
    data: XOR<MixFilialUpdateManyMutationInput, MixFilialUncheckedUpdateManyInput>
    /**
     * Filter which MixFilials to update
     */
    where?: MixFilialWhereInput
    /**
     * Limit how many MixFilials to update.
     */
    limit?: number
  }

  /**
   * MixFilial upsert
   */
  export type MixFilialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * The filter to search for the MixFilial to update in case it exists.
     */
    where: MixFilialWhereUniqueInput
    /**
     * In case the MixFilial found by the `where` argument doesn't exist, create a new MixFilial with this data.
     */
    create: XOR<MixFilialCreateInput, MixFilialUncheckedCreateInput>
    /**
     * In case the MixFilial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MixFilialUpdateInput, MixFilialUncheckedUpdateInput>
  }

  /**
   * MixFilial delete
   */
  export type MixFilialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
    /**
     * Filter which MixFilial to delete.
     */
    where: MixFilialWhereUniqueInput
  }

  /**
   * MixFilial deleteMany
   */
  export type MixFilialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MixFilials to delete
     */
    where?: MixFilialWhereInput
    /**
     * Limit how many MixFilials to delete.
     */
    limit?: number
  }

  /**
   * MixFilial without action
   */
  export type MixFilialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MixFilial
     */
    select?: MixFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MixFilial
     */
    omit?: MixFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MixFilialInclude<ExtArgs> | null
  }


  /**
   * Model ParticipacaoReceitaFilial
   */

  export type AggregateParticipacaoReceitaFilial = {
    _count: ParticipacaoReceitaFilialCountAggregateOutputType | null
    _avg: ParticipacaoReceitaFilialAvgAggregateOutputType | null
    _sum: ParticipacaoReceitaFilialSumAggregateOutputType | null
    _min: ParticipacaoReceitaFilialMinAggregateOutputType | null
    _max: ParticipacaoReceitaFilialMaxAggregateOutputType | null
  }

  export type ParticipacaoReceitaFilialAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    receitaFilial: Decimal | null
    receitaTotalEmpresa: Decimal | null
    percentualParticipacao: Decimal | null
    posicaoRanking: number | null
    totalFiliais: number | null
  }

  export type ParticipacaoReceitaFilialSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    receitaFilial: Decimal | null
    receitaTotalEmpresa: Decimal | null
    percentualParticipacao: Decimal | null
    posicaoRanking: number | null
    totalFiliais: number | null
  }

  export type ParticipacaoReceitaFilialMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaFilial: Decimal | null
    receitaTotalEmpresa: Decimal | null
    percentualParticipacao: Decimal | null
    posicaoRanking: number | null
    totalFiliais: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ParticipacaoReceitaFilialMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    receitaFilial: Decimal | null
    receitaTotalEmpresa: Decimal | null
    percentualParticipacao: Decimal | null
    posicaoRanking: number | null
    totalFiliais: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ParticipacaoReceitaFilialCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    receitaFilial: number
    receitaTotalEmpresa: number
    percentualParticipacao: number
    posicaoRanking: number
    totalFiliais: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ParticipacaoReceitaFilialAvgAggregateInputType = {
    id?: true
    filialId?: true
    receitaFilial?: true
    receitaTotalEmpresa?: true
    percentualParticipacao?: true
    posicaoRanking?: true
    totalFiliais?: true
  }

  export type ParticipacaoReceitaFilialSumAggregateInputType = {
    id?: true
    filialId?: true
    receitaFilial?: true
    receitaTotalEmpresa?: true
    percentualParticipacao?: true
    posicaoRanking?: true
    totalFiliais?: true
  }

  export type ParticipacaoReceitaFilialMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaFilial?: true
    receitaTotalEmpresa?: true
    percentualParticipacao?: true
    posicaoRanking?: true
    totalFiliais?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ParticipacaoReceitaFilialMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaFilial?: true
    receitaTotalEmpresa?: true
    percentualParticipacao?: true
    posicaoRanking?: true
    totalFiliais?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ParticipacaoReceitaFilialCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    receitaFilial?: true
    receitaTotalEmpresa?: true
    percentualParticipacao?: true
    posicaoRanking?: true
    totalFiliais?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ParticipacaoReceitaFilialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ParticipacaoReceitaFilial to aggregate.
     */
    where?: ParticipacaoReceitaFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ParticipacaoReceitaFilials to fetch.
     */
    orderBy?: ParticipacaoReceitaFilialOrderByWithRelationInput | ParticipacaoReceitaFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ParticipacaoReceitaFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ParticipacaoReceitaFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ParticipacaoReceitaFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ParticipacaoReceitaFilials
    **/
    _count?: true | ParticipacaoReceitaFilialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ParticipacaoReceitaFilialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ParticipacaoReceitaFilialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ParticipacaoReceitaFilialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ParticipacaoReceitaFilialMaxAggregateInputType
  }

  export type GetParticipacaoReceitaFilialAggregateType<T extends ParticipacaoReceitaFilialAggregateArgs> = {
        [P in keyof T & keyof AggregateParticipacaoReceitaFilial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateParticipacaoReceitaFilial[P]>
      : GetScalarType<T[P], AggregateParticipacaoReceitaFilial[P]>
  }




  export type ParticipacaoReceitaFilialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ParticipacaoReceitaFilialWhereInput
    orderBy?: ParticipacaoReceitaFilialOrderByWithAggregationInput | ParticipacaoReceitaFilialOrderByWithAggregationInput[]
    by: ParticipacaoReceitaFilialScalarFieldEnum[] | ParticipacaoReceitaFilialScalarFieldEnum
    having?: ParticipacaoReceitaFilialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ParticipacaoReceitaFilialCountAggregateInputType | true
    _avg?: ParticipacaoReceitaFilialAvgAggregateInputType
    _sum?: ParticipacaoReceitaFilialSumAggregateInputType
    _min?: ParticipacaoReceitaFilialMinAggregateInputType
    _max?: ParticipacaoReceitaFilialMaxAggregateInputType
  }

  export type ParticipacaoReceitaFilialGroupByOutputType = {
    id: number
    filialId: number
    data: Date
    tipoPeriodo: string
    receitaFilial: Decimal
    receitaTotalEmpresa: Decimal
    percentualParticipacao: Decimal
    posicaoRanking: number
    totalFiliais: number
    createdAt: Date
    updatedAt: Date
    _count: ParticipacaoReceitaFilialCountAggregateOutputType | null
    _avg: ParticipacaoReceitaFilialAvgAggregateOutputType | null
    _sum: ParticipacaoReceitaFilialSumAggregateOutputType | null
    _min: ParticipacaoReceitaFilialMinAggregateOutputType | null
    _max: ParticipacaoReceitaFilialMaxAggregateOutputType | null
  }

  type GetParticipacaoReceitaFilialGroupByPayload<T extends ParticipacaoReceitaFilialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ParticipacaoReceitaFilialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ParticipacaoReceitaFilialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ParticipacaoReceitaFilialGroupByOutputType[P]>
            : GetScalarType<T[P], ParticipacaoReceitaFilialGroupByOutputType[P]>
        }
      >
    >


  export type ParticipacaoReceitaFilialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaFilial?: boolean
    receitaTotalEmpresa?: boolean
    percentualParticipacao?: boolean
    posicaoRanking?: boolean
    totalFiliais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | FilialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["participacaoReceitaFilial"]>



  export type ParticipacaoReceitaFilialSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    receitaFilial?: boolean
    receitaTotalEmpresa?: boolean
    percentualParticipacao?: boolean
    posicaoRanking?: boolean
    totalFiliais?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ParticipacaoReceitaFilialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "receitaFilial" | "receitaTotalEmpresa" | "percentualParticipacao" | "posicaoRanking" | "totalFiliais" | "createdAt" | "updatedAt", ExtArgs["result"]["participacaoReceitaFilial"]>
  export type ParticipacaoReceitaFilialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | FilialDefaultArgs<ExtArgs>
  }

  export type $ParticipacaoReceitaFilialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ParticipacaoReceitaFilial"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number
      data: Date
      tipoPeriodo: string
      receitaFilial: Prisma.Decimal
      receitaTotalEmpresa: Prisma.Decimal
      percentualParticipacao: Prisma.Decimal
      posicaoRanking: number
      totalFiliais: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["participacaoReceitaFilial"]>
    composites: {}
  }

  type ParticipacaoReceitaFilialGetPayload<S extends boolean | null | undefined | ParticipacaoReceitaFilialDefaultArgs> = $Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload, S>

  type ParticipacaoReceitaFilialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ParticipacaoReceitaFilialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ParticipacaoReceitaFilialCountAggregateInputType | true
    }

  export interface ParticipacaoReceitaFilialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ParticipacaoReceitaFilial'], meta: { name: 'ParticipacaoReceitaFilial' } }
    /**
     * Find zero or one ParticipacaoReceitaFilial that matches the filter.
     * @param {ParticipacaoReceitaFilialFindUniqueArgs} args - Arguments to find a ParticipacaoReceitaFilial
     * @example
     * // Get one ParticipacaoReceitaFilial
     * const participacaoReceitaFilial = await prisma.participacaoReceitaFilial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ParticipacaoReceitaFilialFindUniqueArgs>(args: SelectSubset<T, ParticipacaoReceitaFilialFindUniqueArgs<ExtArgs>>): Prisma__ParticipacaoReceitaFilialClient<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ParticipacaoReceitaFilial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ParticipacaoReceitaFilialFindUniqueOrThrowArgs} args - Arguments to find a ParticipacaoReceitaFilial
     * @example
     * // Get one ParticipacaoReceitaFilial
     * const participacaoReceitaFilial = await prisma.participacaoReceitaFilial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ParticipacaoReceitaFilialFindUniqueOrThrowArgs>(args: SelectSubset<T, ParticipacaoReceitaFilialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ParticipacaoReceitaFilialClient<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ParticipacaoReceitaFilial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParticipacaoReceitaFilialFindFirstArgs} args - Arguments to find a ParticipacaoReceitaFilial
     * @example
     * // Get one ParticipacaoReceitaFilial
     * const participacaoReceitaFilial = await prisma.participacaoReceitaFilial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ParticipacaoReceitaFilialFindFirstArgs>(args?: SelectSubset<T, ParticipacaoReceitaFilialFindFirstArgs<ExtArgs>>): Prisma__ParticipacaoReceitaFilialClient<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ParticipacaoReceitaFilial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParticipacaoReceitaFilialFindFirstOrThrowArgs} args - Arguments to find a ParticipacaoReceitaFilial
     * @example
     * // Get one ParticipacaoReceitaFilial
     * const participacaoReceitaFilial = await prisma.participacaoReceitaFilial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ParticipacaoReceitaFilialFindFirstOrThrowArgs>(args?: SelectSubset<T, ParticipacaoReceitaFilialFindFirstOrThrowArgs<ExtArgs>>): Prisma__ParticipacaoReceitaFilialClient<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ParticipacaoReceitaFilials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParticipacaoReceitaFilialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ParticipacaoReceitaFilials
     * const participacaoReceitaFilials = await prisma.participacaoReceitaFilial.findMany()
     * 
     * // Get first 10 ParticipacaoReceitaFilials
     * const participacaoReceitaFilials = await prisma.participacaoReceitaFilial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const participacaoReceitaFilialWithIdOnly = await prisma.participacaoReceitaFilial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ParticipacaoReceitaFilialFindManyArgs>(args?: SelectSubset<T, ParticipacaoReceitaFilialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ParticipacaoReceitaFilial.
     * @param {ParticipacaoReceitaFilialCreateArgs} args - Arguments to create a ParticipacaoReceitaFilial.
     * @example
     * // Create one ParticipacaoReceitaFilial
     * const ParticipacaoReceitaFilial = await prisma.participacaoReceitaFilial.create({
     *   data: {
     *     // ... data to create a ParticipacaoReceitaFilial
     *   }
     * })
     * 
     */
    create<T extends ParticipacaoReceitaFilialCreateArgs>(args: SelectSubset<T, ParticipacaoReceitaFilialCreateArgs<ExtArgs>>): Prisma__ParticipacaoReceitaFilialClient<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ParticipacaoReceitaFilials.
     * @param {ParticipacaoReceitaFilialCreateManyArgs} args - Arguments to create many ParticipacaoReceitaFilials.
     * @example
     * // Create many ParticipacaoReceitaFilials
     * const participacaoReceitaFilial = await prisma.participacaoReceitaFilial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ParticipacaoReceitaFilialCreateManyArgs>(args?: SelectSubset<T, ParticipacaoReceitaFilialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ParticipacaoReceitaFilial.
     * @param {ParticipacaoReceitaFilialDeleteArgs} args - Arguments to delete one ParticipacaoReceitaFilial.
     * @example
     * // Delete one ParticipacaoReceitaFilial
     * const ParticipacaoReceitaFilial = await prisma.participacaoReceitaFilial.delete({
     *   where: {
     *     // ... filter to delete one ParticipacaoReceitaFilial
     *   }
     * })
     * 
     */
    delete<T extends ParticipacaoReceitaFilialDeleteArgs>(args: SelectSubset<T, ParticipacaoReceitaFilialDeleteArgs<ExtArgs>>): Prisma__ParticipacaoReceitaFilialClient<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ParticipacaoReceitaFilial.
     * @param {ParticipacaoReceitaFilialUpdateArgs} args - Arguments to update one ParticipacaoReceitaFilial.
     * @example
     * // Update one ParticipacaoReceitaFilial
     * const participacaoReceitaFilial = await prisma.participacaoReceitaFilial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ParticipacaoReceitaFilialUpdateArgs>(args: SelectSubset<T, ParticipacaoReceitaFilialUpdateArgs<ExtArgs>>): Prisma__ParticipacaoReceitaFilialClient<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ParticipacaoReceitaFilials.
     * @param {ParticipacaoReceitaFilialDeleteManyArgs} args - Arguments to filter ParticipacaoReceitaFilials to delete.
     * @example
     * // Delete a few ParticipacaoReceitaFilials
     * const { count } = await prisma.participacaoReceitaFilial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ParticipacaoReceitaFilialDeleteManyArgs>(args?: SelectSubset<T, ParticipacaoReceitaFilialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ParticipacaoReceitaFilials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParticipacaoReceitaFilialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ParticipacaoReceitaFilials
     * const participacaoReceitaFilial = await prisma.participacaoReceitaFilial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ParticipacaoReceitaFilialUpdateManyArgs>(args: SelectSubset<T, ParticipacaoReceitaFilialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ParticipacaoReceitaFilial.
     * @param {ParticipacaoReceitaFilialUpsertArgs} args - Arguments to update or create a ParticipacaoReceitaFilial.
     * @example
     * // Update or create a ParticipacaoReceitaFilial
     * const participacaoReceitaFilial = await prisma.participacaoReceitaFilial.upsert({
     *   create: {
     *     // ... data to create a ParticipacaoReceitaFilial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ParticipacaoReceitaFilial we want to update
     *   }
     * })
     */
    upsert<T extends ParticipacaoReceitaFilialUpsertArgs>(args: SelectSubset<T, ParticipacaoReceitaFilialUpsertArgs<ExtArgs>>): Prisma__ParticipacaoReceitaFilialClient<$Result.GetResult<Prisma.$ParticipacaoReceitaFilialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ParticipacaoReceitaFilials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParticipacaoReceitaFilialCountArgs} args - Arguments to filter ParticipacaoReceitaFilials to count.
     * @example
     * // Count the number of ParticipacaoReceitaFilials
     * const count = await prisma.participacaoReceitaFilial.count({
     *   where: {
     *     // ... the filter for the ParticipacaoReceitaFilials we want to count
     *   }
     * })
    **/
    count<T extends ParticipacaoReceitaFilialCountArgs>(
      args?: Subset<T, ParticipacaoReceitaFilialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ParticipacaoReceitaFilialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ParticipacaoReceitaFilial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParticipacaoReceitaFilialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ParticipacaoReceitaFilialAggregateArgs>(args: Subset<T, ParticipacaoReceitaFilialAggregateArgs>): Prisma.PrismaPromise<GetParticipacaoReceitaFilialAggregateType<T>>

    /**
     * Group by ParticipacaoReceitaFilial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ParticipacaoReceitaFilialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ParticipacaoReceitaFilialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ParticipacaoReceitaFilialGroupByArgs['orderBy'] }
        : { orderBy?: ParticipacaoReceitaFilialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ParticipacaoReceitaFilialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetParticipacaoReceitaFilialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ParticipacaoReceitaFilial model
   */
  readonly fields: ParticipacaoReceitaFilialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ParticipacaoReceitaFilial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ParticipacaoReceitaFilialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends FilialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FilialDefaultArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ParticipacaoReceitaFilial model
   */
  interface ParticipacaoReceitaFilialFieldRefs {
    readonly id: FieldRef<"ParticipacaoReceitaFilial", 'Int'>
    readonly filialId: FieldRef<"ParticipacaoReceitaFilial", 'Int'>
    readonly data: FieldRef<"ParticipacaoReceitaFilial", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ParticipacaoReceitaFilial", 'String'>
    readonly receitaFilial: FieldRef<"ParticipacaoReceitaFilial", 'Decimal'>
    readonly receitaTotalEmpresa: FieldRef<"ParticipacaoReceitaFilial", 'Decimal'>
    readonly percentualParticipacao: FieldRef<"ParticipacaoReceitaFilial", 'Decimal'>
    readonly posicaoRanking: FieldRef<"ParticipacaoReceitaFilial", 'Int'>
    readonly totalFiliais: FieldRef<"ParticipacaoReceitaFilial", 'Int'>
    readonly createdAt: FieldRef<"ParticipacaoReceitaFilial", 'DateTime'>
    readonly updatedAt: FieldRef<"ParticipacaoReceitaFilial", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ParticipacaoReceitaFilial findUnique
   */
  export type ParticipacaoReceitaFilialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ParticipacaoReceitaFilial to fetch.
     */
    where: ParticipacaoReceitaFilialWhereUniqueInput
  }

  /**
   * ParticipacaoReceitaFilial findUniqueOrThrow
   */
  export type ParticipacaoReceitaFilialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ParticipacaoReceitaFilial to fetch.
     */
    where: ParticipacaoReceitaFilialWhereUniqueInput
  }

  /**
   * ParticipacaoReceitaFilial findFirst
   */
  export type ParticipacaoReceitaFilialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ParticipacaoReceitaFilial to fetch.
     */
    where?: ParticipacaoReceitaFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ParticipacaoReceitaFilials to fetch.
     */
    orderBy?: ParticipacaoReceitaFilialOrderByWithRelationInput | ParticipacaoReceitaFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ParticipacaoReceitaFilials.
     */
    cursor?: ParticipacaoReceitaFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ParticipacaoReceitaFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ParticipacaoReceitaFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ParticipacaoReceitaFilials.
     */
    distinct?: ParticipacaoReceitaFilialScalarFieldEnum | ParticipacaoReceitaFilialScalarFieldEnum[]
  }

  /**
   * ParticipacaoReceitaFilial findFirstOrThrow
   */
  export type ParticipacaoReceitaFilialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ParticipacaoReceitaFilial to fetch.
     */
    where?: ParticipacaoReceitaFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ParticipacaoReceitaFilials to fetch.
     */
    orderBy?: ParticipacaoReceitaFilialOrderByWithRelationInput | ParticipacaoReceitaFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ParticipacaoReceitaFilials.
     */
    cursor?: ParticipacaoReceitaFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ParticipacaoReceitaFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ParticipacaoReceitaFilials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ParticipacaoReceitaFilials.
     */
    distinct?: ParticipacaoReceitaFilialScalarFieldEnum | ParticipacaoReceitaFilialScalarFieldEnum[]
  }

  /**
   * ParticipacaoReceitaFilial findMany
   */
  export type ParticipacaoReceitaFilialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter, which ParticipacaoReceitaFilials to fetch.
     */
    where?: ParticipacaoReceitaFilialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ParticipacaoReceitaFilials to fetch.
     */
    orderBy?: ParticipacaoReceitaFilialOrderByWithRelationInput | ParticipacaoReceitaFilialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ParticipacaoReceitaFilials.
     */
    cursor?: ParticipacaoReceitaFilialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ParticipacaoReceitaFilials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ParticipacaoReceitaFilials.
     */
    skip?: number
    distinct?: ParticipacaoReceitaFilialScalarFieldEnum | ParticipacaoReceitaFilialScalarFieldEnum[]
  }

  /**
   * ParticipacaoReceitaFilial create
   */
  export type ParticipacaoReceitaFilialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * The data needed to create a ParticipacaoReceitaFilial.
     */
    data: XOR<ParticipacaoReceitaFilialCreateInput, ParticipacaoReceitaFilialUncheckedCreateInput>
  }

  /**
   * ParticipacaoReceitaFilial createMany
   */
  export type ParticipacaoReceitaFilialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ParticipacaoReceitaFilials.
     */
    data: ParticipacaoReceitaFilialCreateManyInput | ParticipacaoReceitaFilialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ParticipacaoReceitaFilial update
   */
  export type ParticipacaoReceitaFilialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * The data needed to update a ParticipacaoReceitaFilial.
     */
    data: XOR<ParticipacaoReceitaFilialUpdateInput, ParticipacaoReceitaFilialUncheckedUpdateInput>
    /**
     * Choose, which ParticipacaoReceitaFilial to update.
     */
    where: ParticipacaoReceitaFilialWhereUniqueInput
  }

  /**
   * ParticipacaoReceitaFilial updateMany
   */
  export type ParticipacaoReceitaFilialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ParticipacaoReceitaFilials.
     */
    data: XOR<ParticipacaoReceitaFilialUpdateManyMutationInput, ParticipacaoReceitaFilialUncheckedUpdateManyInput>
    /**
     * Filter which ParticipacaoReceitaFilials to update
     */
    where?: ParticipacaoReceitaFilialWhereInput
    /**
     * Limit how many ParticipacaoReceitaFilials to update.
     */
    limit?: number
  }

  /**
   * ParticipacaoReceitaFilial upsert
   */
  export type ParticipacaoReceitaFilialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * The filter to search for the ParticipacaoReceitaFilial to update in case it exists.
     */
    where: ParticipacaoReceitaFilialWhereUniqueInput
    /**
     * In case the ParticipacaoReceitaFilial found by the `where` argument doesn't exist, create a new ParticipacaoReceitaFilial with this data.
     */
    create: XOR<ParticipacaoReceitaFilialCreateInput, ParticipacaoReceitaFilialUncheckedCreateInput>
    /**
     * In case the ParticipacaoReceitaFilial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ParticipacaoReceitaFilialUpdateInput, ParticipacaoReceitaFilialUncheckedUpdateInput>
  }

  /**
   * ParticipacaoReceitaFilial delete
   */
  export type ParticipacaoReceitaFilialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
    /**
     * Filter which ParticipacaoReceitaFilial to delete.
     */
    where: ParticipacaoReceitaFilialWhereUniqueInput
  }

  /**
   * ParticipacaoReceitaFilial deleteMany
   */
  export type ParticipacaoReceitaFilialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ParticipacaoReceitaFilials to delete
     */
    where?: ParticipacaoReceitaFilialWhereInput
    /**
     * Limit how many ParticipacaoReceitaFilials to delete.
     */
    limit?: number
  }

  /**
   * ParticipacaoReceitaFilial without action
   */
  export type ParticipacaoReceitaFilialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ParticipacaoReceitaFilial
     */
    select?: ParticipacaoReceitaFilialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ParticipacaoReceitaFilial
     */
    omit?: ParticipacaoReceitaFilialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ParticipacaoReceitaFilialInclude<ExtArgs> | null
  }


  /**
   * Model ReceitaFilialRegiao
   */

  export type AggregateReceitaFilialRegiao = {
    _count: ReceitaFilialRegiaoCountAggregateOutputType | null
    _avg: ReceitaFilialRegiaoAvgAggregateOutputType | null
    _sum: ReceitaFilialRegiaoSumAggregateOutputType | null
    _min: ReceitaFilialRegiaoMinAggregateOutputType | null
    _max: ReceitaFilialRegiaoMaxAggregateOutputType | null
  }

  export type ReceitaFilialRegiaoAvgAggregateOutputType = {
    id: number | null
    filialId: number | null
    receitaRegiao: Decimal | null
    numeroNotas: number | null
    numeroClientes: number | null
    percentualReceita: Decimal | null
  }

  export type ReceitaFilialRegiaoSumAggregateOutputType = {
    id: number | null
    filialId: number | null
    receitaRegiao: Decimal | null
    numeroNotas: number | null
    numeroClientes: number | null
    percentualReceita: Decimal | null
  }

  export type ReceitaFilialRegiaoMinAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    regiaoCliente: string | null
    estadoCliente: string | null
    cidadeCliente: string | null
    receitaRegiao: Decimal | null
    numeroNotas: number | null
    numeroClientes: number | null
    percentualReceita: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaFilialRegiaoMaxAggregateOutputType = {
    id: number | null
    filialId: number | null
    data: Date | null
    tipoPeriodo: string | null
    regiaoCliente: string | null
    estadoCliente: string | null
    cidadeCliente: string | null
    receitaRegiao: Decimal | null
    numeroNotas: number | null
    numeroClientes: number | null
    percentualReceita: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceitaFilialRegiaoCountAggregateOutputType = {
    id: number
    filialId: number
    data: number
    tipoPeriodo: number
    regiaoCliente: number
    estadoCliente: number
    cidadeCliente: number
    receitaRegiao: number
    numeroNotas: number
    numeroClientes: number
    percentualReceita: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceitaFilialRegiaoAvgAggregateInputType = {
    id?: true
    filialId?: true
    receitaRegiao?: true
    numeroNotas?: true
    numeroClientes?: true
    percentualReceita?: true
  }

  export type ReceitaFilialRegiaoSumAggregateInputType = {
    id?: true
    filialId?: true
    receitaRegiao?: true
    numeroNotas?: true
    numeroClientes?: true
    percentualReceita?: true
  }

  export type ReceitaFilialRegiaoMinAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    regiaoCliente?: true
    estadoCliente?: true
    cidadeCliente?: true
    receitaRegiao?: true
    numeroNotas?: true
    numeroClientes?: true
    percentualReceita?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaFilialRegiaoMaxAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    regiaoCliente?: true
    estadoCliente?: true
    cidadeCliente?: true
    receitaRegiao?: true
    numeroNotas?: true
    numeroClientes?: true
    percentualReceita?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceitaFilialRegiaoCountAggregateInputType = {
    id?: true
    filialId?: true
    data?: true
    tipoPeriodo?: true
    regiaoCliente?: true
    estadoCliente?: true
    cidadeCliente?: true
    receitaRegiao?: true
    numeroNotas?: true
    numeroClientes?: true
    percentualReceita?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceitaFilialRegiaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaFilialRegiao to aggregate.
     */
    where?: ReceitaFilialRegiaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaFilialRegiaos to fetch.
     */
    orderBy?: ReceitaFilialRegiaoOrderByWithRelationInput | ReceitaFilialRegiaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceitaFilialRegiaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaFilialRegiaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaFilialRegiaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ReceitaFilialRegiaos
    **/
    _count?: true | ReceitaFilialRegiaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceitaFilialRegiaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceitaFilialRegiaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceitaFilialRegiaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceitaFilialRegiaoMaxAggregateInputType
  }

  export type GetReceitaFilialRegiaoAggregateType<T extends ReceitaFilialRegiaoAggregateArgs> = {
        [P in keyof T & keyof AggregateReceitaFilialRegiao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceitaFilialRegiao[P]>
      : GetScalarType<T[P], AggregateReceitaFilialRegiao[P]>
  }




  export type ReceitaFilialRegiaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceitaFilialRegiaoWhereInput
    orderBy?: ReceitaFilialRegiaoOrderByWithAggregationInput | ReceitaFilialRegiaoOrderByWithAggregationInput[]
    by: ReceitaFilialRegiaoScalarFieldEnum[] | ReceitaFilialRegiaoScalarFieldEnum
    having?: ReceitaFilialRegiaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceitaFilialRegiaoCountAggregateInputType | true
    _avg?: ReceitaFilialRegiaoAvgAggregateInputType
    _sum?: ReceitaFilialRegiaoSumAggregateInputType
    _min?: ReceitaFilialRegiaoMinAggregateInputType
    _max?: ReceitaFilialRegiaoMaxAggregateInputType
  }

  export type ReceitaFilialRegiaoGroupByOutputType = {
    id: number
    filialId: number
    data: Date
    tipoPeriodo: string
    regiaoCliente: string
    estadoCliente: string
    cidadeCliente: string
    receitaRegiao: Decimal
    numeroNotas: number
    numeroClientes: number
    percentualReceita: Decimal
    createdAt: Date
    updatedAt: Date
    _count: ReceitaFilialRegiaoCountAggregateOutputType | null
    _avg: ReceitaFilialRegiaoAvgAggregateOutputType | null
    _sum: ReceitaFilialRegiaoSumAggregateOutputType | null
    _min: ReceitaFilialRegiaoMinAggregateOutputType | null
    _max: ReceitaFilialRegiaoMaxAggregateOutputType | null
  }

  type GetReceitaFilialRegiaoGroupByPayload<T extends ReceitaFilialRegiaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceitaFilialRegiaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceitaFilialRegiaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceitaFilialRegiaoGroupByOutputType[P]>
            : GetScalarType<T[P], ReceitaFilialRegiaoGroupByOutputType[P]>
        }
      >
    >


  export type ReceitaFilialRegiaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    regiaoCliente?: boolean
    estadoCliente?: boolean
    cidadeCliente?: boolean
    receitaRegiao?: boolean
    numeroNotas?: boolean
    numeroClientes?: boolean
    percentualReceita?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    filial?: boolean | FilialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["receitaFilialRegiao"]>



  export type ReceitaFilialRegiaoSelectScalar = {
    id?: boolean
    filialId?: boolean
    data?: boolean
    tipoPeriodo?: boolean
    regiaoCliente?: boolean
    estadoCliente?: boolean
    cidadeCliente?: boolean
    receitaRegiao?: boolean
    numeroNotas?: boolean
    numeroClientes?: boolean
    percentualReceita?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceitaFilialRegiaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filialId" | "data" | "tipoPeriodo" | "regiaoCliente" | "estadoCliente" | "cidadeCliente" | "receitaRegiao" | "numeroNotas" | "numeroClientes" | "percentualReceita" | "createdAt" | "updatedAt", ExtArgs["result"]["receitaFilialRegiao"]>
  export type ReceitaFilialRegiaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    filial?: boolean | FilialDefaultArgs<ExtArgs>
  }

  export type $ReceitaFilialRegiaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ReceitaFilialRegiao"
    objects: {
      filial: Prisma.$FilialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      filialId: number
      data: Date
      tipoPeriodo: string
      regiaoCliente: string
      estadoCliente: string
      cidadeCliente: string
      receitaRegiao: Prisma.Decimal
      numeroNotas: number
      numeroClientes: number
      percentualReceita: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receitaFilialRegiao"]>
    composites: {}
  }

  type ReceitaFilialRegiaoGetPayload<S extends boolean | null | undefined | ReceitaFilialRegiaoDefaultArgs> = $Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload, S>

  type ReceitaFilialRegiaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReceitaFilialRegiaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReceitaFilialRegiaoCountAggregateInputType | true
    }

  export interface ReceitaFilialRegiaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ReceitaFilialRegiao'], meta: { name: 'ReceitaFilialRegiao' } }
    /**
     * Find zero or one ReceitaFilialRegiao that matches the filter.
     * @param {ReceitaFilialRegiaoFindUniqueArgs} args - Arguments to find a ReceitaFilialRegiao
     * @example
     * // Get one ReceitaFilialRegiao
     * const receitaFilialRegiao = await prisma.receitaFilialRegiao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceitaFilialRegiaoFindUniqueArgs>(args: SelectSubset<T, ReceitaFilialRegiaoFindUniqueArgs<ExtArgs>>): Prisma__ReceitaFilialRegiaoClient<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ReceitaFilialRegiao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReceitaFilialRegiaoFindUniqueOrThrowArgs} args - Arguments to find a ReceitaFilialRegiao
     * @example
     * // Get one ReceitaFilialRegiao
     * const receitaFilialRegiao = await prisma.receitaFilialRegiao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceitaFilialRegiaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceitaFilialRegiaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceitaFilialRegiaoClient<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaFilialRegiao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialRegiaoFindFirstArgs} args - Arguments to find a ReceitaFilialRegiao
     * @example
     * // Get one ReceitaFilialRegiao
     * const receitaFilialRegiao = await prisma.receitaFilialRegiao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceitaFilialRegiaoFindFirstArgs>(args?: SelectSubset<T, ReceitaFilialRegiaoFindFirstArgs<ExtArgs>>): Prisma__ReceitaFilialRegiaoClient<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ReceitaFilialRegiao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialRegiaoFindFirstOrThrowArgs} args - Arguments to find a ReceitaFilialRegiao
     * @example
     * // Get one ReceitaFilialRegiao
     * const receitaFilialRegiao = await prisma.receitaFilialRegiao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceitaFilialRegiaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceitaFilialRegiaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceitaFilialRegiaoClient<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ReceitaFilialRegiaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialRegiaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ReceitaFilialRegiaos
     * const receitaFilialRegiaos = await prisma.receitaFilialRegiao.findMany()
     * 
     * // Get first 10 ReceitaFilialRegiaos
     * const receitaFilialRegiaos = await prisma.receitaFilialRegiao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receitaFilialRegiaoWithIdOnly = await prisma.receitaFilialRegiao.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceitaFilialRegiaoFindManyArgs>(args?: SelectSubset<T, ReceitaFilialRegiaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ReceitaFilialRegiao.
     * @param {ReceitaFilialRegiaoCreateArgs} args - Arguments to create a ReceitaFilialRegiao.
     * @example
     * // Create one ReceitaFilialRegiao
     * const ReceitaFilialRegiao = await prisma.receitaFilialRegiao.create({
     *   data: {
     *     // ... data to create a ReceitaFilialRegiao
     *   }
     * })
     * 
     */
    create<T extends ReceitaFilialRegiaoCreateArgs>(args: SelectSubset<T, ReceitaFilialRegiaoCreateArgs<ExtArgs>>): Prisma__ReceitaFilialRegiaoClient<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ReceitaFilialRegiaos.
     * @param {ReceitaFilialRegiaoCreateManyArgs} args - Arguments to create many ReceitaFilialRegiaos.
     * @example
     * // Create many ReceitaFilialRegiaos
     * const receitaFilialRegiao = await prisma.receitaFilialRegiao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceitaFilialRegiaoCreateManyArgs>(args?: SelectSubset<T, ReceitaFilialRegiaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ReceitaFilialRegiao.
     * @param {ReceitaFilialRegiaoDeleteArgs} args - Arguments to delete one ReceitaFilialRegiao.
     * @example
     * // Delete one ReceitaFilialRegiao
     * const ReceitaFilialRegiao = await prisma.receitaFilialRegiao.delete({
     *   where: {
     *     // ... filter to delete one ReceitaFilialRegiao
     *   }
     * })
     * 
     */
    delete<T extends ReceitaFilialRegiaoDeleteArgs>(args: SelectSubset<T, ReceitaFilialRegiaoDeleteArgs<ExtArgs>>): Prisma__ReceitaFilialRegiaoClient<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ReceitaFilialRegiao.
     * @param {ReceitaFilialRegiaoUpdateArgs} args - Arguments to update one ReceitaFilialRegiao.
     * @example
     * // Update one ReceitaFilialRegiao
     * const receitaFilialRegiao = await prisma.receitaFilialRegiao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceitaFilialRegiaoUpdateArgs>(args: SelectSubset<T, ReceitaFilialRegiaoUpdateArgs<ExtArgs>>): Prisma__ReceitaFilialRegiaoClient<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ReceitaFilialRegiaos.
     * @param {ReceitaFilialRegiaoDeleteManyArgs} args - Arguments to filter ReceitaFilialRegiaos to delete.
     * @example
     * // Delete a few ReceitaFilialRegiaos
     * const { count } = await prisma.receitaFilialRegiao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceitaFilialRegiaoDeleteManyArgs>(args?: SelectSubset<T, ReceitaFilialRegiaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ReceitaFilialRegiaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialRegiaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ReceitaFilialRegiaos
     * const receitaFilialRegiao = await prisma.receitaFilialRegiao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceitaFilialRegiaoUpdateManyArgs>(args: SelectSubset<T, ReceitaFilialRegiaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ReceitaFilialRegiao.
     * @param {ReceitaFilialRegiaoUpsertArgs} args - Arguments to update or create a ReceitaFilialRegiao.
     * @example
     * // Update or create a ReceitaFilialRegiao
     * const receitaFilialRegiao = await prisma.receitaFilialRegiao.upsert({
     *   create: {
     *     // ... data to create a ReceitaFilialRegiao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ReceitaFilialRegiao we want to update
     *   }
     * })
     */
    upsert<T extends ReceitaFilialRegiaoUpsertArgs>(args: SelectSubset<T, ReceitaFilialRegiaoUpsertArgs<ExtArgs>>): Prisma__ReceitaFilialRegiaoClient<$Result.GetResult<Prisma.$ReceitaFilialRegiaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ReceitaFilialRegiaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialRegiaoCountArgs} args - Arguments to filter ReceitaFilialRegiaos to count.
     * @example
     * // Count the number of ReceitaFilialRegiaos
     * const count = await prisma.receitaFilialRegiao.count({
     *   where: {
     *     // ... the filter for the ReceitaFilialRegiaos we want to count
     *   }
     * })
    **/
    count<T extends ReceitaFilialRegiaoCountArgs>(
      args?: Subset<T, ReceitaFilialRegiaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceitaFilialRegiaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ReceitaFilialRegiao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialRegiaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceitaFilialRegiaoAggregateArgs>(args: Subset<T, ReceitaFilialRegiaoAggregateArgs>): Prisma.PrismaPromise<GetReceitaFilialRegiaoAggregateType<T>>

    /**
     * Group by ReceitaFilialRegiao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceitaFilialRegiaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceitaFilialRegiaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceitaFilialRegiaoGroupByArgs['orderBy'] }
        : { orderBy?: ReceitaFilialRegiaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceitaFilialRegiaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceitaFilialRegiaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ReceitaFilialRegiao model
   */
  readonly fields: ReceitaFilialRegiaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ReceitaFilialRegiao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceitaFilialRegiaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    filial<T extends FilialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FilialDefaultArgs<ExtArgs>>): Prisma__FilialClient<$Result.GetResult<Prisma.$FilialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ReceitaFilialRegiao model
   */
  interface ReceitaFilialRegiaoFieldRefs {
    readonly id: FieldRef<"ReceitaFilialRegiao", 'Int'>
    readonly filialId: FieldRef<"ReceitaFilialRegiao", 'Int'>
    readonly data: FieldRef<"ReceitaFilialRegiao", 'DateTime'>
    readonly tipoPeriodo: FieldRef<"ReceitaFilialRegiao", 'String'>
    readonly regiaoCliente: FieldRef<"ReceitaFilialRegiao", 'String'>
    readonly estadoCliente: FieldRef<"ReceitaFilialRegiao", 'String'>
    readonly cidadeCliente: FieldRef<"ReceitaFilialRegiao", 'String'>
    readonly receitaRegiao: FieldRef<"ReceitaFilialRegiao", 'Decimal'>
    readonly numeroNotas: FieldRef<"ReceitaFilialRegiao", 'Int'>
    readonly numeroClientes: FieldRef<"ReceitaFilialRegiao", 'Int'>
    readonly percentualReceita: FieldRef<"ReceitaFilialRegiao", 'Decimal'>
    readonly createdAt: FieldRef<"ReceitaFilialRegiao", 'DateTime'>
    readonly updatedAt: FieldRef<"ReceitaFilialRegiao", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ReceitaFilialRegiao findUnique
   */
  export type ReceitaFilialRegiaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilialRegiao to fetch.
     */
    where: ReceitaFilialRegiaoWhereUniqueInput
  }

  /**
   * ReceitaFilialRegiao findUniqueOrThrow
   */
  export type ReceitaFilialRegiaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilialRegiao to fetch.
     */
    where: ReceitaFilialRegiaoWhereUniqueInput
  }

  /**
   * ReceitaFilialRegiao findFirst
   */
  export type ReceitaFilialRegiaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilialRegiao to fetch.
     */
    where?: ReceitaFilialRegiaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaFilialRegiaos to fetch.
     */
    orderBy?: ReceitaFilialRegiaoOrderByWithRelationInput | ReceitaFilialRegiaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaFilialRegiaos.
     */
    cursor?: ReceitaFilialRegiaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaFilialRegiaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaFilialRegiaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaFilialRegiaos.
     */
    distinct?: ReceitaFilialRegiaoScalarFieldEnum | ReceitaFilialRegiaoScalarFieldEnum[]
  }

  /**
   * ReceitaFilialRegiao findFirstOrThrow
   */
  export type ReceitaFilialRegiaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilialRegiao to fetch.
     */
    where?: ReceitaFilialRegiaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaFilialRegiaos to fetch.
     */
    orderBy?: ReceitaFilialRegiaoOrderByWithRelationInput | ReceitaFilialRegiaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ReceitaFilialRegiaos.
     */
    cursor?: ReceitaFilialRegiaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaFilialRegiaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaFilialRegiaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ReceitaFilialRegiaos.
     */
    distinct?: ReceitaFilialRegiaoScalarFieldEnum | ReceitaFilialRegiaoScalarFieldEnum[]
  }

  /**
   * ReceitaFilialRegiao findMany
   */
  export type ReceitaFilialRegiaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * Filter, which ReceitaFilialRegiaos to fetch.
     */
    where?: ReceitaFilialRegiaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ReceitaFilialRegiaos to fetch.
     */
    orderBy?: ReceitaFilialRegiaoOrderByWithRelationInput | ReceitaFilialRegiaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ReceitaFilialRegiaos.
     */
    cursor?: ReceitaFilialRegiaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ReceitaFilialRegiaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ReceitaFilialRegiaos.
     */
    skip?: number
    distinct?: ReceitaFilialRegiaoScalarFieldEnum | ReceitaFilialRegiaoScalarFieldEnum[]
  }

  /**
   * ReceitaFilialRegiao create
   */
  export type ReceitaFilialRegiaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * The data needed to create a ReceitaFilialRegiao.
     */
    data: XOR<ReceitaFilialRegiaoCreateInput, ReceitaFilialRegiaoUncheckedCreateInput>
  }

  /**
   * ReceitaFilialRegiao createMany
   */
  export type ReceitaFilialRegiaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ReceitaFilialRegiaos.
     */
    data: ReceitaFilialRegiaoCreateManyInput | ReceitaFilialRegiaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ReceitaFilialRegiao update
   */
  export type ReceitaFilialRegiaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * The data needed to update a ReceitaFilialRegiao.
     */
    data: XOR<ReceitaFilialRegiaoUpdateInput, ReceitaFilialRegiaoUncheckedUpdateInput>
    /**
     * Choose, which ReceitaFilialRegiao to update.
     */
    where: ReceitaFilialRegiaoWhereUniqueInput
  }

  /**
   * ReceitaFilialRegiao updateMany
   */
  export type ReceitaFilialRegiaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ReceitaFilialRegiaos.
     */
    data: XOR<ReceitaFilialRegiaoUpdateManyMutationInput, ReceitaFilialRegiaoUncheckedUpdateManyInput>
    /**
     * Filter which ReceitaFilialRegiaos to update
     */
    where?: ReceitaFilialRegiaoWhereInput
    /**
     * Limit how many ReceitaFilialRegiaos to update.
     */
    limit?: number
  }

  /**
   * ReceitaFilialRegiao upsert
   */
  export type ReceitaFilialRegiaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * The filter to search for the ReceitaFilialRegiao to update in case it exists.
     */
    where: ReceitaFilialRegiaoWhereUniqueInput
    /**
     * In case the ReceitaFilialRegiao found by the `where` argument doesn't exist, create a new ReceitaFilialRegiao with this data.
     */
    create: XOR<ReceitaFilialRegiaoCreateInput, ReceitaFilialRegiaoUncheckedCreateInput>
    /**
     * In case the ReceitaFilialRegiao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceitaFilialRegiaoUpdateInput, ReceitaFilialRegiaoUncheckedUpdateInput>
  }

  /**
   * ReceitaFilialRegiao delete
   */
  export type ReceitaFilialRegiaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
    /**
     * Filter which ReceitaFilialRegiao to delete.
     */
    where: ReceitaFilialRegiaoWhereUniqueInput
  }

  /**
   * ReceitaFilialRegiao deleteMany
   */
  export type ReceitaFilialRegiaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ReceitaFilialRegiaos to delete
     */
    where?: ReceitaFilialRegiaoWhereInput
    /**
     * Limit how many ReceitaFilialRegiaos to delete.
     */
    limit?: number
  }

  /**
   * ReceitaFilialRegiao without action
   */
  export type ReceitaFilialRegiaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReceitaFilialRegiao
     */
    select?: ReceitaFilialRegiaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ReceitaFilialRegiao
     */
    omit?: ReceitaFilialRegiaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceitaFilialRegiaoInclude<ExtArgs> | null
  }


  /**
   * Model ConfiguracaoInatividade
   */

  export type AggregateConfiguracaoInatividade = {
    _count: ConfiguracaoInatividadeCountAggregateOutputType | null
    _avg: ConfiguracaoInatividadeAvgAggregateOutputType | null
    _sum: ConfiguracaoInatividadeSumAggregateOutputType | null
    _min: ConfiguracaoInatividadeMinAggregateOutputType | null
    _max: ConfiguracaoInatividadeMaxAggregateOutputType | null
  }

  export type ConfiguracaoInatividadeAvgAggregateOutputType = {
    id: number | null
    empresaId: number | null
    diasSemCompra: number | null
    valorMinimoCompra: Decimal | null
  }

  export type ConfiguracaoInatividadeSumAggregateOutputType = {
    id: number | null
    empresaId: number | null
    diasSemCompra: number | null
    valorMinimoCompra: Decimal | null
  }

  export type ConfiguracaoInatividadeMinAggregateOutputType = {
    id: number | null
    empresaId: number | null
    diasSemCompra: number | null
    valorMinimoCompra: Decimal | null
    considerarTipoCliente: boolean | null
    tiposClienteExcluidos: string | null
    ativo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfiguracaoInatividadeMaxAggregateOutputType = {
    id: number | null
    empresaId: number | null
    diasSemCompra: number | null
    valorMinimoCompra: Decimal | null
    considerarTipoCliente: boolean | null
    tiposClienteExcluidos: string | null
    ativo: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfiguracaoInatividadeCountAggregateOutputType = {
    id: number
    empresaId: number
    diasSemCompra: number
    valorMinimoCompra: number
    considerarTipoCliente: number
    tiposClienteExcluidos: number
    ativo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ConfiguracaoInatividadeAvgAggregateInputType = {
    id?: true
    empresaId?: true
    diasSemCompra?: true
    valorMinimoCompra?: true
  }

  export type ConfiguracaoInatividadeSumAggregateInputType = {
    id?: true
    empresaId?: true
    diasSemCompra?: true
    valorMinimoCompra?: true
  }

  export type ConfiguracaoInatividadeMinAggregateInputType = {
    id?: true
    empresaId?: true
    diasSemCompra?: true
    valorMinimoCompra?: true
    considerarTipoCliente?: true
    tiposClienteExcluidos?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfiguracaoInatividadeMaxAggregateInputType = {
    id?: true
    empresaId?: true
    diasSemCompra?: true
    valorMinimoCompra?: true
    considerarTipoCliente?: true
    tiposClienteExcluidos?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfiguracaoInatividadeCountAggregateInputType = {
    id?: true
    empresaId?: true
    diasSemCompra?: true
    valorMinimoCompra?: true
    considerarTipoCliente?: true
    tiposClienteExcluidos?: true
    ativo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ConfiguracaoInatividadeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfiguracaoInatividade to aggregate.
     */
    where?: ConfiguracaoInatividadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracaoInatividades to fetch.
     */
    orderBy?: ConfiguracaoInatividadeOrderByWithRelationInput | ConfiguracaoInatividadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfiguracaoInatividadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracaoInatividades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracaoInatividades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConfiguracaoInatividades
    **/
    _count?: true | ConfiguracaoInatividadeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfiguracaoInatividadeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfiguracaoInatividadeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfiguracaoInatividadeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfiguracaoInatividadeMaxAggregateInputType
  }

  export type GetConfiguracaoInatividadeAggregateType<T extends ConfiguracaoInatividadeAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracaoInatividade]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracaoInatividade[P]>
      : GetScalarType<T[P], AggregateConfiguracaoInatividade[P]>
  }




  export type ConfiguracaoInatividadeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfiguracaoInatividadeWhereInput
    orderBy?: ConfiguracaoInatividadeOrderByWithAggregationInput | ConfiguracaoInatividadeOrderByWithAggregationInput[]
    by: ConfiguracaoInatividadeScalarFieldEnum[] | ConfiguracaoInatividadeScalarFieldEnum
    having?: ConfiguracaoInatividadeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfiguracaoInatividadeCountAggregateInputType | true
    _avg?: ConfiguracaoInatividadeAvgAggregateInputType
    _sum?: ConfiguracaoInatividadeSumAggregateInputType
    _min?: ConfiguracaoInatividadeMinAggregateInputType
    _max?: ConfiguracaoInatividadeMaxAggregateInputType
  }

  export type ConfiguracaoInatividadeGroupByOutputType = {
    id: number
    empresaId: number
    diasSemCompra: number
    valorMinimoCompra: Decimal | null
    considerarTipoCliente: boolean
    tiposClienteExcluidos: string | null
    ativo: boolean
    createdAt: Date
    updatedAt: Date
    _count: ConfiguracaoInatividadeCountAggregateOutputType | null
    _avg: ConfiguracaoInatividadeAvgAggregateOutputType | null
    _sum: ConfiguracaoInatividadeSumAggregateOutputType | null
    _min: ConfiguracaoInatividadeMinAggregateOutputType | null
    _max: ConfiguracaoInatividadeMaxAggregateOutputType | null
  }

  type GetConfiguracaoInatividadeGroupByPayload<T extends ConfiguracaoInatividadeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfiguracaoInatividadeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfiguracaoInatividadeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfiguracaoInatividadeGroupByOutputType[P]>
            : GetScalarType<T[P], ConfiguracaoInatividadeGroupByOutputType[P]>
        }
      >
    >


  export type ConfiguracaoInatividadeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empresaId?: boolean
    diasSemCompra?: boolean
    valorMinimoCompra?: boolean
    considerarTipoCliente?: boolean
    tiposClienteExcluidos?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    empresa?: boolean | EmpresaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configuracaoInatividade"]>



  export type ConfiguracaoInatividadeSelectScalar = {
    id?: boolean
    empresaId?: boolean
    diasSemCompra?: boolean
    valorMinimoCompra?: boolean
    considerarTipoCliente?: boolean
    tiposClienteExcluidos?: boolean
    ativo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ConfiguracaoInatividadeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empresaId" | "diasSemCompra" | "valorMinimoCompra" | "considerarTipoCliente" | "tiposClienteExcluidos" | "ativo" | "createdAt" | "updatedAt", ExtArgs["result"]["configuracaoInatividade"]>
  export type ConfiguracaoInatividadeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    empresa?: boolean | EmpresaDefaultArgs<ExtArgs>
  }

  export type $ConfiguracaoInatividadePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConfiguracaoInatividade"
    objects: {
      empresa: Prisma.$EmpresaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empresaId: number
      diasSemCompra: number
      valorMinimoCompra: Prisma.Decimal | null
      considerarTipoCliente: boolean
      tiposClienteExcluidos: string | null
      ativo: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["configuracaoInatividade"]>
    composites: {}
  }

  type ConfiguracaoInatividadeGetPayload<S extends boolean | null | undefined | ConfiguracaoInatividadeDefaultArgs> = $Result.GetResult<Prisma.$ConfiguracaoInatividadePayload, S>

  type ConfiguracaoInatividadeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConfiguracaoInatividadeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfiguracaoInatividadeCountAggregateInputType | true
    }

  export interface ConfiguracaoInatividadeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConfiguracaoInatividade'], meta: { name: 'ConfiguracaoInatividade' } }
    /**
     * Find zero or one ConfiguracaoInatividade that matches the filter.
     * @param {ConfiguracaoInatividadeFindUniqueArgs} args - Arguments to find a ConfiguracaoInatividade
     * @example
     * // Get one ConfiguracaoInatividade
     * const configuracaoInatividade = await prisma.configuracaoInatividade.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfiguracaoInatividadeFindUniqueArgs>(args: SelectSubset<T, ConfiguracaoInatividadeFindUniqueArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ConfiguracaoInatividade that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConfiguracaoInatividadeFindUniqueOrThrowArgs} args - Arguments to find a ConfiguracaoInatividade
     * @example
     * // Get one ConfiguracaoInatividade
     * const configuracaoInatividade = await prisma.configuracaoInatividade.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfiguracaoInatividadeFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfiguracaoInatividadeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfiguracaoInatividade that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoInatividadeFindFirstArgs} args - Arguments to find a ConfiguracaoInatividade
     * @example
     * // Get one ConfiguracaoInatividade
     * const configuracaoInatividade = await prisma.configuracaoInatividade.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfiguracaoInatividadeFindFirstArgs>(args?: SelectSubset<T, ConfiguracaoInatividadeFindFirstArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfiguracaoInatividade that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoInatividadeFindFirstOrThrowArgs} args - Arguments to find a ConfiguracaoInatividade
     * @example
     * // Get one ConfiguracaoInatividade
     * const configuracaoInatividade = await prisma.configuracaoInatividade.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfiguracaoInatividadeFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfiguracaoInatividadeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ConfiguracaoInatividades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoInatividadeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConfiguracaoInatividades
     * const configuracaoInatividades = await prisma.configuracaoInatividade.findMany()
     * 
     * // Get first 10 ConfiguracaoInatividades
     * const configuracaoInatividades = await prisma.configuracaoInatividade.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracaoInatividadeWithIdOnly = await prisma.configuracaoInatividade.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfiguracaoInatividadeFindManyArgs>(args?: SelectSubset<T, ConfiguracaoInatividadeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ConfiguracaoInatividade.
     * @param {ConfiguracaoInatividadeCreateArgs} args - Arguments to create a ConfiguracaoInatividade.
     * @example
     * // Create one ConfiguracaoInatividade
     * const ConfiguracaoInatividade = await prisma.configuracaoInatividade.create({
     *   data: {
     *     // ... data to create a ConfiguracaoInatividade
     *   }
     * })
     * 
     */
    create<T extends ConfiguracaoInatividadeCreateArgs>(args: SelectSubset<T, ConfiguracaoInatividadeCreateArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ConfiguracaoInatividades.
     * @param {ConfiguracaoInatividadeCreateManyArgs} args - Arguments to create many ConfiguracaoInatividades.
     * @example
     * // Create many ConfiguracaoInatividades
     * const configuracaoInatividade = await prisma.configuracaoInatividade.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfiguracaoInatividadeCreateManyArgs>(args?: SelectSubset<T, ConfiguracaoInatividadeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ConfiguracaoInatividade.
     * @param {ConfiguracaoInatividadeDeleteArgs} args - Arguments to delete one ConfiguracaoInatividade.
     * @example
     * // Delete one ConfiguracaoInatividade
     * const ConfiguracaoInatividade = await prisma.configuracaoInatividade.delete({
     *   where: {
     *     // ... filter to delete one ConfiguracaoInatividade
     *   }
     * })
     * 
     */
    delete<T extends ConfiguracaoInatividadeDeleteArgs>(args: SelectSubset<T, ConfiguracaoInatividadeDeleteArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ConfiguracaoInatividade.
     * @param {ConfiguracaoInatividadeUpdateArgs} args - Arguments to update one ConfiguracaoInatividade.
     * @example
     * // Update one ConfiguracaoInatividade
     * const configuracaoInatividade = await prisma.configuracaoInatividade.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfiguracaoInatividadeUpdateArgs>(args: SelectSubset<T, ConfiguracaoInatividadeUpdateArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ConfiguracaoInatividades.
     * @param {ConfiguracaoInatividadeDeleteManyArgs} args - Arguments to filter ConfiguracaoInatividades to delete.
     * @example
     * // Delete a few ConfiguracaoInatividades
     * const { count } = await prisma.configuracaoInatividade.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfiguracaoInatividadeDeleteManyArgs>(args?: SelectSubset<T, ConfiguracaoInatividadeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfiguracaoInatividades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoInatividadeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConfiguracaoInatividades
     * const configuracaoInatividade = await prisma.configuracaoInatividade.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfiguracaoInatividadeUpdateManyArgs>(args: SelectSubset<T, ConfiguracaoInatividadeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ConfiguracaoInatividade.
     * @param {ConfiguracaoInatividadeUpsertArgs} args - Arguments to update or create a ConfiguracaoInatividade.
     * @example
     * // Update or create a ConfiguracaoInatividade
     * const configuracaoInatividade = await prisma.configuracaoInatividade.upsert({
     *   create: {
     *     // ... data to create a ConfiguracaoInatividade
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConfiguracaoInatividade we want to update
     *   }
     * })
     */
    upsert<T extends ConfiguracaoInatividadeUpsertArgs>(args: SelectSubset<T, ConfiguracaoInatividadeUpsertArgs<ExtArgs>>): Prisma__ConfiguracaoInatividadeClient<$Result.GetResult<Prisma.$ConfiguracaoInatividadePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ConfiguracaoInatividades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoInatividadeCountArgs} args - Arguments to filter ConfiguracaoInatividades to count.
     * @example
     * // Count the number of ConfiguracaoInatividades
     * const count = await prisma.configuracaoInatividade.count({
     *   where: {
     *     // ... the filter for the ConfiguracaoInatividades we want to count
     *   }
     * })
    **/
    count<T extends ConfiguracaoInatividadeCountArgs>(
      args?: Subset<T, ConfiguracaoInatividadeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfiguracaoInatividadeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConfiguracaoInatividade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoInatividadeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfiguracaoInatividadeAggregateArgs>(args: Subset<T, ConfiguracaoInatividadeAggregateArgs>): Prisma.PrismaPromise<GetConfiguracaoInatividadeAggregateType<T>>

    /**
     * Group by ConfiguracaoInatividade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracaoInatividadeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfiguracaoInatividadeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfiguracaoInatividadeGroupByArgs['orderBy'] }
        : { orderBy?: ConfiguracaoInatividadeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfiguracaoInatividadeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracaoInatividadeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConfiguracaoInatividade model
   */
  readonly fields: ConfiguracaoInatividadeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConfiguracaoInatividade.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfiguracaoInatividadeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    empresa<T extends EmpresaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmpresaDefaultArgs<ExtArgs>>): Prisma__EmpresaClient<$Result.GetResult<Prisma.$EmpresaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConfiguracaoInatividade model
   */
  interface ConfiguracaoInatividadeFieldRefs {
    readonly id: FieldRef<"ConfiguracaoInatividade", 'Int'>
    readonly empresaId: FieldRef<"ConfiguracaoInatividade", 'Int'>
    readonly diasSemCompra: FieldRef<"ConfiguracaoInatividade", 'Int'>
    readonly valorMinimoCompra: FieldRef<"ConfiguracaoInatividade", 'Decimal'>
    readonly considerarTipoCliente: FieldRef<"ConfiguracaoInatividade", 'Boolean'>
    readonly tiposClienteExcluidos: FieldRef<"ConfiguracaoInatividade", 'String'>
    readonly ativo: FieldRef<"ConfiguracaoInatividade", 'Boolean'>
    readonly createdAt: FieldRef<"ConfiguracaoInatividade", 'DateTime'>
    readonly updatedAt: FieldRef<"ConfiguracaoInatividade", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ConfiguracaoInatividade findUnique
   */
  export type ConfiguracaoInatividadeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoInatividade to fetch.
     */
    where: ConfiguracaoInatividadeWhereUniqueInput
  }

  /**
   * ConfiguracaoInatividade findUniqueOrThrow
   */
  export type ConfiguracaoInatividadeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoInatividade to fetch.
     */
    where: ConfiguracaoInatividadeWhereUniqueInput
  }

  /**
   * ConfiguracaoInatividade findFirst
   */
  export type ConfiguracaoInatividadeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoInatividade to fetch.
     */
    where?: ConfiguracaoInatividadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracaoInatividades to fetch.
     */
    orderBy?: ConfiguracaoInatividadeOrderByWithRelationInput | ConfiguracaoInatividadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfiguracaoInatividades.
     */
    cursor?: ConfiguracaoInatividadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracaoInatividades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracaoInatividades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfiguracaoInatividades.
     */
    distinct?: ConfiguracaoInatividadeScalarFieldEnum | ConfiguracaoInatividadeScalarFieldEnum[]
  }

  /**
   * ConfiguracaoInatividade findFirstOrThrow
   */
  export type ConfiguracaoInatividadeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoInatividade to fetch.
     */
    where?: ConfiguracaoInatividadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracaoInatividades to fetch.
     */
    orderBy?: ConfiguracaoInatividadeOrderByWithRelationInput | ConfiguracaoInatividadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfiguracaoInatividades.
     */
    cursor?: ConfiguracaoInatividadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracaoInatividades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracaoInatividades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfiguracaoInatividades.
     */
    distinct?: ConfiguracaoInatividadeScalarFieldEnum | ConfiguracaoInatividadeScalarFieldEnum[]
  }

  /**
   * ConfiguracaoInatividade findMany
   */
  export type ConfiguracaoInatividadeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * Filter, which ConfiguracaoInatividades to fetch.
     */
    where?: ConfiguracaoInatividadeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfiguracaoInatividades to fetch.
     */
    orderBy?: ConfiguracaoInatividadeOrderByWithRelationInput | ConfiguracaoInatividadeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConfiguracaoInatividades.
     */
    cursor?: ConfiguracaoInatividadeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfiguracaoInatividades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfiguracaoInatividades.
     */
    skip?: number
    distinct?: ConfiguracaoInatividadeScalarFieldEnum | ConfiguracaoInatividadeScalarFieldEnum[]
  }

  /**
   * ConfiguracaoInatividade create
   */
  export type ConfiguracaoInatividadeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * The data needed to create a ConfiguracaoInatividade.
     */
    data: XOR<ConfiguracaoInatividadeCreateInput, ConfiguracaoInatividadeUncheckedCreateInput>
  }

  /**
   * ConfiguracaoInatividade createMany
   */
  export type ConfiguracaoInatividadeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConfiguracaoInatividades.
     */
    data: ConfiguracaoInatividadeCreateManyInput | ConfiguracaoInatividadeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfiguracaoInatividade update
   */
  export type ConfiguracaoInatividadeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * The data needed to update a ConfiguracaoInatividade.
     */
    data: XOR<ConfiguracaoInatividadeUpdateInput, ConfiguracaoInatividadeUncheckedUpdateInput>
    /**
     * Choose, which ConfiguracaoInatividade to update.
     */
    where: ConfiguracaoInatividadeWhereUniqueInput
  }

  /**
   * ConfiguracaoInatividade updateMany
   */
  export type ConfiguracaoInatividadeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConfiguracaoInatividades.
     */
    data: XOR<ConfiguracaoInatividadeUpdateManyMutationInput, ConfiguracaoInatividadeUncheckedUpdateManyInput>
    /**
     * Filter which ConfiguracaoInatividades to update
     */
    where?: ConfiguracaoInatividadeWhereInput
    /**
     * Limit how many ConfiguracaoInatividades to update.
     */
    limit?: number
  }

  /**
   * ConfiguracaoInatividade upsert
   */
  export type ConfiguracaoInatividadeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * The filter to search for the ConfiguracaoInatividade to update in case it exists.
     */
    where: ConfiguracaoInatividadeWhereUniqueInput
    /**
     * In case the ConfiguracaoInatividade found by the `where` argument doesn't exist, create a new ConfiguracaoInatividade with this data.
     */
    create: XOR<ConfiguracaoInatividadeCreateInput, ConfiguracaoInatividadeUncheckedCreateInput>
    /**
     * In case the ConfiguracaoInatividade was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfiguracaoInatividadeUpdateInput, ConfiguracaoInatividadeUncheckedUpdateInput>
  }

  /**
   * ConfiguracaoInatividade delete
   */
  export type ConfiguracaoInatividadeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
    /**
     * Filter which ConfiguracaoInatividade to delete.
     */
    where: ConfiguracaoInatividadeWhereUniqueInput
  }

  /**
   * ConfiguracaoInatividade deleteMany
   */
  export type ConfiguracaoInatividadeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfiguracaoInatividades to delete
     */
    where?: ConfiguracaoInatividadeWhereInput
    /**
     * Limit how many ConfiguracaoInatividades to delete.
     */
    limit?: number
  }

  /**
   * ConfiguracaoInatividade without action
   */
  export type ConfiguracaoInatividadeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfiguracaoInatividade
     */
    select?: ConfiguracaoInatividadeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfiguracaoInatividade
     */
    omit?: ConfiguracaoInatividadeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfiguracaoInatividadeInclude<ExtArgs> | null
  }


  /**
   * Model RFVTipoNegocio
   */

  export type AggregateRFVTipoNegocio = {
    _count: RFVTipoNegocioCountAggregateOutputType | null
    _avg: RFVTipoNegocioAvgAggregateOutputType | null
    _sum: RFVTipoNegocioSumAggregateOutputType | null
    _min: RFVTipoNegocioMinAggregateOutputType | null
    _max: RFVTipoNegocioMaxAggregateOutputType | null
  }

  export type RFVTipoNegocioAvgAggregateOutputType = {
    id: number | null
    clienteId: number | null
    recencia: number | null
    frequencia: number | null
    valorMonetario: Decimal | null
    scoreRecencia: number | null
    scoreFrequencia: number | null
    scoreValor: number | null
    scoreRFV: Decimal | null
  }

  export type RFVTipoNegocioSumAggregateOutputType = {
    id: number | null
    clienteId: number | null
    recencia: number | null
    frequencia: number | null
    valorMonetario: Decimal | null
    scoreRecencia: number | null
    scoreFrequencia: number | null
    scoreValor: number | null
    scoreRFV: Decimal | null
  }

  export type RFVTipoNegocioMinAggregateOutputType = {
    id: number | null
    clienteId: number | null
    tipoNegocio: string | null
    dataAnalise: Date | null
    periodoAnalise: string | null
    recencia: number | null
    frequencia: number | null
    valorMonetario: Decimal | null
    scoreRecencia: number | null
    scoreFrequencia: number | null
    scoreValor: number | null
    scoreRFV: Decimal | null
    segmentoRFV: string | null
    rankingAutomatico: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RFVTipoNegocioMaxAggregateOutputType = {
    id: number | null
    clienteId: number | null
    tipoNegocio: string | null
    dataAnalise: Date | null
    periodoAnalise: string | null
    recencia: number | null
    frequencia: number | null
    valorMonetario: Decimal | null
    scoreRecencia: number | null
    scoreFrequencia: number | null
    scoreValor: number | null
    scoreRFV: Decimal | null
    segmentoRFV: string | null
    rankingAutomatico: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RFVTipoNegocioCountAggregateOutputType = {
    id: number
    clienteId: number
    tipoNegocio: number
    dataAnalise: number
    periodoAnalise: number
    recencia: number
    frequencia: number
    valorMonetario: number
    scoreRecencia: number
    scoreFrequencia: number
    scoreValor: number
    scoreRFV: number
    segmentoRFV: number
    rankingAutomatico: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RFVTipoNegocioAvgAggregateInputType = {
    id?: true
    clienteId?: true
    recencia?: true
    frequencia?: true
    valorMonetario?: true
    scoreRecencia?: true
    scoreFrequencia?: true
    scoreValor?: true
    scoreRFV?: true
  }

  export type RFVTipoNegocioSumAggregateInputType = {
    id?: true
    clienteId?: true
    recencia?: true
    frequencia?: true
    valorMonetario?: true
    scoreRecencia?: true
    scoreFrequencia?: true
    scoreValor?: true
    scoreRFV?: true
  }

  export type RFVTipoNegocioMinAggregateInputType = {
    id?: true
    clienteId?: true
    tipoNegocio?: true
    dataAnalise?: true
    periodoAnalise?: true
    recencia?: true
    frequencia?: true
    valorMonetario?: true
    scoreRecencia?: true
    scoreFrequencia?: true
    scoreValor?: true
    scoreRFV?: true
    segmentoRFV?: true
    rankingAutomatico?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RFVTipoNegocioMaxAggregateInputType = {
    id?: true
    clienteId?: true
    tipoNegocio?: true
    dataAnalise?: true
    periodoAnalise?: true
    recencia?: true
    frequencia?: true
    valorMonetario?: true
    scoreRecencia?: true
    scoreFrequencia?: true
    scoreValor?: true
    scoreRFV?: true
    segmentoRFV?: true
    rankingAutomatico?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RFVTipoNegocioCountAggregateInputType = {
    id?: true
    clienteId?: true
    tipoNegocio?: true
    dataAnalise?: true
    periodoAnalise?: true
    recencia?: true
    frequencia?: true
    valorMonetario?: true
    scoreRecencia?: true
    scoreFrequencia?: true
    scoreValor?: true
    scoreRFV?: true
    segmentoRFV?: true
    rankingAutomatico?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RFVTipoNegocioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RFVTipoNegocio to aggregate.
     */
    where?: RFVTipoNegocioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RFVTipoNegocios to fetch.
     */
    orderBy?: RFVTipoNegocioOrderByWithRelationInput | RFVTipoNegocioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RFVTipoNegocioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RFVTipoNegocios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RFVTipoNegocios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RFVTipoNegocios
    **/
    _count?: true | RFVTipoNegocioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RFVTipoNegocioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RFVTipoNegocioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RFVTipoNegocioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RFVTipoNegocioMaxAggregateInputType
  }

  export type GetRFVTipoNegocioAggregateType<T extends RFVTipoNegocioAggregateArgs> = {
        [P in keyof T & keyof AggregateRFVTipoNegocio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRFVTipoNegocio[P]>
      : GetScalarType<T[P], AggregateRFVTipoNegocio[P]>
  }




  export type RFVTipoNegocioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RFVTipoNegocioWhereInput
    orderBy?: RFVTipoNegocioOrderByWithAggregationInput | RFVTipoNegocioOrderByWithAggregationInput[]
    by: RFVTipoNegocioScalarFieldEnum[] | RFVTipoNegocioScalarFieldEnum
    having?: RFVTipoNegocioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RFVTipoNegocioCountAggregateInputType | true
    _avg?: RFVTipoNegocioAvgAggregateInputType
    _sum?: RFVTipoNegocioSumAggregateInputType
    _min?: RFVTipoNegocioMinAggregateInputType
    _max?: RFVTipoNegocioMaxAggregateInputType
  }

  export type RFVTipoNegocioGroupByOutputType = {
    id: number
    clienteId: number
    tipoNegocio: string
    dataAnalise: Date
    periodoAnalise: string
    recencia: number
    frequencia: number
    valorMonetario: Decimal
    scoreRecencia: number
    scoreFrequencia: number
    scoreValor: number
    scoreRFV: Decimal
    segmentoRFV: string
    rankingAutomatico: string | null
    createdAt: Date
    updatedAt: Date
    _count: RFVTipoNegocioCountAggregateOutputType | null
    _avg: RFVTipoNegocioAvgAggregateOutputType | null
    _sum: RFVTipoNegocioSumAggregateOutputType | null
    _min: RFVTipoNegocioMinAggregateOutputType | null
    _max: RFVTipoNegocioMaxAggregateOutputType | null
  }

  type GetRFVTipoNegocioGroupByPayload<T extends RFVTipoNegocioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RFVTipoNegocioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RFVTipoNegocioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RFVTipoNegocioGroupByOutputType[P]>
            : GetScalarType<T[P], RFVTipoNegocioGroupByOutputType[P]>
        }
      >
    >


  export type RFVTipoNegocioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clienteId?: boolean
    tipoNegocio?: boolean
    dataAnalise?: boolean
    periodoAnalise?: boolean
    recencia?: boolean
    frequencia?: boolean
    valorMonetario?: boolean
    scoreRecencia?: boolean
    scoreFrequencia?: boolean
    scoreValor?: boolean
    scoreRFV?: boolean
    segmentoRFV?: boolean
    rankingAutomatico?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rFVTipoNegocio"]>



  export type RFVTipoNegocioSelectScalar = {
    id?: boolean
    clienteId?: boolean
    tipoNegocio?: boolean
    dataAnalise?: boolean
    periodoAnalise?: boolean
    recencia?: boolean
    frequencia?: boolean
    valorMonetario?: boolean
    scoreRecencia?: boolean
    scoreFrequencia?: boolean
    scoreValor?: boolean
    scoreRFV?: boolean
    segmentoRFV?: boolean
    rankingAutomatico?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RFVTipoNegocioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clienteId" | "tipoNegocio" | "dataAnalise" | "periodoAnalise" | "recencia" | "frequencia" | "valorMonetario" | "scoreRecencia" | "scoreFrequencia" | "scoreValor" | "scoreRFV" | "segmentoRFV" | "rankingAutomatico" | "createdAt" | "updatedAt", ExtArgs["result"]["rFVTipoNegocio"]>
  export type RFVTipoNegocioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }

  export type $RFVTipoNegocioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RFVTipoNegocio"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clienteId: number
      tipoNegocio: string
      dataAnalise: Date
      periodoAnalise: string
      recencia: number
      frequencia: number
      valorMonetario: Prisma.Decimal
      scoreRecencia: number
      scoreFrequencia: number
      scoreValor: number
      scoreRFV: Prisma.Decimal
      segmentoRFV: string
      rankingAutomatico: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["rFVTipoNegocio"]>
    composites: {}
  }

  type RFVTipoNegocioGetPayload<S extends boolean | null | undefined | RFVTipoNegocioDefaultArgs> = $Result.GetResult<Prisma.$RFVTipoNegocioPayload, S>

  type RFVTipoNegocioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RFVTipoNegocioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RFVTipoNegocioCountAggregateInputType | true
    }

  export interface RFVTipoNegocioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RFVTipoNegocio'], meta: { name: 'RFVTipoNegocio' } }
    /**
     * Find zero or one RFVTipoNegocio that matches the filter.
     * @param {RFVTipoNegocioFindUniqueArgs} args - Arguments to find a RFVTipoNegocio
     * @example
     * // Get one RFVTipoNegocio
     * const rFVTipoNegocio = await prisma.rFVTipoNegocio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RFVTipoNegocioFindUniqueArgs>(args: SelectSubset<T, RFVTipoNegocioFindUniqueArgs<ExtArgs>>): Prisma__RFVTipoNegocioClient<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RFVTipoNegocio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RFVTipoNegocioFindUniqueOrThrowArgs} args - Arguments to find a RFVTipoNegocio
     * @example
     * // Get one RFVTipoNegocio
     * const rFVTipoNegocio = await prisma.rFVTipoNegocio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RFVTipoNegocioFindUniqueOrThrowArgs>(args: SelectSubset<T, RFVTipoNegocioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RFVTipoNegocioClient<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RFVTipoNegocio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RFVTipoNegocioFindFirstArgs} args - Arguments to find a RFVTipoNegocio
     * @example
     * // Get one RFVTipoNegocio
     * const rFVTipoNegocio = await prisma.rFVTipoNegocio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RFVTipoNegocioFindFirstArgs>(args?: SelectSubset<T, RFVTipoNegocioFindFirstArgs<ExtArgs>>): Prisma__RFVTipoNegocioClient<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RFVTipoNegocio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RFVTipoNegocioFindFirstOrThrowArgs} args - Arguments to find a RFVTipoNegocio
     * @example
     * // Get one RFVTipoNegocio
     * const rFVTipoNegocio = await prisma.rFVTipoNegocio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RFVTipoNegocioFindFirstOrThrowArgs>(args?: SelectSubset<T, RFVTipoNegocioFindFirstOrThrowArgs<ExtArgs>>): Prisma__RFVTipoNegocioClient<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RFVTipoNegocios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RFVTipoNegocioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RFVTipoNegocios
     * const rFVTipoNegocios = await prisma.rFVTipoNegocio.findMany()
     * 
     * // Get first 10 RFVTipoNegocios
     * const rFVTipoNegocios = await prisma.rFVTipoNegocio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rFVTipoNegocioWithIdOnly = await prisma.rFVTipoNegocio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RFVTipoNegocioFindManyArgs>(args?: SelectSubset<T, RFVTipoNegocioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RFVTipoNegocio.
     * @param {RFVTipoNegocioCreateArgs} args - Arguments to create a RFVTipoNegocio.
     * @example
     * // Create one RFVTipoNegocio
     * const RFVTipoNegocio = await prisma.rFVTipoNegocio.create({
     *   data: {
     *     // ... data to create a RFVTipoNegocio
     *   }
     * })
     * 
     */
    create<T extends RFVTipoNegocioCreateArgs>(args: SelectSubset<T, RFVTipoNegocioCreateArgs<ExtArgs>>): Prisma__RFVTipoNegocioClient<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RFVTipoNegocios.
     * @param {RFVTipoNegocioCreateManyArgs} args - Arguments to create many RFVTipoNegocios.
     * @example
     * // Create many RFVTipoNegocios
     * const rFVTipoNegocio = await prisma.rFVTipoNegocio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RFVTipoNegocioCreateManyArgs>(args?: SelectSubset<T, RFVTipoNegocioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RFVTipoNegocio.
     * @param {RFVTipoNegocioDeleteArgs} args - Arguments to delete one RFVTipoNegocio.
     * @example
     * // Delete one RFVTipoNegocio
     * const RFVTipoNegocio = await prisma.rFVTipoNegocio.delete({
     *   where: {
     *     // ... filter to delete one RFVTipoNegocio
     *   }
     * })
     * 
     */
    delete<T extends RFVTipoNegocioDeleteArgs>(args: SelectSubset<T, RFVTipoNegocioDeleteArgs<ExtArgs>>): Prisma__RFVTipoNegocioClient<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RFVTipoNegocio.
     * @param {RFVTipoNegocioUpdateArgs} args - Arguments to update one RFVTipoNegocio.
     * @example
     * // Update one RFVTipoNegocio
     * const rFVTipoNegocio = await prisma.rFVTipoNegocio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RFVTipoNegocioUpdateArgs>(args: SelectSubset<T, RFVTipoNegocioUpdateArgs<ExtArgs>>): Prisma__RFVTipoNegocioClient<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RFVTipoNegocios.
     * @param {RFVTipoNegocioDeleteManyArgs} args - Arguments to filter RFVTipoNegocios to delete.
     * @example
     * // Delete a few RFVTipoNegocios
     * const { count } = await prisma.rFVTipoNegocio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RFVTipoNegocioDeleteManyArgs>(args?: SelectSubset<T, RFVTipoNegocioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RFVTipoNegocios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RFVTipoNegocioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RFVTipoNegocios
     * const rFVTipoNegocio = await prisma.rFVTipoNegocio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RFVTipoNegocioUpdateManyArgs>(args: SelectSubset<T, RFVTipoNegocioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RFVTipoNegocio.
     * @param {RFVTipoNegocioUpsertArgs} args - Arguments to update or create a RFVTipoNegocio.
     * @example
     * // Update or create a RFVTipoNegocio
     * const rFVTipoNegocio = await prisma.rFVTipoNegocio.upsert({
     *   create: {
     *     // ... data to create a RFVTipoNegocio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RFVTipoNegocio we want to update
     *   }
     * })
     */
    upsert<T extends RFVTipoNegocioUpsertArgs>(args: SelectSubset<T, RFVTipoNegocioUpsertArgs<ExtArgs>>): Prisma__RFVTipoNegocioClient<$Result.GetResult<Prisma.$RFVTipoNegocioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RFVTipoNegocios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RFVTipoNegocioCountArgs} args - Arguments to filter RFVTipoNegocios to count.
     * @example
     * // Count the number of RFVTipoNegocios
     * const count = await prisma.rFVTipoNegocio.count({
     *   where: {
     *     // ... the filter for the RFVTipoNegocios we want to count
     *   }
     * })
    **/
    count<T extends RFVTipoNegocioCountArgs>(
      args?: Subset<T, RFVTipoNegocioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RFVTipoNegocioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RFVTipoNegocio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RFVTipoNegocioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RFVTipoNegocioAggregateArgs>(args: Subset<T, RFVTipoNegocioAggregateArgs>): Prisma.PrismaPromise<GetRFVTipoNegocioAggregateType<T>>

    /**
     * Group by RFVTipoNegocio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RFVTipoNegocioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RFVTipoNegocioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RFVTipoNegocioGroupByArgs['orderBy'] }
        : { orderBy?: RFVTipoNegocioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RFVTipoNegocioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRFVTipoNegocioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RFVTipoNegocio model
   */
  readonly fields: RFVTipoNegocioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RFVTipoNegocio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RFVTipoNegocioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RFVTipoNegocio model
   */
  interface RFVTipoNegocioFieldRefs {
    readonly id: FieldRef<"RFVTipoNegocio", 'Int'>
    readonly clienteId: FieldRef<"RFVTipoNegocio", 'Int'>
    readonly tipoNegocio: FieldRef<"RFVTipoNegocio", 'String'>
    readonly dataAnalise: FieldRef<"RFVTipoNegocio", 'DateTime'>
    readonly periodoAnalise: FieldRef<"RFVTipoNegocio", 'String'>
    readonly recencia: FieldRef<"RFVTipoNegocio", 'Int'>
    readonly frequencia: FieldRef<"RFVTipoNegocio", 'Int'>
    readonly valorMonetario: FieldRef<"RFVTipoNegocio", 'Decimal'>
    readonly scoreRecencia: FieldRef<"RFVTipoNegocio", 'Int'>
    readonly scoreFrequencia: FieldRef<"RFVTipoNegocio", 'Int'>
    readonly scoreValor: FieldRef<"RFVTipoNegocio", 'Int'>
    readonly scoreRFV: FieldRef<"RFVTipoNegocio", 'Decimal'>
    readonly segmentoRFV: FieldRef<"RFVTipoNegocio", 'String'>
    readonly rankingAutomatico: FieldRef<"RFVTipoNegocio", 'String'>
    readonly createdAt: FieldRef<"RFVTipoNegocio", 'DateTime'>
    readonly updatedAt: FieldRef<"RFVTipoNegocio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RFVTipoNegocio findUnique
   */
  export type RFVTipoNegocioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * Filter, which RFVTipoNegocio to fetch.
     */
    where: RFVTipoNegocioWhereUniqueInput
  }

  /**
   * RFVTipoNegocio findUniqueOrThrow
   */
  export type RFVTipoNegocioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * Filter, which RFVTipoNegocio to fetch.
     */
    where: RFVTipoNegocioWhereUniqueInput
  }

  /**
   * RFVTipoNegocio findFirst
   */
  export type RFVTipoNegocioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * Filter, which RFVTipoNegocio to fetch.
     */
    where?: RFVTipoNegocioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RFVTipoNegocios to fetch.
     */
    orderBy?: RFVTipoNegocioOrderByWithRelationInput | RFVTipoNegocioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RFVTipoNegocios.
     */
    cursor?: RFVTipoNegocioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RFVTipoNegocios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RFVTipoNegocios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RFVTipoNegocios.
     */
    distinct?: RFVTipoNegocioScalarFieldEnum | RFVTipoNegocioScalarFieldEnum[]
  }

  /**
   * RFVTipoNegocio findFirstOrThrow
   */
  export type RFVTipoNegocioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * Filter, which RFVTipoNegocio to fetch.
     */
    where?: RFVTipoNegocioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RFVTipoNegocios to fetch.
     */
    orderBy?: RFVTipoNegocioOrderByWithRelationInput | RFVTipoNegocioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RFVTipoNegocios.
     */
    cursor?: RFVTipoNegocioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RFVTipoNegocios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RFVTipoNegocios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RFVTipoNegocios.
     */
    distinct?: RFVTipoNegocioScalarFieldEnum | RFVTipoNegocioScalarFieldEnum[]
  }

  /**
   * RFVTipoNegocio findMany
   */
  export type RFVTipoNegocioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * Filter, which RFVTipoNegocios to fetch.
     */
    where?: RFVTipoNegocioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RFVTipoNegocios to fetch.
     */
    orderBy?: RFVTipoNegocioOrderByWithRelationInput | RFVTipoNegocioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RFVTipoNegocios.
     */
    cursor?: RFVTipoNegocioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RFVTipoNegocios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RFVTipoNegocios.
     */
    skip?: number
    distinct?: RFVTipoNegocioScalarFieldEnum | RFVTipoNegocioScalarFieldEnum[]
  }

  /**
   * RFVTipoNegocio create
   */
  export type RFVTipoNegocioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * The data needed to create a RFVTipoNegocio.
     */
    data: XOR<RFVTipoNegocioCreateInput, RFVTipoNegocioUncheckedCreateInput>
  }

  /**
   * RFVTipoNegocio createMany
   */
  export type RFVTipoNegocioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RFVTipoNegocios.
     */
    data: RFVTipoNegocioCreateManyInput | RFVTipoNegocioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RFVTipoNegocio update
   */
  export type RFVTipoNegocioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * The data needed to update a RFVTipoNegocio.
     */
    data: XOR<RFVTipoNegocioUpdateInput, RFVTipoNegocioUncheckedUpdateInput>
    /**
     * Choose, which RFVTipoNegocio to update.
     */
    where: RFVTipoNegocioWhereUniqueInput
  }

  /**
   * RFVTipoNegocio updateMany
   */
  export type RFVTipoNegocioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RFVTipoNegocios.
     */
    data: XOR<RFVTipoNegocioUpdateManyMutationInput, RFVTipoNegocioUncheckedUpdateManyInput>
    /**
     * Filter which RFVTipoNegocios to update
     */
    where?: RFVTipoNegocioWhereInput
    /**
     * Limit how many RFVTipoNegocios to update.
     */
    limit?: number
  }

  /**
   * RFVTipoNegocio upsert
   */
  export type RFVTipoNegocioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * The filter to search for the RFVTipoNegocio to update in case it exists.
     */
    where: RFVTipoNegocioWhereUniqueInput
    /**
     * In case the RFVTipoNegocio found by the `where` argument doesn't exist, create a new RFVTipoNegocio with this data.
     */
    create: XOR<RFVTipoNegocioCreateInput, RFVTipoNegocioUncheckedCreateInput>
    /**
     * In case the RFVTipoNegocio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RFVTipoNegocioUpdateInput, RFVTipoNegocioUncheckedUpdateInput>
  }

  /**
   * RFVTipoNegocio delete
   */
  export type RFVTipoNegocioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
    /**
     * Filter which RFVTipoNegocio to delete.
     */
    where: RFVTipoNegocioWhereUniqueInput
  }

  /**
   * RFVTipoNegocio deleteMany
   */
  export type RFVTipoNegocioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RFVTipoNegocios to delete
     */
    where?: RFVTipoNegocioWhereInput
    /**
     * Limit how many RFVTipoNegocios to delete.
     */
    limit?: number
  }

  /**
   * RFVTipoNegocio without action
   */
  export type RFVTipoNegocioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RFVTipoNegocio
     */
    select?: RFVTipoNegocioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RFVTipoNegocio
     */
    omit?: RFVTipoNegocioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RFVTipoNegocioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AssociacaoProdutoScalarFieldEnum: {
    id: 'id',
    produto_a_id: 'produto_a_id',
    produto_b_id: 'produto_b_id',
    suporte: 'suporte',
    confianca: 'confianca',
    lift: 'lift',
    a_nome: 'a_nome',
    b_nome: 'b_nome',
    a_tipo: 'a_tipo',
    b_tipo: 'b_tipo',
    vendas_produto_a: 'vendas_produto_a',
    vendas_produto_b: 'vendas_produto_b',
    atualizado_em: 'atualizado_em'
  };

  export type AssociacaoProdutoScalarFieldEnum = (typeof AssociacaoProdutoScalarFieldEnum)[keyof typeof AssociacaoProdutoScalarFieldEnum]


  export const EmpresaScalarFieldEnum: {
    id: 'id',
    razaoSocial: 'razaoSocial',
    nomeFantasia: 'nomeFantasia',
    cnpjMatriz: 'cnpjMatriz',
    inscricaoEstadual: 'inscricaoEstadual',
    cidade: 'cidade',
    estado: 'estado',
    logradouro: 'logradouro',
    numero: 'numero',
    bairro: 'bairro',
    cep: 'cep',
    telefone: 'telefone',
    email: 'email',
    ativo: 'ativo',
    dataCriacao: 'dataCriacao',
    dataAtualizacao: 'dataAtualizacao'
  };

  export type EmpresaScalarFieldEnum = (typeof EmpresaScalarFieldEnum)[keyof typeof EmpresaScalarFieldEnum]


  export const ClienteScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    cpfCnpj: 'cpfCnpj',
    cidade: 'cidade',
    estado: 'estado',
    logradouro: 'logradouro',
    numero: 'numero',
    bairro: 'bairro',
    cep: 'cep',
    telefone: 'telefone'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const FilialScalarFieldEnum: {
    id: 'id',
    empresaId: 'empresaId',
    nome: 'nome',
    cnpj: 'cnpj',
    cidade: 'cidade',
    estado: 'estado'
  };

  export type FilialScalarFieldEnum = (typeof FilialScalarFieldEnum)[keyof typeof FilialScalarFieldEnum]


  export const VendedorScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    cpf: 'cpf',
    filialId: 'filialId'
  };

  export type VendedorScalarFieldEnum = (typeof VendedorScalarFieldEnum)[keyof typeof VendedorScalarFieldEnum]


  export const ProdutoScalarFieldEnum: {
    id: 'id',
    descricao: 'descricao',
    tipo: 'tipo',
    preco: 'preco'
  };

  export type ProdutoScalarFieldEnum = (typeof ProdutoScalarFieldEnum)[keyof typeof ProdutoScalarFieldEnum]


  export const MaquinaEstoqueScalarFieldEnum: {
    Chassi: 'Chassi',
    produtoId: 'produtoId',
    filialId: 'filialId',
    Status: 'Status'
  };

  export type MaquinaEstoqueScalarFieldEnum = (typeof MaquinaEstoqueScalarFieldEnum)[keyof typeof MaquinaEstoqueScalarFieldEnum]


  export const NotasFiscalCabecalhoScalarFieldEnum: {
    id: 'id',
    numeroNota: 'numeroNota',
    dataEmissao: 'dataEmissao',
    valorTotal: 'valorTotal',
    filialId: 'filialId',
    clienteId: 'clienteId',
    vendedorId: 'vendedorId'
  };

  export type NotasFiscalCabecalhoScalarFieldEnum = (typeof NotasFiscalCabecalhoScalarFieldEnum)[keyof typeof NotasFiscalCabecalhoScalarFieldEnum]


  export const NotaFiscalItemScalarFieldEnum: {
    id: 'id',
    notaFiscalId: 'notaFiscalId',
    produtoId: 'produtoId',
    Quantidade: 'Quantidade',
    valorUnitario: 'valorUnitario',
    valorTotalItem: 'valorTotalItem',
    Chassi: 'Chassi'
  };

  export type NotaFiscalItemScalarFieldEnum = (typeof NotaFiscalItemScalarFieldEnum)[keyof typeof NotaFiscalItemScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    createdAt: 'createdAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RfvParameterSetScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    name: 'name',
    strategy: 'strategy',
    windowDays: 'windowDays',
    weights: 'weights',
    ruleRecency: 'ruleRecency',
    ruleFrequency: 'ruleFrequency',
    ruleValue: 'ruleValue',
    effectiveFrom: 'effectiveFrom',
    effectiveTo: 'effectiveTo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    calculationStrategy: 'calculationStrategy',
    classRanges: 'classRanges',
    conditionalRules: 'conditionalRules'
  };

  export type RfvParameterSetScalarFieldEnum = (typeof RfvParameterSetScalarFieldEnum)[keyof typeof RfvParameterSetScalarFieldEnum]


  export const RfvSegmentScalarFieldEnum: {
    id: 'id',
    parameterSetId: 'parameterSetId',
    name: 'name',
    rules: 'rules',
    priority: 'priority'
  };

  export type RfvSegmentScalarFieldEnum = (typeof RfvSegmentScalarFieldEnum)[keyof typeof RfvSegmentScalarFieldEnum]


  export const ReceitaPeriodoScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    valorTotal: 'valorTotal',
    quantidadeNotas: 'quantidadeNotas',
    quantidadeItens: 'quantidadeItens',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceitaPeriodoScalarFieldEnum = (typeof ReceitaPeriodoScalarFieldEnum)[keyof typeof ReceitaPeriodoScalarFieldEnum]


  export const ReceitaTipoProdutoScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    produtoId: 'produtoId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    tipoProduto: 'tipoProduto',
    valorTotal: 'valorTotal',
    quantidadeNotas: 'quantidadeNotas',
    quantidadeItens: 'quantidadeItens',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceitaTipoProdutoScalarFieldEnum = (typeof ReceitaTipoProdutoScalarFieldEnum)[keyof typeof ReceitaTipoProdutoScalarFieldEnum]


  export const ReceitaProdutoModeloScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    produtoId: 'produtoId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    valorTotal: 'valorTotal',
    quantidadeNotas: 'quantidadeNotas',
    quantidadeItens: 'quantidadeItens',
    ranking: 'ranking',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceitaProdutoModeloScalarFieldEnum = (typeof ReceitaProdutoModeloScalarFieldEnum)[keyof typeof ReceitaProdutoModeloScalarFieldEnum]


  export const CrescimentoVendasScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    tipoComparacao: 'tipoComparacao',
    valorAtual: 'valorAtual',
    valorAnterior: 'valorAnterior',
    crescimento: 'crescimento',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CrescimentoVendasScalarFieldEnum = (typeof CrescimentoVendasScalarFieldEnum)[keyof typeof CrescimentoVendasScalarFieldEnum]


  export const TicketMedioScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    ticketMedioNF: 'ticketMedioNF',
    ticketMedioItem: 'ticketMedioItem',
    quantidadeNotas: 'quantidadeNotas',
    quantidadeItens: 'quantidadeItens',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TicketMedioScalarFieldEnum = (typeof TicketMedioScalarFieldEnum)[keyof typeof TicketMedioScalarFieldEnum]


  export const ItensPorNFScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    mediaItens: 'mediaItens',
    p95Itens: 'p95Itens',
    quantidadeNotas: 'quantidadeNotas',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ItensPorNFScalarFieldEnum = (typeof ItensPorNFScalarFieldEnum)[keyof typeof ItensPorNFScalarFieldEnum]


  export const SazonalidadeScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    ano: 'ano',
    mes: 'mes',
    valorTotal: 'valorTotal',
    quantidadeNotas: 'quantidadeNotas',
    quantidadeItens: 'quantidadeItens',
    percentualAno: 'percentualAno',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SazonalidadeScalarFieldEnum = (typeof SazonalidadeScalarFieldEnum)[keyof typeof SazonalidadeScalarFieldEnum]


  export const ReceitaLocalizacaoScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    cidade: 'cidade',
    estado: 'estado',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    valorTotal: 'valorTotal',
    quantidadeNotas: 'quantidadeNotas',
    quantidadeItens: 'quantidadeItens',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceitaLocalizacaoScalarFieldEnum = (typeof ReceitaLocalizacaoScalarFieldEnum)[keyof typeof ReceitaLocalizacaoScalarFieldEnum]


  export const ReceitaVendedorScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    vendedorId: 'vendedorId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    valorTotal: 'valorTotal',
    quantidadeNotas: 'quantidadeNotas',
    quantidadeItens: 'quantidadeItens',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceitaVendedorScalarFieldEnum = (typeof ReceitaVendedorScalarFieldEnum)[keyof typeof ReceitaVendedorScalarFieldEnum]


  export const EstatisticasNotasFiscaisScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    quantidadeNotas: 'quantidadeNotas',
    quantidadeItens: 'quantidadeItens',
    mediaItensPorNota: 'mediaItensPorNota',
    valorTotalNotas: 'valorTotalNotas',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EstatisticasNotasFiscaisScalarFieldEnum = (typeof EstatisticasNotasFiscaisScalarFieldEnum)[keyof typeof EstatisticasNotasFiscaisScalarFieldEnum]


  export const ReceitaVendedorDetalhadaScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    vendedorId: 'vendedorId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    receitaTotal: 'receitaTotal',
    numeroNotas: 'numeroNotas',
    dataInicio: 'dataInicio',
    dataFim: 'dataFim',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceitaVendedorDetalhadaScalarFieldEnum = (typeof ReceitaVendedorDetalhadaScalarFieldEnum)[keyof typeof ReceitaVendedorDetalhadaScalarFieldEnum]


  export const TicketMedioVendedorScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    vendedorId: 'vendedorId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    ticketMedio: 'ticketMedio',
    quantidadeNotas: 'quantidadeNotas',
    valorTotal: 'valorTotal',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TicketMedioVendedorScalarFieldEnum = (typeof TicketMedioVendedorScalarFieldEnum)[keyof typeof TicketMedioVendedorScalarFieldEnum]


  export const MixVendedorScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    vendedorId: 'vendedorId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    receitaMaquinas: 'receitaMaquinas',
    receitaPecas: 'receitaPecas',
    receitaServicos: 'receitaServicos',
    percentualMaquinas: 'percentualMaquinas',
    percentualPecas: 'percentualPecas',
    percentualServicos: 'percentualServicos',
    quantidadeNotasMaquinas: 'quantidadeNotasMaquinas',
    quantidadeNotasPecas: 'quantidadeNotasPecas',
    quantidadeNotasServicos: 'quantidadeNotasServicos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MixVendedorScalarFieldEnum = (typeof MixVendedorScalarFieldEnum)[keyof typeof MixVendedorScalarFieldEnum]


  export const CoberturaCarteiraScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    vendedorId: 'vendedorId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    clientesUnicosAtendidos: 'clientesUnicosAtendidos',
    clientesAtivos: 'clientesAtivos',
    percentualCobertura: 'percentualCobertura',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CoberturaCarteiraScalarFieldEnum = (typeof CoberturaCarteiraScalarFieldEnum)[keyof typeof CoberturaCarteiraScalarFieldEnum]


  export const RankingVendedoresScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    vendedorId: 'vendedorId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    tipoRanking: 'tipoRanking',
    posicaoRanking: 'posicaoRanking',
    valorMetrica: 'valorMetrica',
    totalVendedores: 'totalVendedores',
    percentilRanking: 'percentilRanking',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RankingVendedoresScalarFieldEnum = (typeof RankingVendedoresScalarFieldEnum)[keyof typeof RankingVendedoresScalarFieldEnum]


  export const ReceitaFilialScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    receitaTotal: 'receitaTotal',
    numeroNotas: 'numeroNotas',
    ticketMedio: 'ticketMedio',
    numeroItens: 'numeroItens',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceitaFilialScalarFieldEnum = (typeof ReceitaFilialScalarFieldEnum)[keyof typeof ReceitaFilialScalarFieldEnum]


  export const MixFilialScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    receitaMaquinas: 'receitaMaquinas',
    receitaPecas: 'receitaPecas',
    receitaServicos: 'receitaServicos',
    percentualMaquinas: 'percentualMaquinas',
    percentualPecas: 'percentualPecas',
    percentualServicos: 'percentualServicos',
    quantidadeNotasMaquinas: 'quantidadeNotasMaquinas',
    quantidadeNotasPecas: 'quantidadeNotasPecas',
    quantidadeNotasServicos: 'quantidadeNotasServicos',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MixFilialScalarFieldEnum = (typeof MixFilialScalarFieldEnum)[keyof typeof MixFilialScalarFieldEnum]


  export const ParticipacaoReceitaFilialScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    receitaFilial: 'receitaFilial',
    receitaTotalEmpresa: 'receitaTotalEmpresa',
    percentualParticipacao: 'percentualParticipacao',
    posicaoRanking: 'posicaoRanking',
    totalFiliais: 'totalFiliais',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ParticipacaoReceitaFilialScalarFieldEnum = (typeof ParticipacaoReceitaFilialScalarFieldEnum)[keyof typeof ParticipacaoReceitaFilialScalarFieldEnum]


  export const ReceitaFilialRegiaoScalarFieldEnum: {
    id: 'id',
    filialId: 'filialId',
    data: 'data',
    tipoPeriodo: 'tipoPeriodo',
    regiaoCliente: 'regiaoCliente',
    estadoCliente: 'estadoCliente',
    cidadeCliente: 'cidadeCliente',
    receitaRegiao: 'receitaRegiao',
    numeroNotas: 'numeroNotas',
    numeroClientes: 'numeroClientes',
    percentualReceita: 'percentualReceita',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceitaFilialRegiaoScalarFieldEnum = (typeof ReceitaFilialRegiaoScalarFieldEnum)[keyof typeof ReceitaFilialRegiaoScalarFieldEnum]


  export const ConfiguracaoInatividadeScalarFieldEnum: {
    id: 'id',
    empresaId: 'empresaId',
    diasSemCompra: 'diasSemCompra',
    valorMinimoCompra: 'valorMinimoCompra',
    considerarTipoCliente: 'considerarTipoCliente',
    tiposClienteExcluidos: 'tiposClienteExcluidos',
    ativo: 'ativo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ConfiguracaoInatividadeScalarFieldEnum = (typeof ConfiguracaoInatividadeScalarFieldEnum)[keyof typeof ConfiguracaoInatividadeScalarFieldEnum]


  export const RFVTipoNegocioScalarFieldEnum: {
    id: 'id',
    clienteId: 'clienteId',
    tipoNegocio: 'tipoNegocio',
    dataAnalise: 'dataAnalise',
    periodoAnalise: 'periodoAnalise',
    recencia: 'recencia',
    frequencia: 'frequencia',
    valorMonetario: 'valorMonetario',
    scoreRecencia: 'scoreRecencia',
    scoreFrequencia: 'scoreFrequencia',
    scoreValor: 'scoreValor',
    scoreRFV: 'scoreRFV',
    segmentoRFV: 'segmentoRFV',
    rankingAutomatico: 'rankingAutomatico',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RFVTipoNegocioScalarFieldEnum = (typeof RFVTipoNegocioScalarFieldEnum)[keyof typeof RFVTipoNegocioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const AssociacaoProdutoOrderByRelevanceFieldEnum: {
    a_nome: 'a_nome',
    b_nome: 'b_nome',
    a_tipo: 'a_tipo',
    b_tipo: 'b_tipo'
  };

  export type AssociacaoProdutoOrderByRelevanceFieldEnum = (typeof AssociacaoProdutoOrderByRelevanceFieldEnum)[keyof typeof AssociacaoProdutoOrderByRelevanceFieldEnum]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const EmpresaOrderByRelevanceFieldEnum: {
    razaoSocial: 'razaoSocial',
    nomeFantasia: 'nomeFantasia',
    cnpjMatriz: 'cnpjMatriz',
    inscricaoEstadual: 'inscricaoEstadual',
    cidade: 'cidade',
    estado: 'estado',
    logradouro: 'logradouro',
    numero: 'numero',
    bairro: 'bairro',
    cep: 'cep',
    telefone: 'telefone',
    email: 'email'
  };

  export type EmpresaOrderByRelevanceFieldEnum = (typeof EmpresaOrderByRelevanceFieldEnum)[keyof typeof EmpresaOrderByRelevanceFieldEnum]


  export const ClienteOrderByRelevanceFieldEnum: {
    nome: 'nome',
    cpfCnpj: 'cpfCnpj',
    cidade: 'cidade',
    estado: 'estado',
    logradouro: 'logradouro',
    numero: 'numero',
    bairro: 'bairro',
    cep: 'cep',
    telefone: 'telefone'
  };

  export type ClienteOrderByRelevanceFieldEnum = (typeof ClienteOrderByRelevanceFieldEnum)[keyof typeof ClienteOrderByRelevanceFieldEnum]


  export const FilialOrderByRelevanceFieldEnum: {
    nome: 'nome',
    cnpj: 'cnpj',
    cidade: 'cidade',
    estado: 'estado'
  };

  export type FilialOrderByRelevanceFieldEnum = (typeof FilialOrderByRelevanceFieldEnum)[keyof typeof FilialOrderByRelevanceFieldEnum]


  export const VendedorOrderByRelevanceFieldEnum: {
    nome: 'nome',
    cpf: 'cpf'
  };

  export type VendedorOrderByRelevanceFieldEnum = (typeof VendedorOrderByRelevanceFieldEnum)[keyof typeof VendedorOrderByRelevanceFieldEnum]


  export const ProdutoOrderByRelevanceFieldEnum: {
    descricao: 'descricao',
    tipo: 'tipo'
  };

  export type ProdutoOrderByRelevanceFieldEnum = (typeof ProdutoOrderByRelevanceFieldEnum)[keyof typeof ProdutoOrderByRelevanceFieldEnum]


  export const MaquinaEstoqueOrderByRelevanceFieldEnum: {
    Chassi: 'Chassi',
    Status: 'Status'
  };

  export type MaquinaEstoqueOrderByRelevanceFieldEnum = (typeof MaquinaEstoqueOrderByRelevanceFieldEnum)[keyof typeof MaquinaEstoqueOrderByRelevanceFieldEnum]


  export const NotaFiscalItemOrderByRelevanceFieldEnum: {
    Chassi: 'Chassi'
  };

  export type NotaFiscalItemOrderByRelevanceFieldEnum = (typeof NotaFiscalItemOrderByRelevanceFieldEnum)[keyof typeof NotaFiscalItemOrderByRelevanceFieldEnum]


  export const UserOrderByRelevanceFieldEnum: {
    email: 'email',
    password: 'password'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const RfvParameterSetOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type RfvParameterSetOrderByRelevanceFieldEnum = (typeof RfvParameterSetOrderByRelevanceFieldEnum)[keyof typeof RfvParameterSetOrderByRelevanceFieldEnum]


  export const RfvSegmentOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type RfvSegmentOrderByRelevanceFieldEnum = (typeof RfvSegmentOrderByRelevanceFieldEnum)[keyof typeof RfvSegmentOrderByRelevanceFieldEnum]


  export const ReceitaPeriodoOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type ReceitaPeriodoOrderByRelevanceFieldEnum = (typeof ReceitaPeriodoOrderByRelevanceFieldEnum)[keyof typeof ReceitaPeriodoOrderByRelevanceFieldEnum]


  export const ReceitaTipoProdutoOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo',
    tipoProduto: 'tipoProduto'
  };

  export type ReceitaTipoProdutoOrderByRelevanceFieldEnum = (typeof ReceitaTipoProdutoOrderByRelevanceFieldEnum)[keyof typeof ReceitaTipoProdutoOrderByRelevanceFieldEnum]


  export const ReceitaProdutoModeloOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type ReceitaProdutoModeloOrderByRelevanceFieldEnum = (typeof ReceitaProdutoModeloOrderByRelevanceFieldEnum)[keyof typeof ReceitaProdutoModeloOrderByRelevanceFieldEnum]


  export const CrescimentoVendasOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo',
    tipoComparacao: 'tipoComparacao'
  };

  export type CrescimentoVendasOrderByRelevanceFieldEnum = (typeof CrescimentoVendasOrderByRelevanceFieldEnum)[keyof typeof CrescimentoVendasOrderByRelevanceFieldEnum]


  export const TicketMedioOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type TicketMedioOrderByRelevanceFieldEnum = (typeof TicketMedioOrderByRelevanceFieldEnum)[keyof typeof TicketMedioOrderByRelevanceFieldEnum]


  export const ItensPorNFOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type ItensPorNFOrderByRelevanceFieldEnum = (typeof ItensPorNFOrderByRelevanceFieldEnum)[keyof typeof ItensPorNFOrderByRelevanceFieldEnum]


  export const ReceitaLocalizacaoOrderByRelevanceFieldEnum: {
    cidade: 'cidade',
    estado: 'estado',
    tipoPeriodo: 'tipoPeriodo'
  };

  export type ReceitaLocalizacaoOrderByRelevanceFieldEnum = (typeof ReceitaLocalizacaoOrderByRelevanceFieldEnum)[keyof typeof ReceitaLocalizacaoOrderByRelevanceFieldEnum]


  export const ReceitaVendedorOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type ReceitaVendedorOrderByRelevanceFieldEnum = (typeof ReceitaVendedorOrderByRelevanceFieldEnum)[keyof typeof ReceitaVendedorOrderByRelevanceFieldEnum]


  export const EstatisticasNotasFiscaisOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type EstatisticasNotasFiscaisOrderByRelevanceFieldEnum = (typeof EstatisticasNotasFiscaisOrderByRelevanceFieldEnum)[keyof typeof EstatisticasNotasFiscaisOrderByRelevanceFieldEnum]


  export const ReceitaVendedorDetalhadaOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type ReceitaVendedorDetalhadaOrderByRelevanceFieldEnum = (typeof ReceitaVendedorDetalhadaOrderByRelevanceFieldEnum)[keyof typeof ReceitaVendedorDetalhadaOrderByRelevanceFieldEnum]


  export const TicketMedioVendedorOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type TicketMedioVendedorOrderByRelevanceFieldEnum = (typeof TicketMedioVendedorOrderByRelevanceFieldEnum)[keyof typeof TicketMedioVendedorOrderByRelevanceFieldEnum]


  export const MixVendedorOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type MixVendedorOrderByRelevanceFieldEnum = (typeof MixVendedorOrderByRelevanceFieldEnum)[keyof typeof MixVendedorOrderByRelevanceFieldEnum]


  export const CoberturaCarteiraOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type CoberturaCarteiraOrderByRelevanceFieldEnum = (typeof CoberturaCarteiraOrderByRelevanceFieldEnum)[keyof typeof CoberturaCarteiraOrderByRelevanceFieldEnum]


  export const RankingVendedoresOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo',
    tipoRanking: 'tipoRanking'
  };

  export type RankingVendedoresOrderByRelevanceFieldEnum = (typeof RankingVendedoresOrderByRelevanceFieldEnum)[keyof typeof RankingVendedoresOrderByRelevanceFieldEnum]


  export const ReceitaFilialOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type ReceitaFilialOrderByRelevanceFieldEnum = (typeof ReceitaFilialOrderByRelevanceFieldEnum)[keyof typeof ReceitaFilialOrderByRelevanceFieldEnum]


  export const MixFilialOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type MixFilialOrderByRelevanceFieldEnum = (typeof MixFilialOrderByRelevanceFieldEnum)[keyof typeof MixFilialOrderByRelevanceFieldEnum]


  export const ParticipacaoReceitaFilialOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo'
  };

  export type ParticipacaoReceitaFilialOrderByRelevanceFieldEnum = (typeof ParticipacaoReceitaFilialOrderByRelevanceFieldEnum)[keyof typeof ParticipacaoReceitaFilialOrderByRelevanceFieldEnum]


  export const ReceitaFilialRegiaoOrderByRelevanceFieldEnum: {
    tipoPeriodo: 'tipoPeriodo',
    regiaoCliente: 'regiaoCliente',
    estadoCliente: 'estadoCliente',
    cidadeCliente: 'cidadeCliente'
  };

  export type ReceitaFilialRegiaoOrderByRelevanceFieldEnum = (typeof ReceitaFilialRegiaoOrderByRelevanceFieldEnum)[keyof typeof ReceitaFilialRegiaoOrderByRelevanceFieldEnum]


  export const ConfiguracaoInatividadeOrderByRelevanceFieldEnum: {
    tiposClienteExcluidos: 'tiposClienteExcluidos'
  };

  export type ConfiguracaoInatividadeOrderByRelevanceFieldEnum = (typeof ConfiguracaoInatividadeOrderByRelevanceFieldEnum)[keyof typeof ConfiguracaoInatividadeOrderByRelevanceFieldEnum]


  export const RFVTipoNegocioOrderByRelevanceFieldEnum: {
    tipoNegocio: 'tipoNegocio',
    periodoAnalise: 'periodoAnalise',
    segmentoRFV: 'segmentoRFV',
    rankingAutomatico: 'rankingAutomatico'
  };

  export type RFVTipoNegocioOrderByRelevanceFieldEnum = (typeof RFVTipoNegocioOrderByRelevanceFieldEnum)[keyof typeof RFVTipoNegocioOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'RfvStrategy'
   */
  export type EnumRfvStrategyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RfvStrategy'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'CalculationStrategy'
   */
  export type EnumCalculationStrategyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CalculationStrategy'>
    
  /**
   * Deep Input Types
   */


  export type AssociacaoProdutoWhereInput = {
    AND?: AssociacaoProdutoWhereInput | AssociacaoProdutoWhereInput[]
    OR?: AssociacaoProdutoWhereInput[]
    NOT?: AssociacaoProdutoWhereInput | AssociacaoProdutoWhereInput[]
    id?: BigIntFilter<"AssociacaoProduto"> | bigint | number
    produto_a_id?: IntFilter<"AssociacaoProduto"> | number
    produto_b_id?: IntFilter<"AssociacaoProduto"> | number
    suporte?: IntFilter<"AssociacaoProduto"> | number
    confianca?: FloatFilter<"AssociacaoProduto"> | number
    lift?: FloatFilter<"AssociacaoProduto"> | number
    a_nome?: StringFilter<"AssociacaoProduto"> | string
    b_nome?: StringFilter<"AssociacaoProduto"> | string
    a_tipo?: StringFilter<"AssociacaoProduto"> | string
    b_tipo?: StringFilter<"AssociacaoProduto"> | string
    vendas_produto_a?: IntFilter<"AssociacaoProduto"> | number
    vendas_produto_b?: IntFilter<"AssociacaoProduto"> | number
    atualizado_em?: DateTimeFilter<"AssociacaoProduto"> | Date | string
    produtoA?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
    produtoB?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
  }

  export type AssociacaoProdutoOrderByWithRelationInput = {
    id?: SortOrder
    produto_a_id?: SortOrder
    produto_b_id?: SortOrder
    suporte?: SortOrder
    confianca?: SortOrder
    lift?: SortOrder
    a_nome?: SortOrder
    b_nome?: SortOrder
    a_tipo?: SortOrder
    b_tipo?: SortOrder
    vendas_produto_a?: SortOrder
    vendas_produto_b?: SortOrder
    atualizado_em?: SortOrder
    produtoA?: ProdutoOrderByWithRelationInput
    produtoB?: ProdutoOrderByWithRelationInput
    _relevance?: AssociacaoProdutoOrderByRelevanceInput
  }

  export type AssociacaoProdutoWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: AssociacaoProdutoWhereInput | AssociacaoProdutoWhereInput[]
    OR?: AssociacaoProdutoWhereInput[]
    NOT?: AssociacaoProdutoWhereInput | AssociacaoProdutoWhereInput[]
    produto_a_id?: IntFilter<"AssociacaoProduto"> | number
    produto_b_id?: IntFilter<"AssociacaoProduto"> | number
    suporte?: IntFilter<"AssociacaoProduto"> | number
    confianca?: FloatFilter<"AssociacaoProduto"> | number
    lift?: FloatFilter<"AssociacaoProduto"> | number
    a_nome?: StringFilter<"AssociacaoProduto"> | string
    b_nome?: StringFilter<"AssociacaoProduto"> | string
    a_tipo?: StringFilter<"AssociacaoProduto"> | string
    b_tipo?: StringFilter<"AssociacaoProduto"> | string
    vendas_produto_a?: IntFilter<"AssociacaoProduto"> | number
    vendas_produto_b?: IntFilter<"AssociacaoProduto"> | number
    atualizado_em?: DateTimeFilter<"AssociacaoProduto"> | Date | string
    produtoA?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
    produtoB?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
  }, "id">

  export type AssociacaoProdutoOrderByWithAggregationInput = {
    id?: SortOrder
    produto_a_id?: SortOrder
    produto_b_id?: SortOrder
    suporte?: SortOrder
    confianca?: SortOrder
    lift?: SortOrder
    a_nome?: SortOrder
    b_nome?: SortOrder
    a_tipo?: SortOrder
    b_tipo?: SortOrder
    vendas_produto_a?: SortOrder
    vendas_produto_b?: SortOrder
    atualizado_em?: SortOrder
    _count?: AssociacaoProdutoCountOrderByAggregateInput
    _avg?: AssociacaoProdutoAvgOrderByAggregateInput
    _max?: AssociacaoProdutoMaxOrderByAggregateInput
    _min?: AssociacaoProdutoMinOrderByAggregateInput
    _sum?: AssociacaoProdutoSumOrderByAggregateInput
  }

  export type AssociacaoProdutoScalarWhereWithAggregatesInput = {
    AND?: AssociacaoProdutoScalarWhereWithAggregatesInput | AssociacaoProdutoScalarWhereWithAggregatesInput[]
    OR?: AssociacaoProdutoScalarWhereWithAggregatesInput[]
    NOT?: AssociacaoProdutoScalarWhereWithAggregatesInput | AssociacaoProdutoScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"AssociacaoProduto"> | bigint | number
    produto_a_id?: IntWithAggregatesFilter<"AssociacaoProduto"> | number
    produto_b_id?: IntWithAggregatesFilter<"AssociacaoProduto"> | number
    suporte?: IntWithAggregatesFilter<"AssociacaoProduto"> | number
    confianca?: FloatWithAggregatesFilter<"AssociacaoProduto"> | number
    lift?: FloatWithAggregatesFilter<"AssociacaoProduto"> | number
    a_nome?: StringWithAggregatesFilter<"AssociacaoProduto"> | string
    b_nome?: StringWithAggregatesFilter<"AssociacaoProduto"> | string
    a_tipo?: StringWithAggregatesFilter<"AssociacaoProduto"> | string
    b_tipo?: StringWithAggregatesFilter<"AssociacaoProduto"> | string
    vendas_produto_a?: IntWithAggregatesFilter<"AssociacaoProduto"> | number
    vendas_produto_b?: IntWithAggregatesFilter<"AssociacaoProduto"> | number
    atualizado_em?: DateTimeWithAggregatesFilter<"AssociacaoProduto"> | Date | string
  }

  export type EmpresaWhereInput = {
    AND?: EmpresaWhereInput | EmpresaWhereInput[]
    OR?: EmpresaWhereInput[]
    NOT?: EmpresaWhereInput | EmpresaWhereInput[]
    id?: IntFilter<"Empresa"> | number
    razaoSocial?: StringFilter<"Empresa"> | string
    nomeFantasia?: StringNullableFilter<"Empresa"> | string | null
    cnpjMatriz?: StringFilter<"Empresa"> | string
    inscricaoEstadual?: StringNullableFilter<"Empresa"> | string | null
    cidade?: StringNullableFilter<"Empresa"> | string | null
    estado?: StringNullableFilter<"Empresa"> | string | null
    logradouro?: StringNullableFilter<"Empresa"> | string | null
    numero?: StringNullableFilter<"Empresa"> | string | null
    bairro?: StringNullableFilter<"Empresa"> | string | null
    cep?: StringNullableFilter<"Empresa"> | string | null
    telefone?: StringNullableFilter<"Empresa"> | string | null
    email?: StringNullableFilter<"Empresa"> | string | null
    ativo?: BoolFilter<"Empresa"> | boolean
    dataCriacao?: DateTimeFilter<"Empresa"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Empresa"> | Date | string
    filiais?: FilialListRelationFilter
    configuracaoInatividade?: XOR<ConfiguracaoInatividadeNullableScalarRelationFilter, ConfiguracaoInatividadeWhereInput> | null
  }

  export type EmpresaOrderByWithRelationInput = {
    id?: SortOrder
    razaoSocial?: SortOrder
    nomeFantasia?: SortOrderInput | SortOrder
    cnpjMatriz?: SortOrder
    inscricaoEstadual?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    ativo?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    filiais?: FilialOrderByRelationAggregateInput
    configuracaoInatividade?: ConfiguracaoInatividadeOrderByWithRelationInput
    _relevance?: EmpresaOrderByRelevanceInput
  }

  export type EmpresaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cnpjMatriz?: string
    email?: string
    AND?: EmpresaWhereInput | EmpresaWhereInput[]
    OR?: EmpresaWhereInput[]
    NOT?: EmpresaWhereInput | EmpresaWhereInput[]
    razaoSocial?: StringFilter<"Empresa"> | string
    nomeFantasia?: StringNullableFilter<"Empresa"> | string | null
    inscricaoEstadual?: StringNullableFilter<"Empresa"> | string | null
    cidade?: StringNullableFilter<"Empresa"> | string | null
    estado?: StringNullableFilter<"Empresa"> | string | null
    logradouro?: StringNullableFilter<"Empresa"> | string | null
    numero?: StringNullableFilter<"Empresa"> | string | null
    bairro?: StringNullableFilter<"Empresa"> | string | null
    cep?: StringNullableFilter<"Empresa"> | string | null
    telefone?: StringNullableFilter<"Empresa"> | string | null
    ativo?: BoolFilter<"Empresa"> | boolean
    dataCriacao?: DateTimeFilter<"Empresa"> | Date | string
    dataAtualizacao?: DateTimeFilter<"Empresa"> | Date | string
    filiais?: FilialListRelationFilter
    configuracaoInatividade?: XOR<ConfiguracaoInatividadeNullableScalarRelationFilter, ConfiguracaoInatividadeWhereInput> | null
  }, "id" | "cnpjMatriz" | "email">

  export type EmpresaOrderByWithAggregationInput = {
    id?: SortOrder
    razaoSocial?: SortOrder
    nomeFantasia?: SortOrderInput | SortOrder
    cnpjMatriz?: SortOrder
    inscricaoEstadual?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    ativo?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
    _count?: EmpresaCountOrderByAggregateInput
    _avg?: EmpresaAvgOrderByAggregateInput
    _max?: EmpresaMaxOrderByAggregateInput
    _min?: EmpresaMinOrderByAggregateInput
    _sum?: EmpresaSumOrderByAggregateInput
  }

  export type EmpresaScalarWhereWithAggregatesInput = {
    AND?: EmpresaScalarWhereWithAggregatesInput | EmpresaScalarWhereWithAggregatesInput[]
    OR?: EmpresaScalarWhereWithAggregatesInput[]
    NOT?: EmpresaScalarWhereWithAggregatesInput | EmpresaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Empresa"> | number
    razaoSocial?: StringWithAggregatesFilter<"Empresa"> | string
    nomeFantasia?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    cnpjMatriz?: StringWithAggregatesFilter<"Empresa"> | string
    inscricaoEstadual?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    cidade?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    estado?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    logradouro?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    numero?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    cep?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    telefone?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    email?: StringNullableWithAggregatesFilter<"Empresa"> | string | null
    ativo?: BoolWithAggregatesFilter<"Empresa"> | boolean
    dataCriacao?: DateTimeWithAggregatesFilter<"Empresa"> | Date | string
    dataAtualizacao?: DateTimeWithAggregatesFilter<"Empresa"> | Date | string
  }

  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    id?: IntFilter<"Cliente"> | number
    nome?: StringFilter<"Cliente"> | string
    cpfCnpj?: StringFilter<"Cliente"> | string
    cidade?: StringNullableFilter<"Cliente"> | string | null
    estado?: StringNullableFilter<"Cliente"> | string | null
    logradouro?: StringNullableFilter<"Cliente"> | string | null
    numero?: StringNullableFilter<"Cliente"> | string | null
    bairro?: StringNullableFilter<"Cliente"> | string | null
    cep?: StringNullableFilter<"Cliente"> | string | null
    telefone?: StringNullableFilter<"Cliente"> | string | null
    notasFiscais?: NotasFiscalCabecalhoListRelationFilter
    rfvTipoNegocio?: RFVTipoNegocioListRelationFilter
  }

  export type ClienteOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    cpfCnpj?: SortOrder
    cidade?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    notasFiscais?: NotasFiscalCabecalhoOrderByRelationAggregateInput
    rfvTipoNegocio?: RFVTipoNegocioOrderByRelationAggregateInput
    _relevance?: ClienteOrderByRelevanceInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cpfCnpj?: string
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    nome?: StringFilter<"Cliente"> | string
    cidade?: StringNullableFilter<"Cliente"> | string | null
    estado?: StringNullableFilter<"Cliente"> | string | null
    logradouro?: StringNullableFilter<"Cliente"> | string | null
    numero?: StringNullableFilter<"Cliente"> | string | null
    bairro?: StringNullableFilter<"Cliente"> | string | null
    cep?: StringNullableFilter<"Cliente"> | string | null
    telefone?: StringNullableFilter<"Cliente"> | string | null
    notasFiscais?: NotasFiscalCabecalhoListRelationFilter
    rfvTipoNegocio?: RFVTipoNegocioListRelationFilter
  }, "id" | "cpfCnpj">

  export type ClienteOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    cpfCnpj?: SortOrder
    cidade?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _avg?: ClienteAvgOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
    _sum?: ClienteSumOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cliente"> | number
    nome?: StringWithAggregatesFilter<"Cliente"> | string
    cpfCnpj?: StringWithAggregatesFilter<"Cliente"> | string
    cidade?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    estado?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    logradouro?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    numero?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    cep?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    telefone?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
  }

  export type FilialWhereInput = {
    AND?: FilialWhereInput | FilialWhereInput[]
    OR?: FilialWhereInput[]
    NOT?: FilialWhereInput | FilialWhereInput[]
    id?: IntFilter<"Filial"> | number
    empresaId?: IntFilter<"Filial"> | number
    nome?: StringFilter<"Filial"> | string
    cnpj?: StringFilter<"Filial"> | string
    cidade?: StringNullableFilter<"Filial"> | string | null
    estado?: StringNullableFilter<"Filial"> | string | null
    empresa?: XOR<EmpresaScalarRelationFilter, EmpresaWhereInput>
    notasFiscais?: NotasFiscalCabecalhoListRelationFilter
    vendedores?: VendedorListRelationFilter
    rfvParameterSets?: RfvParameterSetListRelationFilter
    maquinasEstoque?: MaquinaEstoqueListRelationFilter
    receitasPeriodo?: ReceitaPeriodoListRelationFilter
    receitasTipoProduto?: ReceitaTipoProdutoListRelationFilter
    receitasProdutoModelo?: ReceitaProdutoModeloListRelationFilter
    crescimentoVendas?: CrescimentoVendasListRelationFilter
    ticketsMedios?: TicketMedioListRelationFilter
    itensPorNF?: ItensPorNFListRelationFilter
    sazonalidades?: SazonalidadeListRelationFilter
    receitasLocalizacao?: ReceitaLocalizacaoListRelationFilter
    receitasVendedor?: ReceitaVendedorListRelationFilter
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisListRelationFilter
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaListRelationFilter
    ticketsMediosVendedor?: TicketMedioVendedorListRelationFilter
    mixVendedores?: MixVendedorListRelationFilter
    coberturaCarteiras?: CoberturaCarteiraListRelationFilter
    rankingVendedores?: RankingVendedoresListRelationFilter
    receitasFilial?: ReceitaFilialListRelationFilter
    mixFiliais?: MixFilialListRelationFilter
    participacaoReceita?: ParticipacaoReceitaFilialListRelationFilter
    receitasRegioes?: ReceitaFilialRegiaoListRelationFilter
  }

  export type FilialOrderByWithRelationInput = {
    id?: SortOrder
    empresaId?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    cidade?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    empresa?: EmpresaOrderByWithRelationInput
    notasFiscais?: NotasFiscalCabecalhoOrderByRelationAggregateInput
    vendedores?: VendedorOrderByRelationAggregateInput
    rfvParameterSets?: RfvParameterSetOrderByRelationAggregateInput
    maquinasEstoque?: MaquinaEstoqueOrderByRelationAggregateInput
    receitasPeriodo?: ReceitaPeriodoOrderByRelationAggregateInput
    receitasTipoProduto?: ReceitaTipoProdutoOrderByRelationAggregateInput
    receitasProdutoModelo?: ReceitaProdutoModeloOrderByRelationAggregateInput
    crescimentoVendas?: CrescimentoVendasOrderByRelationAggregateInput
    ticketsMedios?: TicketMedioOrderByRelationAggregateInput
    itensPorNF?: ItensPorNFOrderByRelationAggregateInput
    sazonalidades?: SazonalidadeOrderByRelationAggregateInput
    receitasLocalizacao?: ReceitaLocalizacaoOrderByRelationAggregateInput
    receitasVendedor?: ReceitaVendedorOrderByRelationAggregateInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisOrderByRelationAggregateInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaOrderByRelationAggregateInput
    ticketsMediosVendedor?: TicketMedioVendedorOrderByRelationAggregateInput
    mixVendedores?: MixVendedorOrderByRelationAggregateInput
    coberturaCarteiras?: CoberturaCarteiraOrderByRelationAggregateInput
    rankingVendedores?: RankingVendedoresOrderByRelationAggregateInput
    receitasFilial?: ReceitaFilialOrderByRelationAggregateInput
    mixFiliais?: MixFilialOrderByRelationAggregateInput
    participacaoReceita?: ParticipacaoReceitaFilialOrderByRelationAggregateInput
    receitasRegioes?: ReceitaFilialRegiaoOrderByRelationAggregateInput
    _relevance?: FilialOrderByRelevanceInput
  }

  export type FilialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cnpj?: string
    AND?: FilialWhereInput | FilialWhereInput[]
    OR?: FilialWhereInput[]
    NOT?: FilialWhereInput | FilialWhereInput[]
    empresaId?: IntFilter<"Filial"> | number
    nome?: StringFilter<"Filial"> | string
    cidade?: StringNullableFilter<"Filial"> | string | null
    estado?: StringNullableFilter<"Filial"> | string | null
    empresa?: XOR<EmpresaScalarRelationFilter, EmpresaWhereInput>
    notasFiscais?: NotasFiscalCabecalhoListRelationFilter
    vendedores?: VendedorListRelationFilter
    rfvParameterSets?: RfvParameterSetListRelationFilter
    maquinasEstoque?: MaquinaEstoqueListRelationFilter
    receitasPeriodo?: ReceitaPeriodoListRelationFilter
    receitasTipoProduto?: ReceitaTipoProdutoListRelationFilter
    receitasProdutoModelo?: ReceitaProdutoModeloListRelationFilter
    crescimentoVendas?: CrescimentoVendasListRelationFilter
    ticketsMedios?: TicketMedioListRelationFilter
    itensPorNF?: ItensPorNFListRelationFilter
    sazonalidades?: SazonalidadeListRelationFilter
    receitasLocalizacao?: ReceitaLocalizacaoListRelationFilter
    receitasVendedor?: ReceitaVendedorListRelationFilter
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisListRelationFilter
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaListRelationFilter
    ticketsMediosVendedor?: TicketMedioVendedorListRelationFilter
    mixVendedores?: MixVendedorListRelationFilter
    coberturaCarteiras?: CoberturaCarteiraListRelationFilter
    rankingVendedores?: RankingVendedoresListRelationFilter
    receitasFilial?: ReceitaFilialListRelationFilter
    mixFiliais?: MixFilialListRelationFilter
    participacaoReceita?: ParticipacaoReceitaFilialListRelationFilter
    receitasRegioes?: ReceitaFilialRegiaoListRelationFilter
  }, "id" | "cnpj">

  export type FilialOrderByWithAggregationInput = {
    id?: SortOrder
    empresaId?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    cidade?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    _count?: FilialCountOrderByAggregateInput
    _avg?: FilialAvgOrderByAggregateInput
    _max?: FilialMaxOrderByAggregateInput
    _min?: FilialMinOrderByAggregateInput
    _sum?: FilialSumOrderByAggregateInput
  }

  export type FilialScalarWhereWithAggregatesInput = {
    AND?: FilialScalarWhereWithAggregatesInput | FilialScalarWhereWithAggregatesInput[]
    OR?: FilialScalarWhereWithAggregatesInput[]
    NOT?: FilialScalarWhereWithAggregatesInput | FilialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Filial"> | number
    empresaId?: IntWithAggregatesFilter<"Filial"> | number
    nome?: StringWithAggregatesFilter<"Filial"> | string
    cnpj?: StringWithAggregatesFilter<"Filial"> | string
    cidade?: StringNullableWithAggregatesFilter<"Filial"> | string | null
    estado?: StringNullableWithAggregatesFilter<"Filial"> | string | null
  }

  export type VendedorWhereInput = {
    AND?: VendedorWhereInput | VendedorWhereInput[]
    OR?: VendedorWhereInput[]
    NOT?: VendedorWhereInput | VendedorWhereInput[]
    id?: IntFilter<"Vendedor"> | number
    nome?: StringFilter<"Vendedor"> | string
    cpf?: StringFilter<"Vendedor"> | string
    filialId?: IntNullableFilter<"Vendedor"> | number | null
    notasFiscais?: NotasFiscalCabecalhoListRelationFilter
    receitasVendedor?: ReceitaVendedorListRelationFilter
    receitasDetalhadas?: ReceitaVendedorDetalhadaListRelationFilter
    ticketsMedios?: TicketMedioVendedorListRelationFilter
    mixVendas?: MixVendedorListRelationFilter
    coberturaCarteira?: CoberturaCarteiraListRelationFilter
    rankings?: RankingVendedoresListRelationFilter
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }

  export type VendedorOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    filialId?: SortOrderInput | SortOrder
    notasFiscais?: NotasFiscalCabecalhoOrderByRelationAggregateInput
    receitasVendedor?: ReceitaVendedorOrderByRelationAggregateInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaOrderByRelationAggregateInput
    ticketsMedios?: TicketMedioVendedorOrderByRelationAggregateInput
    mixVendas?: MixVendedorOrderByRelationAggregateInput
    coberturaCarteira?: CoberturaCarteiraOrderByRelationAggregateInput
    rankings?: RankingVendedoresOrderByRelationAggregateInput
    filial?: FilialOrderByWithRelationInput
    _relevance?: VendedorOrderByRelevanceInput
  }

  export type VendedorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cpf?: string
    AND?: VendedorWhereInput | VendedorWhereInput[]
    OR?: VendedorWhereInput[]
    NOT?: VendedorWhereInput | VendedorWhereInput[]
    nome?: StringFilter<"Vendedor"> | string
    filialId?: IntNullableFilter<"Vendedor"> | number | null
    notasFiscais?: NotasFiscalCabecalhoListRelationFilter
    receitasVendedor?: ReceitaVendedorListRelationFilter
    receitasDetalhadas?: ReceitaVendedorDetalhadaListRelationFilter
    ticketsMedios?: TicketMedioVendedorListRelationFilter
    mixVendas?: MixVendedorListRelationFilter
    coberturaCarteira?: CoberturaCarteiraListRelationFilter
    rankings?: RankingVendedoresListRelationFilter
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }, "id" | "cpf">

  export type VendedorOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    filialId?: SortOrderInput | SortOrder
    _count?: VendedorCountOrderByAggregateInput
    _avg?: VendedorAvgOrderByAggregateInput
    _max?: VendedorMaxOrderByAggregateInput
    _min?: VendedorMinOrderByAggregateInput
    _sum?: VendedorSumOrderByAggregateInput
  }

  export type VendedorScalarWhereWithAggregatesInput = {
    AND?: VendedorScalarWhereWithAggregatesInput | VendedorScalarWhereWithAggregatesInput[]
    OR?: VendedorScalarWhereWithAggregatesInput[]
    NOT?: VendedorScalarWhereWithAggregatesInput | VendedorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Vendedor"> | number
    nome?: StringWithAggregatesFilter<"Vendedor"> | string
    cpf?: StringWithAggregatesFilter<"Vendedor"> | string
    filialId?: IntNullableWithAggregatesFilter<"Vendedor"> | number | null
  }

  export type ProdutoWhereInput = {
    AND?: ProdutoWhereInput | ProdutoWhereInput[]
    OR?: ProdutoWhereInput[]
    NOT?: ProdutoWhereInput | ProdutoWhereInput[]
    id?: IntFilter<"Produto"> | number
    descricao?: StringFilter<"Produto"> | string
    tipo?: StringFilter<"Produto"> | string
    preco?: DecimalFilter<"Produto"> | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueListRelationFilter
    notasFiscaisItens?: NotaFiscalItemListRelationFilter
    receitasTipo?: ReceitaTipoProdutoListRelationFilter
    receitasModelo?: ReceitaProdutoModeloListRelationFilter
    associacoesA?: AssociacaoProdutoListRelationFilter
    associacoesB?: AssociacaoProdutoListRelationFilter
  }

  export type ProdutoOrderByWithRelationInput = {
    id?: SortOrder
    descricao?: SortOrder
    tipo?: SortOrder
    preco?: SortOrder
    maquinasEstoque?: MaquinaEstoqueOrderByRelationAggregateInput
    notasFiscaisItens?: NotaFiscalItemOrderByRelationAggregateInput
    receitasTipo?: ReceitaTipoProdutoOrderByRelationAggregateInput
    receitasModelo?: ReceitaProdutoModeloOrderByRelationAggregateInput
    associacoesA?: AssociacaoProdutoOrderByRelationAggregateInput
    associacoesB?: AssociacaoProdutoOrderByRelationAggregateInput
    _relevance?: ProdutoOrderByRelevanceInput
  }

  export type ProdutoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProdutoWhereInput | ProdutoWhereInput[]
    OR?: ProdutoWhereInput[]
    NOT?: ProdutoWhereInput | ProdutoWhereInput[]
    descricao?: StringFilter<"Produto"> | string
    tipo?: StringFilter<"Produto"> | string
    preco?: DecimalFilter<"Produto"> | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueListRelationFilter
    notasFiscaisItens?: NotaFiscalItemListRelationFilter
    receitasTipo?: ReceitaTipoProdutoListRelationFilter
    receitasModelo?: ReceitaProdutoModeloListRelationFilter
    associacoesA?: AssociacaoProdutoListRelationFilter
    associacoesB?: AssociacaoProdutoListRelationFilter
  }, "id">

  export type ProdutoOrderByWithAggregationInput = {
    id?: SortOrder
    descricao?: SortOrder
    tipo?: SortOrder
    preco?: SortOrder
    _count?: ProdutoCountOrderByAggregateInput
    _avg?: ProdutoAvgOrderByAggregateInput
    _max?: ProdutoMaxOrderByAggregateInput
    _min?: ProdutoMinOrderByAggregateInput
    _sum?: ProdutoSumOrderByAggregateInput
  }

  export type ProdutoScalarWhereWithAggregatesInput = {
    AND?: ProdutoScalarWhereWithAggregatesInput | ProdutoScalarWhereWithAggregatesInput[]
    OR?: ProdutoScalarWhereWithAggregatesInput[]
    NOT?: ProdutoScalarWhereWithAggregatesInput | ProdutoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Produto"> | number
    descricao?: StringWithAggregatesFilter<"Produto"> | string
    tipo?: StringWithAggregatesFilter<"Produto"> | string
    preco?: DecimalWithAggregatesFilter<"Produto"> | Decimal | DecimalJsLike | number | string
  }

  export type MaquinaEstoqueWhereInput = {
    AND?: MaquinaEstoqueWhereInput | MaquinaEstoqueWhereInput[]
    OR?: MaquinaEstoqueWhereInput[]
    NOT?: MaquinaEstoqueWhereInput | MaquinaEstoqueWhereInput[]
    Chassi?: StringFilter<"MaquinaEstoque"> | string
    produtoId?: IntFilter<"MaquinaEstoque"> | number
    filialId?: IntNullableFilter<"MaquinaEstoque"> | number | null
    Status?: StringNullableFilter<"MaquinaEstoque"> | string | null
    produto?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    Notas_Fiscais_Itens?: NotaFiscalItemListRelationFilter
  }

  export type MaquinaEstoqueOrderByWithRelationInput = {
    Chassi?: SortOrder
    produtoId?: SortOrder
    filialId?: SortOrderInput | SortOrder
    Status?: SortOrderInput | SortOrder
    produto?: ProdutoOrderByWithRelationInput
    filial?: FilialOrderByWithRelationInput
    Notas_Fiscais_Itens?: NotaFiscalItemOrderByRelationAggregateInput
    _relevance?: MaquinaEstoqueOrderByRelevanceInput
  }

  export type MaquinaEstoqueWhereUniqueInput = Prisma.AtLeast<{
    Chassi?: string
    AND?: MaquinaEstoqueWhereInput | MaquinaEstoqueWhereInput[]
    OR?: MaquinaEstoqueWhereInput[]
    NOT?: MaquinaEstoqueWhereInput | MaquinaEstoqueWhereInput[]
    produtoId?: IntFilter<"MaquinaEstoque"> | number
    filialId?: IntNullableFilter<"MaquinaEstoque"> | number | null
    Status?: StringNullableFilter<"MaquinaEstoque"> | string | null
    produto?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    Notas_Fiscais_Itens?: NotaFiscalItemListRelationFilter
  }, "Chassi">

  export type MaquinaEstoqueOrderByWithAggregationInput = {
    Chassi?: SortOrder
    produtoId?: SortOrder
    filialId?: SortOrderInput | SortOrder
    Status?: SortOrderInput | SortOrder
    _count?: MaquinaEstoqueCountOrderByAggregateInput
    _avg?: MaquinaEstoqueAvgOrderByAggregateInput
    _max?: MaquinaEstoqueMaxOrderByAggregateInput
    _min?: MaquinaEstoqueMinOrderByAggregateInput
    _sum?: MaquinaEstoqueSumOrderByAggregateInput
  }

  export type MaquinaEstoqueScalarWhereWithAggregatesInput = {
    AND?: MaquinaEstoqueScalarWhereWithAggregatesInput | MaquinaEstoqueScalarWhereWithAggregatesInput[]
    OR?: MaquinaEstoqueScalarWhereWithAggregatesInput[]
    NOT?: MaquinaEstoqueScalarWhereWithAggregatesInput | MaquinaEstoqueScalarWhereWithAggregatesInput[]
    Chassi?: StringWithAggregatesFilter<"MaquinaEstoque"> | string
    produtoId?: IntWithAggregatesFilter<"MaquinaEstoque"> | number
    filialId?: IntNullableWithAggregatesFilter<"MaquinaEstoque"> | number | null
    Status?: StringNullableWithAggregatesFilter<"MaquinaEstoque"> | string | null
  }

  export type NotasFiscalCabecalhoWhereInput = {
    AND?: NotasFiscalCabecalhoWhereInput | NotasFiscalCabecalhoWhereInput[]
    OR?: NotasFiscalCabecalhoWhereInput[]
    NOT?: NotasFiscalCabecalhoWhereInput | NotasFiscalCabecalhoWhereInput[]
    id?: IntFilter<"NotasFiscalCabecalho"> | number
    numeroNota?: IntFilter<"NotasFiscalCabecalho"> | number
    dataEmissao?: DateTimeFilter<"NotasFiscalCabecalho"> | Date | string
    valorTotal?: DecimalFilter<"NotasFiscalCabecalho"> | Decimal | DecimalJsLike | number | string
    filialId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
    clienteId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
    vendedorId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, ClienteWhereInput> | null
    vendedor?: XOR<VendedorNullableScalarRelationFilter, VendedorWhereInput> | null
    itens?: NotaFiscalItemListRelationFilter
  }

  export type NotasFiscalCabecalhoOrderByWithRelationInput = {
    id?: SortOrder
    numeroNota?: SortOrder
    dataEmissao?: SortOrder
    valorTotal?: SortOrder
    filialId?: SortOrderInput | SortOrder
    clienteId?: SortOrderInput | SortOrder
    vendedorId?: SortOrderInput | SortOrder
    filial?: FilialOrderByWithRelationInput
    cliente?: ClienteOrderByWithRelationInput
    vendedor?: VendedorOrderByWithRelationInput
    itens?: NotaFiscalItemOrderByRelationAggregateInput
  }

  export type NotasFiscalCabecalhoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    numeroNota_filialId?: NotasFiscalCabecalhoNumeroNotaFilialIdCompoundUniqueInput
    AND?: NotasFiscalCabecalhoWhereInput | NotasFiscalCabecalhoWhereInput[]
    OR?: NotasFiscalCabecalhoWhereInput[]
    NOT?: NotasFiscalCabecalhoWhereInput | NotasFiscalCabecalhoWhereInput[]
    numeroNota?: IntFilter<"NotasFiscalCabecalho"> | number
    dataEmissao?: DateTimeFilter<"NotasFiscalCabecalho"> | Date | string
    valorTotal?: DecimalFilter<"NotasFiscalCabecalho"> | Decimal | DecimalJsLike | number | string
    filialId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
    clienteId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
    vendedorId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    cliente?: XOR<ClienteNullableScalarRelationFilter, ClienteWhereInput> | null
    vendedor?: XOR<VendedorNullableScalarRelationFilter, VendedorWhereInput> | null
    itens?: NotaFiscalItemListRelationFilter
  }, "id" | "numeroNota_filialId">

  export type NotasFiscalCabecalhoOrderByWithAggregationInput = {
    id?: SortOrder
    numeroNota?: SortOrder
    dataEmissao?: SortOrder
    valorTotal?: SortOrder
    filialId?: SortOrderInput | SortOrder
    clienteId?: SortOrderInput | SortOrder
    vendedorId?: SortOrderInput | SortOrder
    _count?: NotasFiscalCabecalhoCountOrderByAggregateInput
    _avg?: NotasFiscalCabecalhoAvgOrderByAggregateInput
    _max?: NotasFiscalCabecalhoMaxOrderByAggregateInput
    _min?: NotasFiscalCabecalhoMinOrderByAggregateInput
    _sum?: NotasFiscalCabecalhoSumOrderByAggregateInput
  }

  export type NotasFiscalCabecalhoScalarWhereWithAggregatesInput = {
    AND?: NotasFiscalCabecalhoScalarWhereWithAggregatesInput | NotasFiscalCabecalhoScalarWhereWithAggregatesInput[]
    OR?: NotasFiscalCabecalhoScalarWhereWithAggregatesInput[]
    NOT?: NotasFiscalCabecalhoScalarWhereWithAggregatesInput | NotasFiscalCabecalhoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"NotasFiscalCabecalho"> | number
    numeroNota?: IntWithAggregatesFilter<"NotasFiscalCabecalho"> | number
    dataEmissao?: DateTimeWithAggregatesFilter<"NotasFiscalCabecalho"> | Date | string
    valorTotal?: DecimalWithAggregatesFilter<"NotasFiscalCabecalho"> | Decimal | DecimalJsLike | number | string
    filialId?: IntNullableWithAggregatesFilter<"NotasFiscalCabecalho"> | number | null
    clienteId?: IntNullableWithAggregatesFilter<"NotasFiscalCabecalho"> | number | null
    vendedorId?: IntNullableWithAggregatesFilter<"NotasFiscalCabecalho"> | number | null
  }

  export type NotaFiscalItemWhereInput = {
    AND?: NotaFiscalItemWhereInput | NotaFiscalItemWhereInput[]
    OR?: NotaFiscalItemWhereInput[]
    NOT?: NotaFiscalItemWhereInput | NotaFiscalItemWhereInput[]
    id?: IntFilter<"NotaFiscalItem"> | number
    notaFiscalId?: IntFilter<"NotaFiscalItem"> | number
    produtoId?: IntFilter<"NotaFiscalItem"> | number
    Quantidade?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    Chassi?: StringNullableFilter<"NotaFiscalItem"> | string | null
    Maquinas_Estoque?: XOR<MaquinaEstoqueNullableScalarRelationFilter, MaquinaEstoqueWhereInput> | null
    notaFiscal?: XOR<NotasFiscalCabecalhoScalarRelationFilter, NotasFiscalCabecalhoWhereInput>
    produto?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
  }

  export type NotaFiscalItemOrderByWithRelationInput = {
    id?: SortOrder
    notaFiscalId?: SortOrder
    produtoId?: SortOrder
    Quantidade?: SortOrder
    valorUnitario?: SortOrder
    valorTotalItem?: SortOrder
    Chassi?: SortOrderInput | SortOrder
    Maquinas_Estoque?: MaquinaEstoqueOrderByWithRelationInput
    notaFiscal?: NotasFiscalCabecalhoOrderByWithRelationInput
    produto?: ProdutoOrderByWithRelationInput
    _relevance?: NotaFiscalItemOrderByRelevanceInput
  }

  export type NotaFiscalItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NotaFiscalItemWhereInput | NotaFiscalItemWhereInput[]
    OR?: NotaFiscalItemWhereInput[]
    NOT?: NotaFiscalItemWhereInput | NotaFiscalItemWhereInput[]
    notaFiscalId?: IntFilter<"NotaFiscalItem"> | number
    produtoId?: IntFilter<"NotaFiscalItem"> | number
    Quantidade?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    Chassi?: StringNullableFilter<"NotaFiscalItem"> | string | null
    Maquinas_Estoque?: XOR<MaquinaEstoqueNullableScalarRelationFilter, MaquinaEstoqueWhereInput> | null
    notaFiscal?: XOR<NotasFiscalCabecalhoScalarRelationFilter, NotasFiscalCabecalhoWhereInput>
    produto?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
  }, "id">

  export type NotaFiscalItemOrderByWithAggregationInput = {
    id?: SortOrder
    notaFiscalId?: SortOrder
    produtoId?: SortOrder
    Quantidade?: SortOrder
    valorUnitario?: SortOrder
    valorTotalItem?: SortOrder
    Chassi?: SortOrderInput | SortOrder
    _count?: NotaFiscalItemCountOrderByAggregateInput
    _avg?: NotaFiscalItemAvgOrderByAggregateInput
    _max?: NotaFiscalItemMaxOrderByAggregateInput
    _min?: NotaFiscalItemMinOrderByAggregateInput
    _sum?: NotaFiscalItemSumOrderByAggregateInput
  }

  export type NotaFiscalItemScalarWhereWithAggregatesInput = {
    AND?: NotaFiscalItemScalarWhereWithAggregatesInput | NotaFiscalItemScalarWhereWithAggregatesInput[]
    OR?: NotaFiscalItemScalarWhereWithAggregatesInput[]
    NOT?: NotaFiscalItemScalarWhereWithAggregatesInput | NotaFiscalItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"NotaFiscalItem"> | number
    notaFiscalId?: IntWithAggregatesFilter<"NotaFiscalItem"> | number
    produtoId?: IntWithAggregatesFilter<"NotaFiscalItem"> | number
    Quantidade?: DecimalWithAggregatesFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalWithAggregatesFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalWithAggregatesFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    Chassi?: StringNullableWithAggregatesFilter<"NotaFiscalItem"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type RfvParameterSetWhereInput = {
    AND?: RfvParameterSetWhereInput | RfvParameterSetWhereInput[]
    OR?: RfvParameterSetWhereInput[]
    NOT?: RfvParameterSetWhereInput | RfvParameterSetWhereInput[]
    id?: IntFilter<"RfvParameterSet"> | number
    filialId?: IntNullableFilter<"RfvParameterSet"> | number | null
    name?: StringFilter<"RfvParameterSet"> | string
    strategy?: EnumRfvStrategyFilter<"RfvParameterSet"> | $Enums.RfvStrategy
    windowDays?: IntFilter<"RfvParameterSet"> | number
    weights?: JsonFilter<"RfvParameterSet">
    ruleRecency?: JsonFilter<"RfvParameterSet">
    ruleFrequency?: JsonFilter<"RfvParameterSet">
    ruleValue?: JsonFilter<"RfvParameterSet">
    effectiveFrom?: DateTimeFilter<"RfvParameterSet"> | Date | string
    effectiveTo?: DateTimeNullableFilter<"RfvParameterSet"> | Date | string | null
    createdAt?: DateTimeFilter<"RfvParameterSet"> | Date | string
    updatedAt?: DateTimeFilter<"RfvParameterSet"> | Date | string
    calculationStrategy?: EnumCalculationStrategyFilter<"RfvParameterSet"> | $Enums.CalculationStrategy
    classRanges?: JsonNullableFilter<"RfvParameterSet">
    conditionalRules?: JsonNullableFilter<"RfvParameterSet">
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    segments?: RfvSegmentListRelationFilter
  }

  export type RfvParameterSetOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    name?: SortOrder
    strategy?: SortOrder
    windowDays?: SortOrder
    weights?: SortOrder
    ruleRecency?: SortOrder
    ruleFrequency?: SortOrder
    ruleValue?: SortOrder
    effectiveFrom?: SortOrder
    effectiveTo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    calculationStrategy?: SortOrder
    classRanges?: SortOrderInput | SortOrder
    conditionalRules?: SortOrderInput | SortOrder
    filial?: FilialOrderByWithRelationInput
    segments?: RfvSegmentOrderByRelationAggregateInput
    _relevance?: RfvParameterSetOrderByRelevanceInput
  }

  export type RfvParameterSetWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RfvParameterSetWhereInput | RfvParameterSetWhereInput[]
    OR?: RfvParameterSetWhereInput[]
    NOT?: RfvParameterSetWhereInput | RfvParameterSetWhereInput[]
    filialId?: IntNullableFilter<"RfvParameterSet"> | number | null
    name?: StringFilter<"RfvParameterSet"> | string
    strategy?: EnumRfvStrategyFilter<"RfvParameterSet"> | $Enums.RfvStrategy
    windowDays?: IntFilter<"RfvParameterSet"> | number
    weights?: JsonFilter<"RfvParameterSet">
    ruleRecency?: JsonFilter<"RfvParameterSet">
    ruleFrequency?: JsonFilter<"RfvParameterSet">
    ruleValue?: JsonFilter<"RfvParameterSet">
    effectiveFrom?: DateTimeFilter<"RfvParameterSet"> | Date | string
    effectiveTo?: DateTimeNullableFilter<"RfvParameterSet"> | Date | string | null
    createdAt?: DateTimeFilter<"RfvParameterSet"> | Date | string
    updatedAt?: DateTimeFilter<"RfvParameterSet"> | Date | string
    calculationStrategy?: EnumCalculationStrategyFilter<"RfvParameterSet"> | $Enums.CalculationStrategy
    classRanges?: JsonNullableFilter<"RfvParameterSet">
    conditionalRules?: JsonNullableFilter<"RfvParameterSet">
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    segments?: RfvSegmentListRelationFilter
  }, "id">

  export type RfvParameterSetOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    name?: SortOrder
    strategy?: SortOrder
    windowDays?: SortOrder
    weights?: SortOrder
    ruleRecency?: SortOrder
    ruleFrequency?: SortOrder
    ruleValue?: SortOrder
    effectiveFrom?: SortOrder
    effectiveTo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    calculationStrategy?: SortOrder
    classRanges?: SortOrderInput | SortOrder
    conditionalRules?: SortOrderInput | SortOrder
    _count?: RfvParameterSetCountOrderByAggregateInput
    _avg?: RfvParameterSetAvgOrderByAggregateInput
    _max?: RfvParameterSetMaxOrderByAggregateInput
    _min?: RfvParameterSetMinOrderByAggregateInput
    _sum?: RfvParameterSetSumOrderByAggregateInput
  }

  export type RfvParameterSetScalarWhereWithAggregatesInput = {
    AND?: RfvParameterSetScalarWhereWithAggregatesInput | RfvParameterSetScalarWhereWithAggregatesInput[]
    OR?: RfvParameterSetScalarWhereWithAggregatesInput[]
    NOT?: RfvParameterSetScalarWhereWithAggregatesInput | RfvParameterSetScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RfvParameterSet"> | number
    filialId?: IntNullableWithAggregatesFilter<"RfvParameterSet"> | number | null
    name?: StringWithAggregatesFilter<"RfvParameterSet"> | string
    strategy?: EnumRfvStrategyWithAggregatesFilter<"RfvParameterSet"> | $Enums.RfvStrategy
    windowDays?: IntWithAggregatesFilter<"RfvParameterSet"> | number
    weights?: JsonWithAggregatesFilter<"RfvParameterSet">
    ruleRecency?: JsonWithAggregatesFilter<"RfvParameterSet">
    ruleFrequency?: JsonWithAggregatesFilter<"RfvParameterSet">
    ruleValue?: JsonWithAggregatesFilter<"RfvParameterSet">
    effectiveFrom?: DateTimeWithAggregatesFilter<"RfvParameterSet"> | Date | string
    effectiveTo?: DateTimeNullableWithAggregatesFilter<"RfvParameterSet"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RfvParameterSet"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RfvParameterSet"> | Date | string
    calculationStrategy?: EnumCalculationStrategyWithAggregatesFilter<"RfvParameterSet"> | $Enums.CalculationStrategy
    classRanges?: JsonNullableWithAggregatesFilter<"RfvParameterSet">
    conditionalRules?: JsonNullableWithAggregatesFilter<"RfvParameterSet">
  }

  export type RfvSegmentWhereInput = {
    AND?: RfvSegmentWhereInput | RfvSegmentWhereInput[]
    OR?: RfvSegmentWhereInput[]
    NOT?: RfvSegmentWhereInput | RfvSegmentWhereInput[]
    id?: IntFilter<"RfvSegment"> | number
    parameterSetId?: IntFilter<"RfvSegment"> | number
    name?: StringFilter<"RfvSegment"> | string
    rules?: JsonFilter<"RfvSegment">
    priority?: IntFilter<"RfvSegment"> | number
    parameterSet?: XOR<RfvParameterSetScalarRelationFilter, RfvParameterSetWhereInput>
  }

  export type RfvSegmentOrderByWithRelationInput = {
    id?: SortOrder
    parameterSetId?: SortOrder
    name?: SortOrder
    rules?: SortOrder
    priority?: SortOrder
    parameterSet?: RfvParameterSetOrderByWithRelationInput
    _relevance?: RfvSegmentOrderByRelevanceInput
  }

  export type RfvSegmentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RfvSegmentWhereInput | RfvSegmentWhereInput[]
    OR?: RfvSegmentWhereInput[]
    NOT?: RfvSegmentWhereInput | RfvSegmentWhereInput[]
    parameterSetId?: IntFilter<"RfvSegment"> | number
    name?: StringFilter<"RfvSegment"> | string
    rules?: JsonFilter<"RfvSegment">
    priority?: IntFilter<"RfvSegment"> | number
    parameterSet?: XOR<RfvParameterSetScalarRelationFilter, RfvParameterSetWhereInput>
  }, "id">

  export type RfvSegmentOrderByWithAggregationInput = {
    id?: SortOrder
    parameterSetId?: SortOrder
    name?: SortOrder
    rules?: SortOrder
    priority?: SortOrder
    _count?: RfvSegmentCountOrderByAggregateInput
    _avg?: RfvSegmentAvgOrderByAggregateInput
    _max?: RfvSegmentMaxOrderByAggregateInput
    _min?: RfvSegmentMinOrderByAggregateInput
    _sum?: RfvSegmentSumOrderByAggregateInput
  }

  export type RfvSegmentScalarWhereWithAggregatesInput = {
    AND?: RfvSegmentScalarWhereWithAggregatesInput | RfvSegmentScalarWhereWithAggregatesInput[]
    OR?: RfvSegmentScalarWhereWithAggregatesInput[]
    NOT?: RfvSegmentScalarWhereWithAggregatesInput | RfvSegmentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RfvSegment"> | number
    parameterSetId?: IntWithAggregatesFilter<"RfvSegment"> | number
    name?: StringWithAggregatesFilter<"RfvSegment"> | string
    rules?: JsonWithAggregatesFilter<"RfvSegment">
    priority?: IntWithAggregatesFilter<"RfvSegment"> | number
  }

  export type ReceitaPeriodoWhereInput = {
    AND?: ReceitaPeriodoWhereInput | ReceitaPeriodoWhereInput[]
    OR?: ReceitaPeriodoWhereInput[]
    NOT?: ReceitaPeriodoWhereInput | ReceitaPeriodoWhereInput[]
    id?: IntFilter<"ReceitaPeriodo"> | number
    filialId?: IntNullableFilter<"ReceitaPeriodo"> | number | null
    data?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaPeriodo"> | string
    valorTotal?: DecimalFilter<"ReceitaPeriodo"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaPeriodo"> | number
    quantidadeItens?: IntFilter<"ReceitaPeriodo"> | number
    createdAt?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }

  export type ReceitaPeriodoOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: ReceitaPeriodoOrderByRelevanceInput
  }

  export type ReceitaPeriodoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReceitaPeriodoWhereInput | ReceitaPeriodoWhereInput[]
    OR?: ReceitaPeriodoWhereInput[]
    NOT?: ReceitaPeriodoWhereInput | ReceitaPeriodoWhereInput[]
    filialId?: IntNullableFilter<"ReceitaPeriodo"> | number | null
    data?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaPeriodo"> | string
    valorTotal?: DecimalFilter<"ReceitaPeriodo"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaPeriodo"> | number
    quantidadeItens?: IntFilter<"ReceitaPeriodo"> | number
    createdAt?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }, "id">

  export type ReceitaPeriodoOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceitaPeriodoCountOrderByAggregateInput
    _avg?: ReceitaPeriodoAvgOrderByAggregateInput
    _max?: ReceitaPeriodoMaxOrderByAggregateInput
    _min?: ReceitaPeriodoMinOrderByAggregateInput
    _sum?: ReceitaPeriodoSumOrderByAggregateInput
  }

  export type ReceitaPeriodoScalarWhereWithAggregatesInput = {
    AND?: ReceitaPeriodoScalarWhereWithAggregatesInput | ReceitaPeriodoScalarWhereWithAggregatesInput[]
    OR?: ReceitaPeriodoScalarWhereWithAggregatesInput[]
    NOT?: ReceitaPeriodoScalarWhereWithAggregatesInput | ReceitaPeriodoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReceitaPeriodo"> | number
    filialId?: IntNullableWithAggregatesFilter<"ReceitaPeriodo"> | number | null
    data?: DateTimeWithAggregatesFilter<"ReceitaPeriodo"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ReceitaPeriodo"> | string
    valorTotal?: DecimalWithAggregatesFilter<"ReceitaPeriodo"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"ReceitaPeriodo"> | number
    quantidadeItens?: IntWithAggregatesFilter<"ReceitaPeriodo"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ReceitaPeriodo"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReceitaPeriodo"> | Date | string
  }

  export type ReceitaTipoProdutoWhereInput = {
    AND?: ReceitaTipoProdutoWhereInput | ReceitaTipoProdutoWhereInput[]
    OR?: ReceitaTipoProdutoWhereInput[]
    NOT?: ReceitaTipoProdutoWhereInput | ReceitaTipoProdutoWhereInput[]
    id?: IntFilter<"ReceitaTipoProduto"> | number
    filialId?: IntNullableFilter<"ReceitaTipoProduto"> | number | null
    produtoId?: IntNullableFilter<"ReceitaTipoProduto"> | number | null
    data?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaTipoProduto"> | string
    tipoProduto?: StringFilter<"ReceitaTipoProduto"> | string
    valorTotal?: DecimalFilter<"ReceitaTipoProduto"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaTipoProduto"> | number
    quantidadeItens?: IntFilter<"ReceitaTipoProduto"> | number
    createdAt?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    produto?: XOR<ProdutoNullableScalarRelationFilter, ProdutoWhereInput> | null
  }

  export type ReceitaTipoProdutoOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    produtoId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoProduto?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    produto?: ProdutoOrderByWithRelationInput
    _relevance?: ReceitaTipoProdutoOrderByRelevanceInput
  }

  export type ReceitaTipoProdutoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReceitaTipoProdutoWhereInput | ReceitaTipoProdutoWhereInput[]
    OR?: ReceitaTipoProdutoWhereInput[]
    NOT?: ReceitaTipoProdutoWhereInput | ReceitaTipoProdutoWhereInput[]
    filialId?: IntNullableFilter<"ReceitaTipoProduto"> | number | null
    produtoId?: IntNullableFilter<"ReceitaTipoProduto"> | number | null
    data?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaTipoProduto"> | string
    tipoProduto?: StringFilter<"ReceitaTipoProduto"> | string
    valorTotal?: DecimalFilter<"ReceitaTipoProduto"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaTipoProduto"> | number
    quantidadeItens?: IntFilter<"ReceitaTipoProduto"> | number
    createdAt?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    produto?: XOR<ProdutoNullableScalarRelationFilter, ProdutoWhereInput> | null
  }, "id">

  export type ReceitaTipoProdutoOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    produtoId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoProduto?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceitaTipoProdutoCountOrderByAggregateInput
    _avg?: ReceitaTipoProdutoAvgOrderByAggregateInput
    _max?: ReceitaTipoProdutoMaxOrderByAggregateInput
    _min?: ReceitaTipoProdutoMinOrderByAggregateInput
    _sum?: ReceitaTipoProdutoSumOrderByAggregateInput
  }

  export type ReceitaTipoProdutoScalarWhereWithAggregatesInput = {
    AND?: ReceitaTipoProdutoScalarWhereWithAggregatesInput | ReceitaTipoProdutoScalarWhereWithAggregatesInput[]
    OR?: ReceitaTipoProdutoScalarWhereWithAggregatesInput[]
    NOT?: ReceitaTipoProdutoScalarWhereWithAggregatesInput | ReceitaTipoProdutoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReceitaTipoProduto"> | number
    filialId?: IntNullableWithAggregatesFilter<"ReceitaTipoProduto"> | number | null
    produtoId?: IntNullableWithAggregatesFilter<"ReceitaTipoProduto"> | number | null
    data?: DateTimeWithAggregatesFilter<"ReceitaTipoProduto"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ReceitaTipoProduto"> | string
    tipoProduto?: StringWithAggregatesFilter<"ReceitaTipoProduto"> | string
    valorTotal?: DecimalWithAggregatesFilter<"ReceitaTipoProduto"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"ReceitaTipoProduto"> | number
    quantidadeItens?: IntWithAggregatesFilter<"ReceitaTipoProduto"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ReceitaTipoProduto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReceitaTipoProduto"> | Date | string
  }

  export type ReceitaProdutoModeloWhereInput = {
    AND?: ReceitaProdutoModeloWhereInput | ReceitaProdutoModeloWhereInput[]
    OR?: ReceitaProdutoModeloWhereInput[]
    NOT?: ReceitaProdutoModeloWhereInput | ReceitaProdutoModeloWhereInput[]
    id?: IntFilter<"ReceitaProdutoModelo"> | number
    filialId?: IntNullableFilter<"ReceitaProdutoModelo"> | number | null
    produtoId?: IntFilter<"ReceitaProdutoModelo"> | number
    data?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaProdutoModelo"> | string
    valorTotal?: DecimalFilter<"ReceitaProdutoModelo"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaProdutoModelo"> | number
    quantidadeItens?: IntFilter<"ReceitaProdutoModelo"> | number
    ranking?: IntNullableFilter<"ReceitaProdutoModelo"> | number | null
    createdAt?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    produto?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
  }

  export type ReceitaProdutoModeloOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    produtoId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    ranking?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    produto?: ProdutoOrderByWithRelationInput
    _relevance?: ReceitaProdutoModeloOrderByRelevanceInput
  }

  export type ReceitaProdutoModeloWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReceitaProdutoModeloWhereInput | ReceitaProdutoModeloWhereInput[]
    OR?: ReceitaProdutoModeloWhereInput[]
    NOT?: ReceitaProdutoModeloWhereInput | ReceitaProdutoModeloWhereInput[]
    filialId?: IntNullableFilter<"ReceitaProdutoModelo"> | number | null
    produtoId?: IntFilter<"ReceitaProdutoModelo"> | number
    data?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaProdutoModelo"> | string
    valorTotal?: DecimalFilter<"ReceitaProdutoModelo"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaProdutoModelo"> | number
    quantidadeItens?: IntFilter<"ReceitaProdutoModelo"> | number
    ranking?: IntNullableFilter<"ReceitaProdutoModelo"> | number | null
    createdAt?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    produto?: XOR<ProdutoScalarRelationFilter, ProdutoWhereInput>
  }, "id">

  export type ReceitaProdutoModeloOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    produtoId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    ranking?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceitaProdutoModeloCountOrderByAggregateInput
    _avg?: ReceitaProdutoModeloAvgOrderByAggregateInput
    _max?: ReceitaProdutoModeloMaxOrderByAggregateInput
    _min?: ReceitaProdutoModeloMinOrderByAggregateInput
    _sum?: ReceitaProdutoModeloSumOrderByAggregateInput
  }

  export type ReceitaProdutoModeloScalarWhereWithAggregatesInput = {
    AND?: ReceitaProdutoModeloScalarWhereWithAggregatesInput | ReceitaProdutoModeloScalarWhereWithAggregatesInput[]
    OR?: ReceitaProdutoModeloScalarWhereWithAggregatesInput[]
    NOT?: ReceitaProdutoModeloScalarWhereWithAggregatesInput | ReceitaProdutoModeloScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReceitaProdutoModelo"> | number
    filialId?: IntNullableWithAggregatesFilter<"ReceitaProdutoModelo"> | number | null
    produtoId?: IntWithAggregatesFilter<"ReceitaProdutoModelo"> | number
    data?: DateTimeWithAggregatesFilter<"ReceitaProdutoModelo"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ReceitaProdutoModelo"> | string
    valorTotal?: DecimalWithAggregatesFilter<"ReceitaProdutoModelo"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"ReceitaProdutoModelo"> | number
    quantidadeItens?: IntWithAggregatesFilter<"ReceitaProdutoModelo"> | number
    ranking?: IntNullableWithAggregatesFilter<"ReceitaProdutoModelo"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"ReceitaProdutoModelo"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReceitaProdutoModelo"> | Date | string
  }

  export type CrescimentoVendasWhereInput = {
    AND?: CrescimentoVendasWhereInput | CrescimentoVendasWhereInput[]
    OR?: CrescimentoVendasWhereInput[]
    NOT?: CrescimentoVendasWhereInput | CrescimentoVendasWhereInput[]
    id?: IntFilter<"CrescimentoVendas"> | number
    filialId?: IntNullableFilter<"CrescimentoVendas"> | number | null
    data?: DateTimeFilter<"CrescimentoVendas"> | Date | string
    tipoPeriodo?: StringFilter<"CrescimentoVendas"> | string
    tipoComparacao?: StringFilter<"CrescimentoVendas"> | string
    valorAtual?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"CrescimentoVendas"> | Date | string
    updatedAt?: DateTimeFilter<"CrescimentoVendas"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }

  export type CrescimentoVendasOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoComparacao?: SortOrder
    valorAtual?: SortOrder
    valorAnterior?: SortOrder
    crescimento?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: CrescimentoVendasOrderByRelevanceInput
  }

  export type CrescimentoVendasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CrescimentoVendasWhereInput | CrescimentoVendasWhereInput[]
    OR?: CrescimentoVendasWhereInput[]
    NOT?: CrescimentoVendasWhereInput | CrescimentoVendasWhereInput[]
    filialId?: IntNullableFilter<"CrescimentoVendas"> | number | null
    data?: DateTimeFilter<"CrescimentoVendas"> | Date | string
    tipoPeriodo?: StringFilter<"CrescimentoVendas"> | string
    tipoComparacao?: StringFilter<"CrescimentoVendas"> | string
    valorAtual?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"CrescimentoVendas"> | Date | string
    updatedAt?: DateTimeFilter<"CrescimentoVendas"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }, "id">

  export type CrescimentoVendasOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoComparacao?: SortOrder
    valorAtual?: SortOrder
    valorAnterior?: SortOrder
    crescimento?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CrescimentoVendasCountOrderByAggregateInput
    _avg?: CrescimentoVendasAvgOrderByAggregateInput
    _max?: CrescimentoVendasMaxOrderByAggregateInput
    _min?: CrescimentoVendasMinOrderByAggregateInput
    _sum?: CrescimentoVendasSumOrderByAggregateInput
  }

  export type CrescimentoVendasScalarWhereWithAggregatesInput = {
    AND?: CrescimentoVendasScalarWhereWithAggregatesInput | CrescimentoVendasScalarWhereWithAggregatesInput[]
    OR?: CrescimentoVendasScalarWhereWithAggregatesInput[]
    NOT?: CrescimentoVendasScalarWhereWithAggregatesInput | CrescimentoVendasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CrescimentoVendas"> | number
    filialId?: IntNullableWithAggregatesFilter<"CrescimentoVendas"> | number | null
    data?: DateTimeWithAggregatesFilter<"CrescimentoVendas"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"CrescimentoVendas"> | string
    tipoComparacao?: StringWithAggregatesFilter<"CrescimentoVendas"> | string
    valorAtual?: DecimalWithAggregatesFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalWithAggregatesFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalWithAggregatesFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"CrescimentoVendas"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CrescimentoVendas"> | Date | string
  }

  export type TicketMedioWhereInput = {
    AND?: TicketMedioWhereInput | TicketMedioWhereInput[]
    OR?: TicketMedioWhereInput[]
    NOT?: TicketMedioWhereInput | TicketMedioWhereInput[]
    id?: IntFilter<"TicketMedio"> | number
    filialId?: IntNullableFilter<"TicketMedio"> | number | null
    data?: DateTimeFilter<"TicketMedio"> | Date | string
    tipoPeriodo?: StringFilter<"TicketMedio"> | string
    ticketMedioNF?: DecimalFilter<"TicketMedio"> | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFilter<"TicketMedio"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"TicketMedio"> | number
    quantidadeItens?: IntFilter<"TicketMedio"> | number
    createdAt?: DateTimeFilter<"TicketMedio"> | Date | string
    updatedAt?: DateTimeFilter<"TicketMedio"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }

  export type TicketMedioOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedioNF?: SortOrder
    ticketMedioItem?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: TicketMedioOrderByRelevanceInput
  }

  export type TicketMedioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TicketMedioWhereInput | TicketMedioWhereInput[]
    OR?: TicketMedioWhereInput[]
    NOT?: TicketMedioWhereInput | TicketMedioWhereInput[]
    filialId?: IntNullableFilter<"TicketMedio"> | number | null
    data?: DateTimeFilter<"TicketMedio"> | Date | string
    tipoPeriodo?: StringFilter<"TicketMedio"> | string
    ticketMedioNF?: DecimalFilter<"TicketMedio"> | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFilter<"TicketMedio"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"TicketMedio"> | number
    quantidadeItens?: IntFilter<"TicketMedio"> | number
    createdAt?: DateTimeFilter<"TicketMedio"> | Date | string
    updatedAt?: DateTimeFilter<"TicketMedio"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }, "id">

  export type TicketMedioOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedioNF?: SortOrder
    ticketMedioItem?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TicketMedioCountOrderByAggregateInput
    _avg?: TicketMedioAvgOrderByAggregateInput
    _max?: TicketMedioMaxOrderByAggregateInput
    _min?: TicketMedioMinOrderByAggregateInput
    _sum?: TicketMedioSumOrderByAggregateInput
  }

  export type TicketMedioScalarWhereWithAggregatesInput = {
    AND?: TicketMedioScalarWhereWithAggregatesInput | TicketMedioScalarWhereWithAggregatesInput[]
    OR?: TicketMedioScalarWhereWithAggregatesInput[]
    NOT?: TicketMedioScalarWhereWithAggregatesInput | TicketMedioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TicketMedio"> | number
    filialId?: IntNullableWithAggregatesFilter<"TicketMedio"> | number | null
    data?: DateTimeWithAggregatesFilter<"TicketMedio"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"TicketMedio"> | string
    ticketMedioNF?: DecimalWithAggregatesFilter<"TicketMedio"> | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalWithAggregatesFilter<"TicketMedio"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"TicketMedio"> | number
    quantidadeItens?: IntWithAggregatesFilter<"TicketMedio"> | number
    createdAt?: DateTimeWithAggregatesFilter<"TicketMedio"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TicketMedio"> | Date | string
  }

  export type ItensPorNFWhereInput = {
    AND?: ItensPorNFWhereInput | ItensPorNFWhereInput[]
    OR?: ItensPorNFWhereInput[]
    NOT?: ItensPorNFWhereInput | ItensPorNFWhereInput[]
    id?: IntFilter<"ItensPorNF"> | number
    filialId?: IntNullableFilter<"ItensPorNF"> | number | null
    data?: DateTimeFilter<"ItensPorNF"> | Date | string
    tipoPeriodo?: StringFilter<"ItensPorNF"> | string
    mediaItens?: DecimalFilter<"ItensPorNF"> | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFilter<"ItensPorNF"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ItensPorNF"> | number
    createdAt?: DateTimeFilter<"ItensPorNF"> | Date | string
    updatedAt?: DateTimeFilter<"ItensPorNF"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }

  export type ItensPorNFOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    mediaItens?: SortOrder
    p95Itens?: SortOrder
    quantidadeNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: ItensPorNFOrderByRelevanceInput
  }

  export type ItensPorNFWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ItensPorNFWhereInput | ItensPorNFWhereInput[]
    OR?: ItensPorNFWhereInput[]
    NOT?: ItensPorNFWhereInput | ItensPorNFWhereInput[]
    filialId?: IntNullableFilter<"ItensPorNF"> | number | null
    data?: DateTimeFilter<"ItensPorNF"> | Date | string
    tipoPeriodo?: StringFilter<"ItensPorNF"> | string
    mediaItens?: DecimalFilter<"ItensPorNF"> | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFilter<"ItensPorNF"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ItensPorNF"> | number
    createdAt?: DateTimeFilter<"ItensPorNF"> | Date | string
    updatedAt?: DateTimeFilter<"ItensPorNF"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }, "id">

  export type ItensPorNFOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    mediaItens?: SortOrder
    p95Itens?: SortOrder
    quantidadeNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ItensPorNFCountOrderByAggregateInput
    _avg?: ItensPorNFAvgOrderByAggregateInput
    _max?: ItensPorNFMaxOrderByAggregateInput
    _min?: ItensPorNFMinOrderByAggregateInput
    _sum?: ItensPorNFSumOrderByAggregateInput
  }

  export type ItensPorNFScalarWhereWithAggregatesInput = {
    AND?: ItensPorNFScalarWhereWithAggregatesInput | ItensPorNFScalarWhereWithAggregatesInput[]
    OR?: ItensPorNFScalarWhereWithAggregatesInput[]
    NOT?: ItensPorNFScalarWhereWithAggregatesInput | ItensPorNFScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ItensPorNF"> | number
    filialId?: IntNullableWithAggregatesFilter<"ItensPorNF"> | number | null
    data?: DateTimeWithAggregatesFilter<"ItensPorNF"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ItensPorNF"> | string
    mediaItens?: DecimalWithAggregatesFilter<"ItensPorNF"> | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalWithAggregatesFilter<"ItensPorNF"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"ItensPorNF"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ItensPorNF"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ItensPorNF"> | Date | string
  }

  export type SazonalidadeWhereInput = {
    AND?: SazonalidadeWhereInput | SazonalidadeWhereInput[]
    OR?: SazonalidadeWhereInput[]
    NOT?: SazonalidadeWhereInput | SazonalidadeWhereInput[]
    id?: IntFilter<"Sazonalidade"> | number
    filialId?: IntNullableFilter<"Sazonalidade"> | number | null
    ano?: IntFilter<"Sazonalidade"> | number
    mes?: IntFilter<"Sazonalidade"> | number
    valorTotal?: DecimalFilter<"Sazonalidade"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"Sazonalidade"> | number
    quantidadeItens?: IntFilter<"Sazonalidade"> | number
    percentualAno?: DecimalFilter<"Sazonalidade"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"Sazonalidade"> | Date | string
    updatedAt?: DateTimeFilter<"Sazonalidade"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }

  export type SazonalidadeOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    ano?: SortOrder
    mes?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    percentualAno?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
  }

  export type SazonalidadeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SazonalidadeWhereInput | SazonalidadeWhereInput[]
    OR?: SazonalidadeWhereInput[]
    NOT?: SazonalidadeWhereInput | SazonalidadeWhereInput[]
    filialId?: IntNullableFilter<"Sazonalidade"> | number | null
    ano?: IntFilter<"Sazonalidade"> | number
    mes?: IntFilter<"Sazonalidade"> | number
    valorTotal?: DecimalFilter<"Sazonalidade"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"Sazonalidade"> | number
    quantidadeItens?: IntFilter<"Sazonalidade"> | number
    percentualAno?: DecimalFilter<"Sazonalidade"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"Sazonalidade"> | Date | string
    updatedAt?: DateTimeFilter<"Sazonalidade"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }, "id">

  export type SazonalidadeOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    ano?: SortOrder
    mes?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    percentualAno?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SazonalidadeCountOrderByAggregateInput
    _avg?: SazonalidadeAvgOrderByAggregateInput
    _max?: SazonalidadeMaxOrderByAggregateInput
    _min?: SazonalidadeMinOrderByAggregateInput
    _sum?: SazonalidadeSumOrderByAggregateInput
  }

  export type SazonalidadeScalarWhereWithAggregatesInput = {
    AND?: SazonalidadeScalarWhereWithAggregatesInput | SazonalidadeScalarWhereWithAggregatesInput[]
    OR?: SazonalidadeScalarWhereWithAggregatesInput[]
    NOT?: SazonalidadeScalarWhereWithAggregatesInput | SazonalidadeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Sazonalidade"> | number
    filialId?: IntNullableWithAggregatesFilter<"Sazonalidade"> | number | null
    ano?: IntWithAggregatesFilter<"Sazonalidade"> | number
    mes?: IntWithAggregatesFilter<"Sazonalidade"> | number
    valorTotal?: DecimalWithAggregatesFilter<"Sazonalidade"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"Sazonalidade"> | number
    quantidadeItens?: IntWithAggregatesFilter<"Sazonalidade"> | number
    percentualAno?: DecimalWithAggregatesFilter<"Sazonalidade"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"Sazonalidade"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Sazonalidade"> | Date | string
  }

  export type ReceitaLocalizacaoWhereInput = {
    AND?: ReceitaLocalizacaoWhereInput | ReceitaLocalizacaoWhereInput[]
    OR?: ReceitaLocalizacaoWhereInput[]
    NOT?: ReceitaLocalizacaoWhereInput | ReceitaLocalizacaoWhereInput[]
    id?: IntFilter<"ReceitaLocalizacao"> | number
    filialId?: IntNullableFilter<"ReceitaLocalizacao"> | number | null
    cidade?: StringFilter<"ReceitaLocalizacao"> | string
    estado?: StringFilter<"ReceitaLocalizacao"> | string
    data?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaLocalizacao"> | string
    valorTotal?: DecimalFilter<"ReceitaLocalizacao"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaLocalizacao"> | number
    quantidadeItens?: IntFilter<"ReceitaLocalizacao"> | number
    createdAt?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }

  export type ReceitaLocalizacaoOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: ReceitaLocalizacaoOrderByRelevanceInput
  }

  export type ReceitaLocalizacaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReceitaLocalizacaoWhereInput | ReceitaLocalizacaoWhereInput[]
    OR?: ReceitaLocalizacaoWhereInput[]
    NOT?: ReceitaLocalizacaoWhereInput | ReceitaLocalizacaoWhereInput[]
    filialId?: IntNullableFilter<"ReceitaLocalizacao"> | number | null
    cidade?: StringFilter<"ReceitaLocalizacao"> | string
    estado?: StringFilter<"ReceitaLocalizacao"> | string
    data?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaLocalizacao"> | string
    valorTotal?: DecimalFilter<"ReceitaLocalizacao"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaLocalizacao"> | number
    quantidadeItens?: IntFilter<"ReceitaLocalizacao"> | number
    createdAt?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }, "id">

  export type ReceitaLocalizacaoOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceitaLocalizacaoCountOrderByAggregateInput
    _avg?: ReceitaLocalizacaoAvgOrderByAggregateInput
    _max?: ReceitaLocalizacaoMaxOrderByAggregateInput
    _min?: ReceitaLocalizacaoMinOrderByAggregateInput
    _sum?: ReceitaLocalizacaoSumOrderByAggregateInput
  }

  export type ReceitaLocalizacaoScalarWhereWithAggregatesInput = {
    AND?: ReceitaLocalizacaoScalarWhereWithAggregatesInput | ReceitaLocalizacaoScalarWhereWithAggregatesInput[]
    OR?: ReceitaLocalizacaoScalarWhereWithAggregatesInput[]
    NOT?: ReceitaLocalizacaoScalarWhereWithAggregatesInput | ReceitaLocalizacaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReceitaLocalizacao"> | number
    filialId?: IntNullableWithAggregatesFilter<"ReceitaLocalizacao"> | number | null
    cidade?: StringWithAggregatesFilter<"ReceitaLocalizacao"> | string
    estado?: StringWithAggregatesFilter<"ReceitaLocalizacao"> | string
    data?: DateTimeWithAggregatesFilter<"ReceitaLocalizacao"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ReceitaLocalizacao"> | string
    valorTotal?: DecimalWithAggregatesFilter<"ReceitaLocalizacao"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"ReceitaLocalizacao"> | number
    quantidadeItens?: IntWithAggregatesFilter<"ReceitaLocalizacao"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ReceitaLocalizacao"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReceitaLocalizacao"> | Date | string
  }

  export type ReceitaVendedorWhereInput = {
    AND?: ReceitaVendedorWhereInput | ReceitaVendedorWhereInput[]
    OR?: ReceitaVendedorWhereInput[]
    NOT?: ReceitaVendedorWhereInput | ReceitaVendedorWhereInput[]
    id?: IntFilter<"ReceitaVendedor"> | number
    filialId?: IntNullableFilter<"ReceitaVendedor"> | number | null
    vendedorId?: IntFilter<"ReceitaVendedor"> | number
    data?: DateTimeFilter<"ReceitaVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaVendedor"> | string
    valorTotal?: DecimalFilter<"ReceitaVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaVendedor"> | number
    quantidadeItens?: IntFilter<"ReceitaVendedor"> | number
    createdAt?: DateTimeFilter<"ReceitaVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaVendedor"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }

  export type ReceitaVendedorOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    vendedor?: VendedorOrderByWithRelationInput
    _relevance?: ReceitaVendedorOrderByRelevanceInput
  }

  export type ReceitaVendedorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReceitaVendedorWhereInput | ReceitaVendedorWhereInput[]
    OR?: ReceitaVendedorWhereInput[]
    NOT?: ReceitaVendedorWhereInput | ReceitaVendedorWhereInput[]
    filialId?: IntNullableFilter<"ReceitaVendedor"> | number | null
    vendedorId?: IntFilter<"ReceitaVendedor"> | number
    data?: DateTimeFilter<"ReceitaVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaVendedor"> | string
    valorTotal?: DecimalFilter<"ReceitaVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaVendedor"> | number
    quantidadeItens?: IntFilter<"ReceitaVendedor"> | number
    createdAt?: DateTimeFilter<"ReceitaVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaVendedor"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }, "id">

  export type ReceitaVendedorOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceitaVendedorCountOrderByAggregateInput
    _avg?: ReceitaVendedorAvgOrderByAggregateInput
    _max?: ReceitaVendedorMaxOrderByAggregateInput
    _min?: ReceitaVendedorMinOrderByAggregateInput
    _sum?: ReceitaVendedorSumOrderByAggregateInput
  }

  export type ReceitaVendedorScalarWhereWithAggregatesInput = {
    AND?: ReceitaVendedorScalarWhereWithAggregatesInput | ReceitaVendedorScalarWhereWithAggregatesInput[]
    OR?: ReceitaVendedorScalarWhereWithAggregatesInput[]
    NOT?: ReceitaVendedorScalarWhereWithAggregatesInput | ReceitaVendedorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReceitaVendedor"> | number
    filialId?: IntNullableWithAggregatesFilter<"ReceitaVendedor"> | number | null
    vendedorId?: IntWithAggregatesFilter<"ReceitaVendedor"> | number
    data?: DateTimeWithAggregatesFilter<"ReceitaVendedor"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ReceitaVendedor"> | string
    valorTotal?: DecimalWithAggregatesFilter<"ReceitaVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"ReceitaVendedor"> | number
    quantidadeItens?: IntWithAggregatesFilter<"ReceitaVendedor"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ReceitaVendedor"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReceitaVendedor"> | Date | string
  }

  export type EstatisticasNotasFiscaisWhereInput = {
    AND?: EstatisticasNotasFiscaisWhereInput | EstatisticasNotasFiscaisWhereInput[]
    OR?: EstatisticasNotasFiscaisWhereInput[]
    NOT?: EstatisticasNotasFiscaisWhereInput | EstatisticasNotasFiscaisWhereInput[]
    id?: IntFilter<"EstatisticasNotasFiscais"> | number
    filialId?: IntNullableFilter<"EstatisticasNotasFiscais"> | number | null
    data?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
    tipoPeriodo?: StringFilter<"EstatisticasNotasFiscais"> | string
    quantidadeNotas?: IntFilter<"EstatisticasNotasFiscais"> | number
    quantidadeItens?: IntFilter<"EstatisticasNotasFiscais"> | number
    mediaItensPorNota?: DecimalFilter<"EstatisticasNotasFiscais"> | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFilter<"EstatisticasNotasFiscais"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
    updatedAt?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }

  export type EstatisticasNotasFiscaisOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    mediaItensPorNota?: SortOrder
    valorTotalNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: EstatisticasNotasFiscaisOrderByRelevanceInput
  }

  export type EstatisticasNotasFiscaisWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstatisticasNotasFiscaisWhereInput | EstatisticasNotasFiscaisWhereInput[]
    OR?: EstatisticasNotasFiscaisWhereInput[]
    NOT?: EstatisticasNotasFiscaisWhereInput | EstatisticasNotasFiscaisWhereInput[]
    filialId?: IntNullableFilter<"EstatisticasNotasFiscais"> | number | null
    data?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
    tipoPeriodo?: StringFilter<"EstatisticasNotasFiscais"> | string
    quantidadeNotas?: IntFilter<"EstatisticasNotasFiscais"> | number
    quantidadeItens?: IntFilter<"EstatisticasNotasFiscais"> | number
    mediaItensPorNota?: DecimalFilter<"EstatisticasNotasFiscais"> | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFilter<"EstatisticasNotasFiscais"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
    updatedAt?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
  }, "id">

  export type EstatisticasNotasFiscaisOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    mediaItensPorNota?: SortOrder
    valorTotalNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EstatisticasNotasFiscaisCountOrderByAggregateInput
    _avg?: EstatisticasNotasFiscaisAvgOrderByAggregateInput
    _max?: EstatisticasNotasFiscaisMaxOrderByAggregateInput
    _min?: EstatisticasNotasFiscaisMinOrderByAggregateInput
    _sum?: EstatisticasNotasFiscaisSumOrderByAggregateInput
  }

  export type EstatisticasNotasFiscaisScalarWhereWithAggregatesInput = {
    AND?: EstatisticasNotasFiscaisScalarWhereWithAggregatesInput | EstatisticasNotasFiscaisScalarWhereWithAggregatesInput[]
    OR?: EstatisticasNotasFiscaisScalarWhereWithAggregatesInput[]
    NOT?: EstatisticasNotasFiscaisScalarWhereWithAggregatesInput | EstatisticasNotasFiscaisScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EstatisticasNotasFiscais"> | number
    filialId?: IntNullableWithAggregatesFilter<"EstatisticasNotasFiscais"> | number | null
    data?: DateTimeWithAggregatesFilter<"EstatisticasNotasFiscais"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"EstatisticasNotasFiscais"> | string
    quantidadeNotas?: IntWithAggregatesFilter<"EstatisticasNotasFiscais"> | number
    quantidadeItens?: IntWithAggregatesFilter<"EstatisticasNotasFiscais"> | number
    mediaItensPorNota?: DecimalWithAggregatesFilter<"EstatisticasNotasFiscais"> | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalWithAggregatesFilter<"EstatisticasNotasFiscais"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"EstatisticasNotasFiscais"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"EstatisticasNotasFiscais"> | Date | string
  }

  export type ReceitaVendedorDetalhadaWhereInput = {
    AND?: ReceitaVendedorDetalhadaWhereInput | ReceitaVendedorDetalhadaWhereInput[]
    OR?: ReceitaVendedorDetalhadaWhereInput[]
    NOT?: ReceitaVendedorDetalhadaWhereInput | ReceitaVendedorDetalhadaWhereInput[]
    id?: IntFilter<"ReceitaVendedorDetalhada"> | number
    filialId?: IntNullableFilter<"ReceitaVendedorDetalhada"> | number | null
    vendedorId?: IntFilter<"ReceitaVendedorDetalhada"> | number
    data?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaVendedorDetalhada"> | string
    receitaTotal?: DecimalFilter<"ReceitaVendedorDetalhada"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaVendedorDetalhada"> | number
    dataInicio?: DateTimeNullableFilter<"ReceitaVendedorDetalhada"> | Date | string | null
    dataFim?: DateTimeNullableFilter<"ReceitaVendedorDetalhada"> | Date | string | null
    createdAt?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }

  export type ReceitaVendedorDetalhadaOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    dataInicio?: SortOrderInput | SortOrder
    dataFim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    vendedor?: VendedorOrderByWithRelationInput
    _relevance?: ReceitaVendedorDetalhadaOrderByRelevanceInput
  }

  export type ReceitaVendedorDetalhadaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReceitaVendedorDetalhadaWhereInput | ReceitaVendedorDetalhadaWhereInput[]
    OR?: ReceitaVendedorDetalhadaWhereInput[]
    NOT?: ReceitaVendedorDetalhadaWhereInput | ReceitaVendedorDetalhadaWhereInput[]
    filialId?: IntNullableFilter<"ReceitaVendedorDetalhada"> | number | null
    vendedorId?: IntFilter<"ReceitaVendedorDetalhada"> | number
    data?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaVendedorDetalhada"> | string
    receitaTotal?: DecimalFilter<"ReceitaVendedorDetalhada"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaVendedorDetalhada"> | number
    dataInicio?: DateTimeNullableFilter<"ReceitaVendedorDetalhada"> | Date | string | null
    dataFim?: DateTimeNullableFilter<"ReceitaVendedorDetalhada"> | Date | string | null
    createdAt?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }, "id">

  export type ReceitaVendedorDetalhadaOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    dataInicio?: SortOrderInput | SortOrder
    dataFim?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceitaVendedorDetalhadaCountOrderByAggregateInput
    _avg?: ReceitaVendedorDetalhadaAvgOrderByAggregateInput
    _max?: ReceitaVendedorDetalhadaMaxOrderByAggregateInput
    _min?: ReceitaVendedorDetalhadaMinOrderByAggregateInput
    _sum?: ReceitaVendedorDetalhadaSumOrderByAggregateInput
  }

  export type ReceitaVendedorDetalhadaScalarWhereWithAggregatesInput = {
    AND?: ReceitaVendedorDetalhadaScalarWhereWithAggregatesInput | ReceitaVendedorDetalhadaScalarWhereWithAggregatesInput[]
    OR?: ReceitaVendedorDetalhadaScalarWhereWithAggregatesInput[]
    NOT?: ReceitaVendedorDetalhadaScalarWhereWithAggregatesInput | ReceitaVendedorDetalhadaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReceitaVendedorDetalhada"> | number
    filialId?: IntNullableWithAggregatesFilter<"ReceitaVendedorDetalhada"> | number | null
    vendedorId?: IntWithAggregatesFilter<"ReceitaVendedorDetalhada"> | number
    data?: DateTimeWithAggregatesFilter<"ReceitaVendedorDetalhada"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ReceitaVendedorDetalhada"> | string
    receitaTotal?: DecimalWithAggregatesFilter<"ReceitaVendedorDetalhada"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntWithAggregatesFilter<"ReceitaVendedorDetalhada"> | number
    dataInicio?: DateTimeNullableWithAggregatesFilter<"ReceitaVendedorDetalhada"> | Date | string | null
    dataFim?: DateTimeNullableWithAggregatesFilter<"ReceitaVendedorDetalhada"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ReceitaVendedorDetalhada"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReceitaVendedorDetalhada"> | Date | string
  }

  export type TicketMedioVendedorWhereInput = {
    AND?: TicketMedioVendedorWhereInput | TicketMedioVendedorWhereInput[]
    OR?: TicketMedioVendedorWhereInput[]
    NOT?: TicketMedioVendedorWhereInput | TicketMedioVendedorWhereInput[]
    id?: IntFilter<"TicketMedioVendedor"> | number
    filialId?: IntNullableFilter<"TicketMedioVendedor"> | number | null
    vendedorId?: IntFilter<"TicketMedioVendedor"> | number
    data?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"TicketMedioVendedor"> | string
    ticketMedio?: DecimalFilter<"TicketMedioVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"TicketMedioVendedor"> | number
    valorTotal?: DecimalFilter<"TicketMedioVendedor"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }

  export type TicketMedioVendedorOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedio?: SortOrder
    quantidadeNotas?: SortOrder
    valorTotal?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    vendedor?: VendedorOrderByWithRelationInput
    _relevance?: TicketMedioVendedorOrderByRelevanceInput
  }

  export type TicketMedioVendedorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TicketMedioVendedorWhereInput | TicketMedioVendedorWhereInput[]
    OR?: TicketMedioVendedorWhereInput[]
    NOT?: TicketMedioVendedorWhereInput | TicketMedioVendedorWhereInput[]
    filialId?: IntNullableFilter<"TicketMedioVendedor"> | number | null
    vendedorId?: IntFilter<"TicketMedioVendedor"> | number
    data?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"TicketMedioVendedor"> | string
    ticketMedio?: DecimalFilter<"TicketMedioVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"TicketMedioVendedor"> | number
    valorTotal?: DecimalFilter<"TicketMedioVendedor"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }, "id">

  export type TicketMedioVendedorOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedio?: SortOrder
    quantidadeNotas?: SortOrder
    valorTotal?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TicketMedioVendedorCountOrderByAggregateInput
    _avg?: TicketMedioVendedorAvgOrderByAggregateInput
    _max?: TicketMedioVendedorMaxOrderByAggregateInput
    _min?: TicketMedioVendedorMinOrderByAggregateInput
    _sum?: TicketMedioVendedorSumOrderByAggregateInput
  }

  export type TicketMedioVendedorScalarWhereWithAggregatesInput = {
    AND?: TicketMedioVendedorScalarWhereWithAggregatesInput | TicketMedioVendedorScalarWhereWithAggregatesInput[]
    OR?: TicketMedioVendedorScalarWhereWithAggregatesInput[]
    NOT?: TicketMedioVendedorScalarWhereWithAggregatesInput | TicketMedioVendedorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TicketMedioVendedor"> | number
    filialId?: IntNullableWithAggregatesFilter<"TicketMedioVendedor"> | number | null
    vendedorId?: IntWithAggregatesFilter<"TicketMedioVendedor"> | number
    data?: DateTimeWithAggregatesFilter<"TicketMedioVendedor"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"TicketMedioVendedor"> | string
    ticketMedio?: DecimalWithAggregatesFilter<"TicketMedioVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntWithAggregatesFilter<"TicketMedioVendedor"> | number
    valorTotal?: DecimalWithAggregatesFilter<"TicketMedioVendedor"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"TicketMedioVendedor"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TicketMedioVendedor"> | Date | string
  }

  export type MixVendedorWhereInput = {
    AND?: MixVendedorWhereInput | MixVendedorWhereInput[]
    OR?: MixVendedorWhereInput[]
    NOT?: MixVendedorWhereInput | MixVendedorWhereInput[]
    id?: IntFilter<"MixVendedor"> | number
    filialId?: IntNullableFilter<"MixVendedor"> | number | null
    vendedorId?: IntFilter<"MixVendedor"> | number
    data?: DateTimeFilter<"MixVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"MixVendedor"> | string
    receitaMaquinas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFilter<"MixVendedor"> | number
    quantidadeNotasPecas?: IntFilter<"MixVendedor"> | number
    quantidadeNotasServicos?: IntFilter<"MixVendedor"> | number
    createdAt?: DateTimeFilter<"MixVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"MixVendedor"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }

  export type MixVendedorOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    vendedor?: VendedorOrderByWithRelationInput
    _relevance?: MixVendedorOrderByRelevanceInput
  }

  export type MixVendedorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MixVendedorWhereInput | MixVendedorWhereInput[]
    OR?: MixVendedorWhereInput[]
    NOT?: MixVendedorWhereInput | MixVendedorWhereInput[]
    filialId?: IntNullableFilter<"MixVendedor"> | number | null
    vendedorId?: IntFilter<"MixVendedor"> | number
    data?: DateTimeFilter<"MixVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"MixVendedor"> | string
    receitaMaquinas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFilter<"MixVendedor"> | number
    quantidadeNotasPecas?: IntFilter<"MixVendedor"> | number
    quantidadeNotasServicos?: IntFilter<"MixVendedor"> | number
    createdAt?: DateTimeFilter<"MixVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"MixVendedor"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }, "id">

  export type MixVendedorOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MixVendedorCountOrderByAggregateInput
    _avg?: MixVendedorAvgOrderByAggregateInput
    _max?: MixVendedorMaxOrderByAggregateInput
    _min?: MixVendedorMinOrderByAggregateInput
    _sum?: MixVendedorSumOrderByAggregateInput
  }

  export type MixVendedorScalarWhereWithAggregatesInput = {
    AND?: MixVendedorScalarWhereWithAggregatesInput | MixVendedorScalarWhereWithAggregatesInput[]
    OR?: MixVendedorScalarWhereWithAggregatesInput[]
    NOT?: MixVendedorScalarWhereWithAggregatesInput | MixVendedorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MixVendedor"> | number
    filialId?: IntNullableWithAggregatesFilter<"MixVendedor"> | number | null
    vendedorId?: IntWithAggregatesFilter<"MixVendedor"> | number
    data?: DateTimeWithAggregatesFilter<"MixVendedor"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"MixVendedor"> | string
    receitaMaquinas?: DecimalWithAggregatesFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalWithAggregatesFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalWithAggregatesFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalWithAggregatesFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalWithAggregatesFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalWithAggregatesFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntWithAggregatesFilter<"MixVendedor"> | number
    quantidadeNotasPecas?: IntWithAggregatesFilter<"MixVendedor"> | number
    quantidadeNotasServicos?: IntWithAggregatesFilter<"MixVendedor"> | number
    createdAt?: DateTimeWithAggregatesFilter<"MixVendedor"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MixVendedor"> | Date | string
  }

  export type CoberturaCarteiraWhereInput = {
    AND?: CoberturaCarteiraWhereInput | CoberturaCarteiraWhereInput[]
    OR?: CoberturaCarteiraWhereInput[]
    NOT?: CoberturaCarteiraWhereInput | CoberturaCarteiraWhereInput[]
    id?: IntFilter<"CoberturaCarteira"> | number
    filialId?: IntNullableFilter<"CoberturaCarteira"> | number | null
    vendedorId?: IntFilter<"CoberturaCarteira"> | number
    data?: DateTimeFilter<"CoberturaCarteira"> | Date | string
    tipoPeriodo?: StringFilter<"CoberturaCarteira"> | string
    clientesUnicosAtendidos?: IntFilter<"CoberturaCarteira"> | number
    clientesAtivos?: IntFilter<"CoberturaCarteira"> | number
    percentualCobertura?: DecimalFilter<"CoberturaCarteira"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"CoberturaCarteira"> | Date | string
    updatedAt?: DateTimeFilter<"CoberturaCarteira"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }

  export type CoberturaCarteiraOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    clientesUnicosAtendidos?: SortOrder
    clientesAtivos?: SortOrder
    percentualCobertura?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    vendedor?: VendedorOrderByWithRelationInput
    _relevance?: CoberturaCarteiraOrderByRelevanceInput
  }

  export type CoberturaCarteiraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CoberturaCarteiraWhereInput | CoberturaCarteiraWhereInput[]
    OR?: CoberturaCarteiraWhereInput[]
    NOT?: CoberturaCarteiraWhereInput | CoberturaCarteiraWhereInput[]
    filialId?: IntNullableFilter<"CoberturaCarteira"> | number | null
    vendedorId?: IntFilter<"CoberturaCarteira"> | number
    data?: DateTimeFilter<"CoberturaCarteira"> | Date | string
    tipoPeriodo?: StringFilter<"CoberturaCarteira"> | string
    clientesUnicosAtendidos?: IntFilter<"CoberturaCarteira"> | number
    clientesAtivos?: IntFilter<"CoberturaCarteira"> | number
    percentualCobertura?: DecimalFilter<"CoberturaCarteira"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"CoberturaCarteira"> | Date | string
    updatedAt?: DateTimeFilter<"CoberturaCarteira"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }, "id">

  export type CoberturaCarteiraOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    clientesUnicosAtendidos?: SortOrder
    clientesAtivos?: SortOrder
    percentualCobertura?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CoberturaCarteiraCountOrderByAggregateInput
    _avg?: CoberturaCarteiraAvgOrderByAggregateInput
    _max?: CoberturaCarteiraMaxOrderByAggregateInput
    _min?: CoberturaCarteiraMinOrderByAggregateInput
    _sum?: CoberturaCarteiraSumOrderByAggregateInput
  }

  export type CoberturaCarteiraScalarWhereWithAggregatesInput = {
    AND?: CoberturaCarteiraScalarWhereWithAggregatesInput | CoberturaCarteiraScalarWhereWithAggregatesInput[]
    OR?: CoberturaCarteiraScalarWhereWithAggregatesInput[]
    NOT?: CoberturaCarteiraScalarWhereWithAggregatesInput | CoberturaCarteiraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CoberturaCarteira"> | number
    filialId?: IntNullableWithAggregatesFilter<"CoberturaCarteira"> | number | null
    vendedorId?: IntWithAggregatesFilter<"CoberturaCarteira"> | number
    data?: DateTimeWithAggregatesFilter<"CoberturaCarteira"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"CoberturaCarteira"> | string
    clientesUnicosAtendidos?: IntWithAggregatesFilter<"CoberturaCarteira"> | number
    clientesAtivos?: IntWithAggregatesFilter<"CoberturaCarteira"> | number
    percentualCobertura?: DecimalWithAggregatesFilter<"CoberturaCarteira"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"CoberturaCarteira"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CoberturaCarteira"> | Date | string
  }

  export type RankingVendedoresWhereInput = {
    AND?: RankingVendedoresWhereInput | RankingVendedoresWhereInput[]
    OR?: RankingVendedoresWhereInput[]
    NOT?: RankingVendedoresWhereInput | RankingVendedoresWhereInput[]
    id?: IntFilter<"RankingVendedores"> | number
    filialId?: IntNullableFilter<"RankingVendedores"> | number | null
    vendedorId?: IntFilter<"RankingVendedores"> | number
    data?: DateTimeFilter<"RankingVendedores"> | Date | string
    tipoPeriodo?: StringFilter<"RankingVendedores"> | string
    tipoRanking?: StringFilter<"RankingVendedores"> | string
    posicaoRanking?: IntFilter<"RankingVendedores"> | number
    valorMetrica?: DecimalFilter<"RankingVendedores"> | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFilter<"RankingVendedores"> | number
    percentilRanking?: DecimalFilter<"RankingVendedores"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"RankingVendedores"> | Date | string
    updatedAt?: DateTimeFilter<"RankingVendedores"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }

  export type RankingVendedoresOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoRanking?: SortOrder
    posicaoRanking?: SortOrder
    valorMetrica?: SortOrder
    totalVendedores?: SortOrder
    percentilRanking?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    vendedor?: VendedorOrderByWithRelationInput
    _relevance?: RankingVendedoresOrderByRelevanceInput
  }

  export type RankingVendedoresWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RankingVendedoresWhereInput | RankingVendedoresWhereInput[]
    OR?: RankingVendedoresWhereInput[]
    NOT?: RankingVendedoresWhereInput | RankingVendedoresWhereInput[]
    filialId?: IntNullableFilter<"RankingVendedores"> | number | null
    vendedorId?: IntFilter<"RankingVendedores"> | number
    data?: DateTimeFilter<"RankingVendedores"> | Date | string
    tipoPeriodo?: StringFilter<"RankingVendedores"> | string
    tipoRanking?: StringFilter<"RankingVendedores"> | string
    posicaoRanking?: IntFilter<"RankingVendedores"> | number
    valorMetrica?: DecimalFilter<"RankingVendedores"> | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFilter<"RankingVendedores"> | number
    percentilRanking?: DecimalFilter<"RankingVendedores"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"RankingVendedores"> | Date | string
    updatedAt?: DateTimeFilter<"RankingVendedores"> | Date | string
    filial?: XOR<FilialNullableScalarRelationFilter, FilialWhereInput> | null
    vendedor?: XOR<VendedorScalarRelationFilter, VendedorWhereInput>
  }, "id">

  export type RankingVendedoresOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoRanking?: SortOrder
    posicaoRanking?: SortOrder
    valorMetrica?: SortOrder
    totalVendedores?: SortOrder
    percentilRanking?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RankingVendedoresCountOrderByAggregateInput
    _avg?: RankingVendedoresAvgOrderByAggregateInput
    _max?: RankingVendedoresMaxOrderByAggregateInput
    _min?: RankingVendedoresMinOrderByAggregateInput
    _sum?: RankingVendedoresSumOrderByAggregateInput
  }

  export type RankingVendedoresScalarWhereWithAggregatesInput = {
    AND?: RankingVendedoresScalarWhereWithAggregatesInput | RankingVendedoresScalarWhereWithAggregatesInput[]
    OR?: RankingVendedoresScalarWhereWithAggregatesInput[]
    NOT?: RankingVendedoresScalarWhereWithAggregatesInput | RankingVendedoresScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RankingVendedores"> | number
    filialId?: IntNullableWithAggregatesFilter<"RankingVendedores"> | number | null
    vendedorId?: IntWithAggregatesFilter<"RankingVendedores"> | number
    data?: DateTimeWithAggregatesFilter<"RankingVendedores"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"RankingVendedores"> | string
    tipoRanking?: StringWithAggregatesFilter<"RankingVendedores"> | string
    posicaoRanking?: IntWithAggregatesFilter<"RankingVendedores"> | number
    valorMetrica?: DecimalWithAggregatesFilter<"RankingVendedores"> | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntWithAggregatesFilter<"RankingVendedores"> | number
    percentilRanking?: DecimalWithAggregatesFilter<"RankingVendedores"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"RankingVendedores"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RankingVendedores"> | Date | string
  }

  export type ReceitaFilialWhereInput = {
    AND?: ReceitaFilialWhereInput | ReceitaFilialWhereInput[]
    OR?: ReceitaFilialWhereInput[]
    NOT?: ReceitaFilialWhereInput | ReceitaFilialWhereInput[]
    id?: IntFilter<"ReceitaFilial"> | number
    filialId?: IntFilter<"ReceitaFilial"> | number
    data?: DateTimeFilter<"ReceitaFilial"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaFilial"> | string
    receitaTotal?: DecimalFilter<"ReceitaFilial"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaFilial"> | number
    ticketMedio?: DecimalFilter<"ReceitaFilial"> | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFilter<"ReceitaFilial"> | number
    createdAt?: DateTimeFilter<"ReceitaFilial"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaFilial"> | Date | string
    filial?: XOR<FilialScalarRelationFilter, FilialWhereInput>
  }

  export type ReceitaFilialOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    ticketMedio?: SortOrder
    numeroItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: ReceitaFilialOrderByRelevanceInput
  }

  export type ReceitaFilialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReceitaFilialWhereInput | ReceitaFilialWhereInput[]
    OR?: ReceitaFilialWhereInput[]
    NOT?: ReceitaFilialWhereInput | ReceitaFilialWhereInput[]
    filialId?: IntFilter<"ReceitaFilial"> | number
    data?: DateTimeFilter<"ReceitaFilial"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaFilial"> | string
    receitaTotal?: DecimalFilter<"ReceitaFilial"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaFilial"> | number
    ticketMedio?: DecimalFilter<"ReceitaFilial"> | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFilter<"ReceitaFilial"> | number
    createdAt?: DateTimeFilter<"ReceitaFilial"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaFilial"> | Date | string
    filial?: XOR<FilialScalarRelationFilter, FilialWhereInput>
  }, "id">

  export type ReceitaFilialOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    ticketMedio?: SortOrder
    numeroItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceitaFilialCountOrderByAggregateInput
    _avg?: ReceitaFilialAvgOrderByAggregateInput
    _max?: ReceitaFilialMaxOrderByAggregateInput
    _min?: ReceitaFilialMinOrderByAggregateInput
    _sum?: ReceitaFilialSumOrderByAggregateInput
  }

  export type ReceitaFilialScalarWhereWithAggregatesInput = {
    AND?: ReceitaFilialScalarWhereWithAggregatesInput | ReceitaFilialScalarWhereWithAggregatesInput[]
    OR?: ReceitaFilialScalarWhereWithAggregatesInput[]
    NOT?: ReceitaFilialScalarWhereWithAggregatesInput | ReceitaFilialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReceitaFilial"> | number
    filialId?: IntWithAggregatesFilter<"ReceitaFilial"> | number
    data?: DateTimeWithAggregatesFilter<"ReceitaFilial"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ReceitaFilial"> | string
    receitaTotal?: DecimalWithAggregatesFilter<"ReceitaFilial"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntWithAggregatesFilter<"ReceitaFilial"> | number
    ticketMedio?: DecimalWithAggregatesFilter<"ReceitaFilial"> | Decimal | DecimalJsLike | number | string
    numeroItens?: IntWithAggregatesFilter<"ReceitaFilial"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ReceitaFilial"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReceitaFilial"> | Date | string
  }

  export type MixFilialWhereInput = {
    AND?: MixFilialWhereInput | MixFilialWhereInput[]
    OR?: MixFilialWhereInput[]
    NOT?: MixFilialWhereInput | MixFilialWhereInput[]
    id?: IntFilter<"MixFilial"> | number
    filialId?: IntFilter<"MixFilial"> | number
    data?: DateTimeFilter<"MixFilial"> | Date | string
    tipoPeriodo?: StringFilter<"MixFilial"> | string
    receitaMaquinas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFilter<"MixFilial"> | number
    quantidadeNotasPecas?: IntFilter<"MixFilial"> | number
    quantidadeNotasServicos?: IntFilter<"MixFilial"> | number
    createdAt?: DateTimeFilter<"MixFilial"> | Date | string
    updatedAt?: DateTimeFilter<"MixFilial"> | Date | string
    filial?: XOR<FilialScalarRelationFilter, FilialWhereInput>
  }

  export type MixFilialOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: MixFilialOrderByRelevanceInput
  }

  export type MixFilialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MixFilialWhereInput | MixFilialWhereInput[]
    OR?: MixFilialWhereInput[]
    NOT?: MixFilialWhereInput | MixFilialWhereInput[]
    filialId?: IntFilter<"MixFilial"> | number
    data?: DateTimeFilter<"MixFilial"> | Date | string
    tipoPeriodo?: StringFilter<"MixFilial"> | string
    receitaMaquinas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFilter<"MixFilial"> | number
    quantidadeNotasPecas?: IntFilter<"MixFilial"> | number
    quantidadeNotasServicos?: IntFilter<"MixFilial"> | number
    createdAt?: DateTimeFilter<"MixFilial"> | Date | string
    updatedAt?: DateTimeFilter<"MixFilial"> | Date | string
    filial?: XOR<FilialScalarRelationFilter, FilialWhereInput>
  }, "id">

  export type MixFilialOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MixFilialCountOrderByAggregateInput
    _avg?: MixFilialAvgOrderByAggregateInput
    _max?: MixFilialMaxOrderByAggregateInput
    _min?: MixFilialMinOrderByAggregateInput
    _sum?: MixFilialSumOrderByAggregateInput
  }

  export type MixFilialScalarWhereWithAggregatesInput = {
    AND?: MixFilialScalarWhereWithAggregatesInput | MixFilialScalarWhereWithAggregatesInput[]
    OR?: MixFilialScalarWhereWithAggregatesInput[]
    NOT?: MixFilialScalarWhereWithAggregatesInput | MixFilialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MixFilial"> | number
    filialId?: IntWithAggregatesFilter<"MixFilial"> | number
    data?: DateTimeWithAggregatesFilter<"MixFilial"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"MixFilial"> | string
    receitaMaquinas?: DecimalWithAggregatesFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalWithAggregatesFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalWithAggregatesFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalWithAggregatesFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalWithAggregatesFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalWithAggregatesFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntWithAggregatesFilter<"MixFilial"> | number
    quantidadeNotasPecas?: IntWithAggregatesFilter<"MixFilial"> | number
    quantidadeNotasServicos?: IntWithAggregatesFilter<"MixFilial"> | number
    createdAt?: DateTimeWithAggregatesFilter<"MixFilial"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MixFilial"> | Date | string
  }

  export type ParticipacaoReceitaFilialWhereInput = {
    AND?: ParticipacaoReceitaFilialWhereInput | ParticipacaoReceitaFilialWhereInput[]
    OR?: ParticipacaoReceitaFilialWhereInput[]
    NOT?: ParticipacaoReceitaFilialWhereInput | ParticipacaoReceitaFilialWhereInput[]
    id?: IntFilter<"ParticipacaoReceitaFilial"> | number
    filialId?: IntFilter<"ParticipacaoReceitaFilial"> | number
    data?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
    tipoPeriodo?: StringFilter<"ParticipacaoReceitaFilial"> | string
    receitaFilial?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFilter<"ParticipacaoReceitaFilial"> | number
    totalFiliais?: IntFilter<"ParticipacaoReceitaFilial"> | number
    createdAt?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
    updatedAt?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
    filial?: XOR<FilialScalarRelationFilter, FilialWhereInput>
  }

  export type ParticipacaoReceitaFilialOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaFilial?: SortOrder
    receitaTotalEmpresa?: SortOrder
    percentualParticipacao?: SortOrder
    posicaoRanking?: SortOrder
    totalFiliais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: ParticipacaoReceitaFilialOrderByRelevanceInput
  }

  export type ParticipacaoReceitaFilialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ParticipacaoReceitaFilialWhereInput | ParticipacaoReceitaFilialWhereInput[]
    OR?: ParticipacaoReceitaFilialWhereInput[]
    NOT?: ParticipacaoReceitaFilialWhereInput | ParticipacaoReceitaFilialWhereInput[]
    filialId?: IntFilter<"ParticipacaoReceitaFilial"> | number
    data?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
    tipoPeriodo?: StringFilter<"ParticipacaoReceitaFilial"> | string
    receitaFilial?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFilter<"ParticipacaoReceitaFilial"> | number
    totalFiliais?: IntFilter<"ParticipacaoReceitaFilial"> | number
    createdAt?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
    updatedAt?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
    filial?: XOR<FilialScalarRelationFilter, FilialWhereInput>
  }, "id">

  export type ParticipacaoReceitaFilialOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaFilial?: SortOrder
    receitaTotalEmpresa?: SortOrder
    percentualParticipacao?: SortOrder
    posicaoRanking?: SortOrder
    totalFiliais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ParticipacaoReceitaFilialCountOrderByAggregateInput
    _avg?: ParticipacaoReceitaFilialAvgOrderByAggregateInput
    _max?: ParticipacaoReceitaFilialMaxOrderByAggregateInput
    _min?: ParticipacaoReceitaFilialMinOrderByAggregateInput
    _sum?: ParticipacaoReceitaFilialSumOrderByAggregateInput
  }

  export type ParticipacaoReceitaFilialScalarWhereWithAggregatesInput = {
    AND?: ParticipacaoReceitaFilialScalarWhereWithAggregatesInput | ParticipacaoReceitaFilialScalarWhereWithAggregatesInput[]
    OR?: ParticipacaoReceitaFilialScalarWhereWithAggregatesInput[]
    NOT?: ParticipacaoReceitaFilialScalarWhereWithAggregatesInput | ParticipacaoReceitaFilialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ParticipacaoReceitaFilial"> | number
    filialId?: IntWithAggregatesFilter<"ParticipacaoReceitaFilial"> | number
    data?: DateTimeWithAggregatesFilter<"ParticipacaoReceitaFilial"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ParticipacaoReceitaFilial"> | string
    receitaFilial?: DecimalWithAggregatesFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalWithAggregatesFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalWithAggregatesFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntWithAggregatesFilter<"ParticipacaoReceitaFilial"> | number
    totalFiliais?: IntWithAggregatesFilter<"ParticipacaoReceitaFilial"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ParticipacaoReceitaFilial"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ParticipacaoReceitaFilial"> | Date | string
  }

  export type ReceitaFilialRegiaoWhereInput = {
    AND?: ReceitaFilialRegiaoWhereInput | ReceitaFilialRegiaoWhereInput[]
    OR?: ReceitaFilialRegiaoWhereInput[]
    NOT?: ReceitaFilialRegiaoWhereInput | ReceitaFilialRegiaoWhereInput[]
    id?: IntFilter<"ReceitaFilialRegiao"> | number
    filialId?: IntFilter<"ReceitaFilialRegiao"> | number
    data?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaFilialRegiao"> | string
    regiaoCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    estadoCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    cidadeCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    receitaRegiao?: DecimalFilter<"ReceitaFilialRegiao"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaFilialRegiao"> | number
    numeroClientes?: IntFilter<"ReceitaFilialRegiao"> | number
    percentualReceita?: DecimalFilter<"ReceitaFilialRegiao"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
    filial?: XOR<FilialScalarRelationFilter, FilialWhereInput>
  }

  export type ReceitaFilialRegiaoOrderByWithRelationInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    regiaoCliente?: SortOrder
    estadoCliente?: SortOrder
    cidadeCliente?: SortOrder
    receitaRegiao?: SortOrder
    numeroNotas?: SortOrder
    numeroClientes?: SortOrder
    percentualReceita?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    filial?: FilialOrderByWithRelationInput
    _relevance?: ReceitaFilialRegiaoOrderByRelevanceInput
  }

  export type ReceitaFilialRegiaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReceitaFilialRegiaoWhereInput | ReceitaFilialRegiaoWhereInput[]
    OR?: ReceitaFilialRegiaoWhereInput[]
    NOT?: ReceitaFilialRegiaoWhereInput | ReceitaFilialRegiaoWhereInput[]
    filialId?: IntFilter<"ReceitaFilialRegiao"> | number
    data?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaFilialRegiao"> | string
    regiaoCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    estadoCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    cidadeCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    receitaRegiao?: DecimalFilter<"ReceitaFilialRegiao"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaFilialRegiao"> | number
    numeroClientes?: IntFilter<"ReceitaFilialRegiao"> | number
    percentualReceita?: DecimalFilter<"ReceitaFilialRegiao"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
    filial?: XOR<FilialScalarRelationFilter, FilialWhereInput>
  }, "id">

  export type ReceitaFilialRegiaoOrderByWithAggregationInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    regiaoCliente?: SortOrder
    estadoCliente?: SortOrder
    cidadeCliente?: SortOrder
    receitaRegiao?: SortOrder
    numeroNotas?: SortOrder
    numeroClientes?: SortOrder
    percentualReceita?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceitaFilialRegiaoCountOrderByAggregateInput
    _avg?: ReceitaFilialRegiaoAvgOrderByAggregateInput
    _max?: ReceitaFilialRegiaoMaxOrderByAggregateInput
    _min?: ReceitaFilialRegiaoMinOrderByAggregateInput
    _sum?: ReceitaFilialRegiaoSumOrderByAggregateInput
  }

  export type ReceitaFilialRegiaoScalarWhereWithAggregatesInput = {
    AND?: ReceitaFilialRegiaoScalarWhereWithAggregatesInput | ReceitaFilialRegiaoScalarWhereWithAggregatesInput[]
    OR?: ReceitaFilialRegiaoScalarWhereWithAggregatesInput[]
    NOT?: ReceitaFilialRegiaoScalarWhereWithAggregatesInput | ReceitaFilialRegiaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ReceitaFilialRegiao"> | number
    filialId?: IntWithAggregatesFilter<"ReceitaFilialRegiao"> | number
    data?: DateTimeWithAggregatesFilter<"ReceitaFilialRegiao"> | Date | string
    tipoPeriodo?: StringWithAggregatesFilter<"ReceitaFilialRegiao"> | string
    regiaoCliente?: StringWithAggregatesFilter<"ReceitaFilialRegiao"> | string
    estadoCliente?: StringWithAggregatesFilter<"ReceitaFilialRegiao"> | string
    cidadeCliente?: StringWithAggregatesFilter<"ReceitaFilialRegiao"> | string
    receitaRegiao?: DecimalWithAggregatesFilter<"ReceitaFilialRegiao"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntWithAggregatesFilter<"ReceitaFilialRegiao"> | number
    numeroClientes?: IntWithAggregatesFilter<"ReceitaFilialRegiao"> | number
    percentualReceita?: DecimalWithAggregatesFilter<"ReceitaFilialRegiao"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"ReceitaFilialRegiao"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ReceitaFilialRegiao"> | Date | string
  }

  export type ConfiguracaoInatividadeWhereInput = {
    AND?: ConfiguracaoInatividadeWhereInput | ConfiguracaoInatividadeWhereInput[]
    OR?: ConfiguracaoInatividadeWhereInput[]
    NOT?: ConfiguracaoInatividadeWhereInput | ConfiguracaoInatividadeWhereInput[]
    id?: IntFilter<"ConfiguracaoInatividade"> | number
    empresaId?: IntFilter<"ConfiguracaoInatividade"> | number
    diasSemCompra?: IntFilter<"ConfiguracaoInatividade"> | number
    valorMinimoCompra?: DecimalNullableFilter<"ConfiguracaoInatividade"> | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolFilter<"ConfiguracaoInatividade"> | boolean
    tiposClienteExcluidos?: StringNullableFilter<"ConfiguracaoInatividade"> | string | null
    ativo?: BoolFilter<"ConfiguracaoInatividade"> | boolean
    createdAt?: DateTimeFilter<"ConfiguracaoInatividade"> | Date | string
    updatedAt?: DateTimeFilter<"ConfiguracaoInatividade"> | Date | string
    empresa?: XOR<EmpresaScalarRelationFilter, EmpresaWhereInput>
  }

  export type ConfiguracaoInatividadeOrderByWithRelationInput = {
    id?: SortOrder
    empresaId?: SortOrder
    diasSemCompra?: SortOrder
    valorMinimoCompra?: SortOrderInput | SortOrder
    considerarTipoCliente?: SortOrder
    tiposClienteExcluidos?: SortOrderInput | SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    empresa?: EmpresaOrderByWithRelationInput
    _relevance?: ConfiguracaoInatividadeOrderByRelevanceInput
  }

  export type ConfiguracaoInatividadeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    empresaId?: number
    AND?: ConfiguracaoInatividadeWhereInput | ConfiguracaoInatividadeWhereInput[]
    OR?: ConfiguracaoInatividadeWhereInput[]
    NOT?: ConfiguracaoInatividadeWhereInput | ConfiguracaoInatividadeWhereInput[]
    diasSemCompra?: IntFilter<"ConfiguracaoInatividade"> | number
    valorMinimoCompra?: DecimalNullableFilter<"ConfiguracaoInatividade"> | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolFilter<"ConfiguracaoInatividade"> | boolean
    tiposClienteExcluidos?: StringNullableFilter<"ConfiguracaoInatividade"> | string | null
    ativo?: BoolFilter<"ConfiguracaoInatividade"> | boolean
    createdAt?: DateTimeFilter<"ConfiguracaoInatividade"> | Date | string
    updatedAt?: DateTimeFilter<"ConfiguracaoInatividade"> | Date | string
    empresa?: XOR<EmpresaScalarRelationFilter, EmpresaWhereInput>
  }, "id" | "empresaId">

  export type ConfiguracaoInatividadeOrderByWithAggregationInput = {
    id?: SortOrder
    empresaId?: SortOrder
    diasSemCompra?: SortOrder
    valorMinimoCompra?: SortOrderInput | SortOrder
    considerarTipoCliente?: SortOrder
    tiposClienteExcluidos?: SortOrderInput | SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ConfiguracaoInatividadeCountOrderByAggregateInput
    _avg?: ConfiguracaoInatividadeAvgOrderByAggregateInput
    _max?: ConfiguracaoInatividadeMaxOrderByAggregateInput
    _min?: ConfiguracaoInatividadeMinOrderByAggregateInput
    _sum?: ConfiguracaoInatividadeSumOrderByAggregateInput
  }

  export type ConfiguracaoInatividadeScalarWhereWithAggregatesInput = {
    AND?: ConfiguracaoInatividadeScalarWhereWithAggregatesInput | ConfiguracaoInatividadeScalarWhereWithAggregatesInput[]
    OR?: ConfiguracaoInatividadeScalarWhereWithAggregatesInput[]
    NOT?: ConfiguracaoInatividadeScalarWhereWithAggregatesInput | ConfiguracaoInatividadeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ConfiguracaoInatividade"> | number
    empresaId?: IntWithAggregatesFilter<"ConfiguracaoInatividade"> | number
    diasSemCompra?: IntWithAggregatesFilter<"ConfiguracaoInatividade"> | number
    valorMinimoCompra?: DecimalNullableWithAggregatesFilter<"ConfiguracaoInatividade"> | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolWithAggregatesFilter<"ConfiguracaoInatividade"> | boolean
    tiposClienteExcluidos?: StringNullableWithAggregatesFilter<"ConfiguracaoInatividade"> | string | null
    ativo?: BoolWithAggregatesFilter<"ConfiguracaoInatividade"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ConfiguracaoInatividade"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ConfiguracaoInatividade"> | Date | string
  }

  export type RFVTipoNegocioWhereInput = {
    AND?: RFVTipoNegocioWhereInput | RFVTipoNegocioWhereInput[]
    OR?: RFVTipoNegocioWhereInput[]
    NOT?: RFVTipoNegocioWhereInput | RFVTipoNegocioWhereInput[]
    id?: IntFilter<"RFVTipoNegocio"> | number
    clienteId?: IntFilter<"RFVTipoNegocio"> | number
    tipoNegocio?: StringFilter<"RFVTipoNegocio"> | string
    dataAnalise?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
    periodoAnalise?: StringFilter<"RFVTipoNegocio"> | string
    recencia?: IntFilter<"RFVTipoNegocio"> | number
    frequencia?: IntFilter<"RFVTipoNegocio"> | number
    valorMonetario?: DecimalFilter<"RFVTipoNegocio"> | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFilter<"RFVTipoNegocio"> | number
    scoreFrequencia?: IntFilter<"RFVTipoNegocio"> | number
    scoreValor?: IntFilter<"RFVTipoNegocio"> | number
    scoreRFV?: DecimalFilter<"RFVTipoNegocio"> | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFilter<"RFVTipoNegocio"> | string
    rankingAutomatico?: StringNullableFilter<"RFVTipoNegocio"> | string | null
    createdAt?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
    updatedAt?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
  }

  export type RFVTipoNegocioOrderByWithRelationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    tipoNegocio?: SortOrder
    dataAnalise?: SortOrder
    periodoAnalise?: SortOrder
    recencia?: SortOrder
    frequencia?: SortOrder
    valorMonetario?: SortOrder
    scoreRecencia?: SortOrder
    scoreFrequencia?: SortOrder
    scoreValor?: SortOrder
    scoreRFV?: SortOrder
    segmentoRFV?: SortOrder
    rankingAutomatico?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cliente?: ClienteOrderByWithRelationInput
    _relevance?: RFVTipoNegocioOrderByRelevanceInput
  }

  export type RFVTipoNegocioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RFVTipoNegocioWhereInput | RFVTipoNegocioWhereInput[]
    OR?: RFVTipoNegocioWhereInput[]
    NOT?: RFVTipoNegocioWhereInput | RFVTipoNegocioWhereInput[]
    clienteId?: IntFilter<"RFVTipoNegocio"> | number
    tipoNegocio?: StringFilter<"RFVTipoNegocio"> | string
    dataAnalise?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
    periodoAnalise?: StringFilter<"RFVTipoNegocio"> | string
    recencia?: IntFilter<"RFVTipoNegocio"> | number
    frequencia?: IntFilter<"RFVTipoNegocio"> | number
    valorMonetario?: DecimalFilter<"RFVTipoNegocio"> | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFilter<"RFVTipoNegocio"> | number
    scoreFrequencia?: IntFilter<"RFVTipoNegocio"> | number
    scoreValor?: IntFilter<"RFVTipoNegocio"> | number
    scoreRFV?: DecimalFilter<"RFVTipoNegocio"> | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFilter<"RFVTipoNegocio"> | string
    rankingAutomatico?: StringNullableFilter<"RFVTipoNegocio"> | string | null
    createdAt?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
    updatedAt?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
  }, "id">

  export type RFVTipoNegocioOrderByWithAggregationInput = {
    id?: SortOrder
    clienteId?: SortOrder
    tipoNegocio?: SortOrder
    dataAnalise?: SortOrder
    periodoAnalise?: SortOrder
    recencia?: SortOrder
    frequencia?: SortOrder
    valorMonetario?: SortOrder
    scoreRecencia?: SortOrder
    scoreFrequencia?: SortOrder
    scoreValor?: SortOrder
    scoreRFV?: SortOrder
    segmentoRFV?: SortOrder
    rankingAutomatico?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RFVTipoNegocioCountOrderByAggregateInput
    _avg?: RFVTipoNegocioAvgOrderByAggregateInput
    _max?: RFVTipoNegocioMaxOrderByAggregateInput
    _min?: RFVTipoNegocioMinOrderByAggregateInput
    _sum?: RFVTipoNegocioSumOrderByAggregateInput
  }

  export type RFVTipoNegocioScalarWhereWithAggregatesInput = {
    AND?: RFVTipoNegocioScalarWhereWithAggregatesInput | RFVTipoNegocioScalarWhereWithAggregatesInput[]
    OR?: RFVTipoNegocioScalarWhereWithAggregatesInput[]
    NOT?: RFVTipoNegocioScalarWhereWithAggregatesInput | RFVTipoNegocioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RFVTipoNegocio"> | number
    clienteId?: IntWithAggregatesFilter<"RFVTipoNegocio"> | number
    tipoNegocio?: StringWithAggregatesFilter<"RFVTipoNegocio"> | string
    dataAnalise?: DateTimeWithAggregatesFilter<"RFVTipoNegocio"> | Date | string
    periodoAnalise?: StringWithAggregatesFilter<"RFVTipoNegocio"> | string
    recencia?: IntWithAggregatesFilter<"RFVTipoNegocio"> | number
    frequencia?: IntWithAggregatesFilter<"RFVTipoNegocio"> | number
    valorMonetario?: DecimalWithAggregatesFilter<"RFVTipoNegocio"> | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntWithAggregatesFilter<"RFVTipoNegocio"> | number
    scoreFrequencia?: IntWithAggregatesFilter<"RFVTipoNegocio"> | number
    scoreValor?: IntWithAggregatesFilter<"RFVTipoNegocio"> | number
    scoreRFV?: DecimalWithAggregatesFilter<"RFVTipoNegocio"> | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringWithAggregatesFilter<"RFVTipoNegocio"> | string
    rankingAutomatico?: StringNullableWithAggregatesFilter<"RFVTipoNegocio"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RFVTipoNegocio"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RFVTipoNegocio"> | Date | string
  }

  export type AssociacaoProdutoCreateInput = {
    id?: bigint | number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
    produtoA: ProdutoCreateNestedOneWithoutAssociacoesAInput
    produtoB: ProdutoCreateNestedOneWithoutAssociacoesBInput
  }

  export type AssociacaoProdutoUncheckedCreateInput = {
    id?: bigint | number
    produto_a_id: number
    produto_b_id: number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
  }

  export type AssociacaoProdutoUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    produtoA?: ProdutoUpdateOneRequiredWithoutAssociacoesANestedInput
    produtoB?: ProdutoUpdateOneRequiredWithoutAssociacoesBNestedInput
  }

  export type AssociacaoProdutoUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    produto_a_id?: IntFieldUpdateOperationsInput | number
    produto_b_id?: IntFieldUpdateOperationsInput | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssociacaoProdutoCreateManyInput = {
    id?: bigint | number
    produto_a_id: number
    produto_b_id: number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
  }

  export type AssociacaoProdutoUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssociacaoProdutoUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    produto_a_id?: IntFieldUpdateOperationsInput | number
    produto_b_id?: IntFieldUpdateOperationsInput | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EmpresaCreateInput = {
    razaoSocial: string
    nomeFantasia?: string | null
    cnpjMatriz: string
    inscricaoEstadual?: string | null
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    email?: string | null
    ativo?: boolean
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    filiais?: FilialCreateNestedManyWithoutEmpresaInput
    configuracaoInatividade?: ConfiguracaoInatividadeCreateNestedOneWithoutEmpresaInput
  }

  export type EmpresaUncheckedCreateInput = {
    id?: number
    razaoSocial: string
    nomeFantasia?: string | null
    cnpjMatriz: string
    inscricaoEstadual?: string | null
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    email?: string | null
    ativo?: boolean
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    filiais?: FilialUncheckedCreateNestedManyWithoutEmpresaInput
    configuracaoInatividade?: ConfiguracaoInatividadeUncheckedCreateNestedOneWithoutEmpresaInput
  }

  export type EmpresaUpdateInput = {
    razaoSocial?: StringFieldUpdateOperationsInput | string
    nomeFantasia?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjMatriz?: StringFieldUpdateOperationsInput | string
    inscricaoEstadual?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: FilialUpdateManyWithoutEmpresaNestedInput
    configuracaoInatividade?: ConfiguracaoInatividadeUpdateOneWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    razaoSocial?: StringFieldUpdateOperationsInput | string
    nomeFantasia?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjMatriz?: StringFieldUpdateOperationsInput | string
    inscricaoEstadual?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: FilialUncheckedUpdateManyWithoutEmpresaNestedInput
    configuracaoInatividade?: ConfiguracaoInatividadeUncheckedUpdateOneWithoutEmpresaNestedInput
  }

  export type EmpresaCreateManyInput = {
    id?: number
    razaoSocial: string
    nomeFantasia?: string | null
    cnpjMatriz: string
    inscricaoEstadual?: string | null
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    email?: string | null
    ativo?: boolean
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
  }

  export type EmpresaUpdateManyMutationInput = {
    razaoSocial?: StringFieldUpdateOperationsInput | string
    nomeFantasia?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjMatriz?: StringFieldUpdateOperationsInput | string
    inscricaoEstadual?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EmpresaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    razaoSocial?: StringFieldUpdateOperationsInput | string
    nomeFantasia?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjMatriz?: StringFieldUpdateOperationsInput | string
    inscricaoEstadual?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteCreateInput = {
    nome: string
    cpfCnpj: string
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutClienteInput
    rfvTipoNegocio?: RFVTipoNegocioCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateInput = {
    id?: number
    nome: string
    cpfCnpj: string
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutClienteInput
    rfvTipoNegocio?: RFVTipoNegocioUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpfCnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutClienteNestedInput
    rfvTipoNegocio?: RFVTipoNegocioUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpfCnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutClienteNestedInput
    rfvTipoNegocio?: RFVTipoNegocioUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteCreateManyInput = {
    id?: number
    nome: string
    cpfCnpj: string
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
  }

  export type ClienteUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpfCnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClienteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpfCnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FilialCreateInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateManyInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
  }

  export type FilialUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FilialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VendedorCreateInput = {
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresCreateNestedManyWithoutVendedorInput
    filial?: FilialCreateNestedOneWithoutVendedoresInput
  }

  export type VendedorUncheckedCreateInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorUncheckedCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUpdateManyWithoutVendedorNestedInput
    filial?: FilialUpdateOneWithoutVendedoresNestedInput
  }

  export type VendedorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type VendedorCreateManyInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
  }

  export type VendedorUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
  }

  export type VendedorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ProdutoCreateInput = {
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoUncheckedCreateInput = {
    id?: number
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemUncheckedCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUpdateManyWithoutProdutoBNestedInput
  }

  export type ProdutoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUncheckedUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBNestedInput
  }

  export type ProdutoCreateManyInput = {
    id?: number
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
  }

  export type ProdutoUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ProdutoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type MaquinaEstoqueCreateInput = {
    Chassi: string
    Status?: string | null
    produto: ProdutoCreateNestedOneWithoutMaquinasEstoqueInput
    filial?: FilialCreateNestedOneWithoutMaquinasEstoqueInput
    Notas_Fiscais_Itens?: NotaFiscalItemCreateNestedManyWithoutMaquinas_EstoqueInput
  }

  export type MaquinaEstoqueUncheckedCreateInput = {
    Chassi: string
    produtoId: number
    filialId?: number | null
    Status?: string | null
    Notas_Fiscais_Itens?: NotaFiscalItemUncheckedCreateNestedManyWithoutMaquinas_EstoqueInput
  }

  export type MaquinaEstoqueUpdateInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    Status?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: ProdutoUpdateOneRequiredWithoutMaquinasEstoqueNestedInput
    filial?: FilialUpdateOneWithoutMaquinasEstoqueNestedInput
    Notas_Fiscais_Itens?: NotaFiscalItemUpdateManyWithoutMaquinas_EstoqueNestedInput
  }

  export type MaquinaEstoqueUncheckedUpdateInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    produtoId?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    Status?: NullableStringFieldUpdateOperationsInput | string | null
    Notas_Fiscais_Itens?: NotaFiscalItemUncheckedUpdateManyWithoutMaquinas_EstoqueNestedInput
  }

  export type MaquinaEstoqueCreateManyInput = {
    Chassi: string
    produtoId: number
    filialId?: number | null
    Status?: string | null
  }

  export type MaquinaEstoqueUpdateManyMutationInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    Status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaquinaEstoqueUncheckedUpdateManyInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    produtoId?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    Status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotasFiscalCabecalhoCreateInput = {
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filial?: FilialCreateNestedOneWithoutNotasFiscaisInput
    cliente?: ClienteCreateNestedOneWithoutNotasFiscaisInput
    vendedor?: VendedorCreateNestedOneWithoutNotasFiscaisInput
    itens?: NotaFiscalItemCreateNestedManyWithoutNotaFiscalInput
  }

  export type NotasFiscalCabecalhoUncheckedCreateInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filialId?: number | null
    clienteId?: number | null
    vendedorId?: number | null
    itens?: NotaFiscalItemUncheckedCreateNestedManyWithoutNotaFiscalInput
  }

  export type NotasFiscalCabecalhoUpdateInput = {
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filial?: FilialUpdateOneWithoutNotasFiscaisNestedInput
    cliente?: ClienteUpdateOneWithoutNotasFiscaisNestedInput
    vendedor?: VendedorUpdateOneWithoutNotasFiscaisNestedInput
    itens?: NotaFiscalItemUpdateManyWithoutNotaFiscalNestedInput
  }

  export type NotasFiscalCabecalhoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: NullableIntFieldUpdateOperationsInput | number | null
    itens?: NotaFiscalItemUncheckedUpdateManyWithoutNotaFiscalNestedInput
  }

  export type NotasFiscalCabecalhoCreateManyInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filialId?: number | null
    clienteId?: number | null
    vendedorId?: number | null
  }

  export type NotasFiscalCabecalhoUpdateManyMutationInput = {
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type NotasFiscalCabecalhoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type NotaFiscalItemCreateInput = {
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Maquinas_Estoque?: MaquinaEstoqueCreateNestedOneWithoutNotas_Fiscais_ItensInput
    notaFiscal: NotasFiscalCabecalhoCreateNestedOneWithoutItensInput
    produto: ProdutoCreateNestedOneWithoutNotasFiscaisItensInput
  }

  export type NotaFiscalItemUncheckedCreateInput = {
    id?: number
    notaFiscalId: number
    produtoId: number
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Chassi?: string | null
  }

  export type NotaFiscalItemUpdateInput = {
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Maquinas_Estoque?: MaquinaEstoqueUpdateOneWithoutNotas_Fiscais_ItensNestedInput
    notaFiscal?: NotasFiscalCabecalhoUpdateOneRequiredWithoutItensNestedInput
    produto?: ProdutoUpdateOneRequiredWithoutNotasFiscaisItensNestedInput
  }

  export type NotaFiscalItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    notaFiscalId?: IntFieldUpdateOperationsInput | number
    produtoId?: IntFieldUpdateOperationsInput | number
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Chassi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotaFiscalItemCreateManyInput = {
    id?: number
    notaFiscalId: number
    produtoId: number
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Chassi?: string | null
  }

  export type NotaFiscalItemUpdateManyMutationInput = {
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type NotaFiscalItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    notaFiscalId?: IntFieldUpdateOperationsInput | number
    produtoId?: IntFieldUpdateOperationsInput | number
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Chassi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    email: string
    password: string
    createdAt?: Date | string
  }

  export type UserUncheckedCreateInput = {
    id?: number
    email: string
    password: string
    createdAt?: Date | string
  }

  export type UserUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyInput = {
    id?: number
    email: string
    password: string
    createdAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RfvParameterSetCreateInput = {
    name: string
    strategy?: $Enums.RfvStrategy
    windowDays?: number
    weights: JsonNullValueInput | InputJsonValue
    ruleRecency: JsonNullValueInput | InputJsonValue
    ruleFrequency: JsonNullValueInput | InputJsonValue
    ruleValue: JsonNullValueInput | InputJsonValue
    effectiveFrom: Date | string
    effectiveTo?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calculationStrategy?: $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    filial?: FilialCreateNestedOneWithoutRfvParameterSetsInput
    segments?: RfvSegmentCreateNestedManyWithoutParameterSetInput
  }

  export type RfvParameterSetUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    name: string
    strategy?: $Enums.RfvStrategy
    windowDays?: number
    weights: JsonNullValueInput | InputJsonValue
    ruleRecency: JsonNullValueInput | InputJsonValue
    ruleFrequency: JsonNullValueInput | InputJsonValue
    ruleValue: JsonNullValueInput | InputJsonValue
    effectiveFrom: Date | string
    effectiveTo?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calculationStrategy?: $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    segments?: RfvSegmentUncheckedCreateNestedManyWithoutParameterSetInput
  }

  export type RfvParameterSetUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    filial?: FilialUpdateOneWithoutRfvParameterSetsNestedInput
    segments?: RfvSegmentUpdateManyWithoutParameterSetNestedInput
  }

  export type RfvParameterSetUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    segments?: RfvSegmentUncheckedUpdateManyWithoutParameterSetNestedInput
  }

  export type RfvParameterSetCreateManyInput = {
    id?: number
    filialId?: number | null
    name: string
    strategy?: $Enums.RfvStrategy
    windowDays?: number
    weights: JsonNullValueInput | InputJsonValue
    ruleRecency: JsonNullValueInput | InputJsonValue
    ruleFrequency: JsonNullValueInput | InputJsonValue
    ruleValue: JsonNullValueInput | InputJsonValue
    effectiveFrom: Date | string
    effectiveTo?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calculationStrategy?: $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type RfvParameterSetUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type RfvParameterSetUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type RfvSegmentCreateInput = {
    name: string
    rules: JsonNullValueInput | InputJsonValue
    priority?: number
    parameterSet: RfvParameterSetCreateNestedOneWithoutSegmentsInput
  }

  export type RfvSegmentUncheckedCreateInput = {
    id?: number
    parameterSetId: number
    name: string
    rules: JsonNullValueInput | InputJsonValue
    priority?: number
  }

  export type RfvSegmentUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    rules?: JsonNullValueInput | InputJsonValue
    priority?: IntFieldUpdateOperationsInput | number
    parameterSet?: RfvParameterSetUpdateOneRequiredWithoutSegmentsNestedInput
  }

  export type RfvSegmentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    parameterSetId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rules?: JsonNullValueInput | InputJsonValue
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type RfvSegmentCreateManyInput = {
    id?: number
    parameterSetId: number
    name: string
    rules: JsonNullValueInput | InputJsonValue
    priority?: number
  }

  export type RfvSegmentUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    rules?: JsonNullValueInput | InputJsonValue
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type RfvSegmentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    parameterSetId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rules?: JsonNullValueInput | InputJsonValue
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type ReceitaPeriodoCreateInput = {
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasPeriodoInput
  }

  export type ReceitaPeriodoUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaPeriodoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasPeriodoNestedInput
  }

  export type ReceitaPeriodoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaPeriodoCreateManyInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaPeriodoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaPeriodoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaTipoProdutoCreateInput = {
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasTipoProdutoInput
    produto?: ProdutoCreateNestedOneWithoutReceitasTipoInput
  }

  export type ReceitaTipoProdutoUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    produtoId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaTipoProdutoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasTipoProdutoNestedInput
    produto?: ProdutoUpdateOneWithoutReceitasTipoNestedInput
  }

  export type ReceitaTipoProdutoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    produtoId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaTipoProdutoCreateManyInput = {
    id?: number
    filialId?: number | null
    produtoId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaTipoProdutoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaTipoProdutoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    produtoId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaProdutoModeloCreateInput = {
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasProdutoModeloInput
    produto: ProdutoCreateNestedOneWithoutReceitasModeloInput
  }

  export type ReceitaProdutoModeloUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    produtoId: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaProdutoModeloUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasProdutoModeloNestedInput
    produto?: ProdutoUpdateOneRequiredWithoutReceitasModeloNestedInput
  }

  export type ReceitaProdutoModeloUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    produtoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaProdutoModeloCreateManyInput = {
    id?: number
    filialId?: number | null
    produtoId: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaProdutoModeloUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaProdutoModeloUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    produtoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrescimentoVendasCreateInput = {
    data: Date | string
    tipoPeriodo: string
    tipoComparacao: string
    valorAtual: Decimal | DecimalJsLike | number | string
    valorAnterior: Decimal | DecimalJsLike | number | string
    crescimento: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutCrescimentoVendasInput
  }

  export type CrescimentoVendasUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoComparacao: string
    valorAtual: Decimal | DecimalJsLike | number | string
    valorAnterior: Decimal | DecimalJsLike | number | string
    crescimento: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CrescimentoVendasUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoComparacao?: StringFieldUpdateOperationsInput | string
    valorAtual?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutCrescimentoVendasNestedInput
  }

  export type CrescimentoVendasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoComparacao?: StringFieldUpdateOperationsInput | string
    valorAtual?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrescimentoVendasCreateManyInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoComparacao: string
    valorAtual: Decimal | DecimalJsLike | number | string
    valorAnterior: Decimal | DecimalJsLike | number | string
    crescimento: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CrescimentoVendasUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoComparacao?: StringFieldUpdateOperationsInput | string
    valorAtual?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrescimentoVendasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoComparacao?: StringFieldUpdateOperationsInput | string
    valorAtual?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioCreateInput = {
    data: Date | string
    tipoPeriodo: string
    ticketMedioNF: Decimal | DecimalJsLike | number | string
    ticketMedioItem: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutTicketsMediosInput
  }

  export type TicketMedioUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    ticketMedioNF: Decimal | DecimalJsLike | number | string
    ticketMedioItem: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedioNF?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutTicketsMediosNestedInput
  }

  export type TicketMedioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedioNF?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioCreateManyInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    ticketMedioNF: Decimal | DecimalJsLike | number | string
    ticketMedioItem: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedioNF?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedioNF?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItensPorNFCreateInput = {
    data: Date | string
    tipoPeriodo: string
    mediaItens: Decimal | DecimalJsLike | number | string
    p95Itens: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutItensPorNFInput
  }

  export type ItensPorNFUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    mediaItens: Decimal | DecimalJsLike | number | string
    p95Itens: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ItensPorNFUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    mediaItens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutItensPorNFNestedInput
  }

  export type ItensPorNFUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    mediaItens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItensPorNFCreateManyInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    mediaItens: Decimal | DecimalJsLike | number | string
    p95Itens: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ItensPorNFUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    mediaItens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItensPorNFUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    mediaItens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SazonalidadeCreateInput = {
    ano: number
    mes: number
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    percentualAno: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutSazonalidadesInput
  }

  export type SazonalidadeUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    ano: number
    mes: number
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    percentualAno: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SazonalidadeUpdateInput = {
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    percentualAno?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutSazonalidadesNestedInput
  }

  export type SazonalidadeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    percentualAno?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SazonalidadeCreateManyInput = {
    id?: number
    filialId?: number | null
    ano: number
    mes: number
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    percentualAno: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SazonalidadeUpdateManyMutationInput = {
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    percentualAno?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SazonalidadeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    percentualAno?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaLocalizacaoCreateInput = {
    cidade: string
    estado: string
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasLocalizacaoInput
  }

  export type ReceitaLocalizacaoUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    cidade: string
    estado: string
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaLocalizacaoUpdateInput = {
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasLocalizacaoNestedInput
  }

  export type ReceitaLocalizacaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaLocalizacaoCreateManyInput = {
    id?: number
    filialId?: number | null
    cidade: string
    estado: string
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaLocalizacaoUpdateManyMutationInput = {
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaLocalizacaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorCreateInput = {
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasVendedorInput
    vendedor: VendedorCreateNestedOneWithoutReceitasVendedorInput
  }

  export type ReceitaVendedorUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasVendedorNestedInput
    vendedor?: VendedorUpdateOneRequiredWithoutReceitasVendedorNestedInput
  }

  export type ReceitaVendedorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorCreateManyInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstatisticasNotasFiscaisCreateInput = {
    data: Date | string
    tipoPeriodo: string
    quantidadeNotas: number
    quantidadeItens: number
    mediaItensPorNota: Decimal | DecimalJsLike | number | string
    valorTotalNotas: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutEstatisticasNotasFiscaisInput
  }

  export type EstatisticasNotasFiscaisUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    quantidadeNotas: number
    quantidadeItens: number
    mediaItensPorNota: Decimal | DecimalJsLike | number | string
    valorTotalNotas: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EstatisticasNotasFiscaisUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    mediaItensPorNota?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutEstatisticasNotasFiscaisNestedInput
  }

  export type EstatisticasNotasFiscaisUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    mediaItensPorNota?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstatisticasNotasFiscaisCreateManyInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    quantidadeNotas: number
    quantidadeItens: number
    mediaItensPorNota: Decimal | DecimalJsLike | number | string
    valorTotalNotas: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EstatisticasNotasFiscaisUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    mediaItensPorNota?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstatisticasNotasFiscaisUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    mediaItensPorNota?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorDetalhadaCreateInput = {
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasVendedorDetalhadasInput
    vendedor: VendedorCreateNestedOneWithoutReceitasDetalhadasInput
  }

  export type ReceitaVendedorDetalhadaUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorDetalhadaUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasVendedorDetalhadasNestedInput
    vendedor?: VendedorUpdateOneRequiredWithoutReceitasDetalhadasNestedInput
  }

  export type ReceitaVendedorDetalhadaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorDetalhadaCreateManyInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorDetalhadaUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorDetalhadaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioVendedorCreateInput = {
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutTicketsMediosVendedorInput
    vendedor: VendedorCreateNestedOneWithoutTicketsMediosInput
  }

  export type TicketMedioVendedorUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioVendedorUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutTicketsMediosVendedorNestedInput
    vendedor?: VendedorUpdateOneRequiredWithoutTicketsMediosNestedInput
  }

  export type TicketMedioVendedorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioVendedorCreateManyInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioVendedorUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioVendedorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixVendedorCreateInput = {
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutMixVendedoresInput
    vendedor: VendedorCreateNestedOneWithoutMixVendasInput
  }

  export type MixVendedorUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixVendedorUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutMixVendedoresNestedInput
    vendedor?: VendedorUpdateOneRequiredWithoutMixVendasNestedInput
  }

  export type MixVendedorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixVendedorCreateManyInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixVendedorUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixVendedorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CoberturaCarteiraCreateInput = {
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutCoberturaCarteirasInput
    vendedor: VendedorCreateNestedOneWithoutCoberturaCarteiraInput
  }

  export type CoberturaCarteiraUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CoberturaCarteiraUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutCoberturaCarteirasNestedInput
    vendedor?: VendedorUpdateOneRequiredWithoutCoberturaCarteiraNestedInput
  }

  export type CoberturaCarteiraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CoberturaCarteiraCreateManyInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CoberturaCarteiraUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CoberturaCarteiraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RankingVendedoresCreateInput = {
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutRankingVendedoresInput
    vendedor: VendedorCreateNestedOneWithoutRankingsInput
  }

  export type RankingVendedoresUncheckedCreateInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RankingVendedoresUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutRankingVendedoresNestedInput
    vendedor?: VendedorUpdateOneRequiredWithoutRankingsNestedInput
  }

  export type RankingVendedoresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RankingVendedoresCreateManyInput = {
    id?: number
    filialId?: number | null
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RankingVendedoresUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RankingVendedoresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialCreateInput = {
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    ticketMedio: Decimal | DecimalJsLike | number | string
    numeroItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial: FilialCreateNestedOneWithoutReceitasFilialInput
  }

  export type ReceitaFilialUncheckedCreateInput = {
    id?: number
    filialId: number
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    ticketMedio: Decimal | DecimalJsLike | number | string
    numeroItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneRequiredWithoutReceitasFilialNestedInput
  }

  export type ReceitaFilialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialCreateManyInput = {
    id?: number
    filialId: number
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    ticketMedio: Decimal | DecimalJsLike | number | string
    numeroItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixFilialCreateInput = {
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial: FilialCreateNestedOneWithoutMixFiliaisInput
  }

  export type MixFilialUncheckedCreateInput = {
    id?: number
    filialId: number
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixFilialUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneRequiredWithoutMixFiliaisNestedInput
  }

  export type MixFilialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixFilialCreateManyInput = {
    id?: number
    filialId: number
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixFilialUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixFilialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParticipacaoReceitaFilialCreateInput = {
    data: Date | string
    tipoPeriodo: string
    receitaFilial: Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa: Decimal | DecimalJsLike | number | string
    percentualParticipacao: Decimal | DecimalJsLike | number | string
    posicaoRanking: number
    totalFiliais: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial: FilialCreateNestedOneWithoutParticipacaoReceitaInput
  }

  export type ParticipacaoReceitaFilialUncheckedCreateInput = {
    id?: number
    filialId: number
    data: Date | string
    tipoPeriodo: string
    receitaFilial: Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa: Decimal | DecimalJsLike | number | string
    percentualParticipacao: Decimal | DecimalJsLike | number | string
    posicaoRanking: number
    totalFiliais: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ParticipacaoReceitaFilialUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaFilial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    totalFiliais?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneRequiredWithoutParticipacaoReceitaNestedInput
  }

  export type ParticipacaoReceitaFilialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaFilial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    totalFiliais?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParticipacaoReceitaFilialCreateManyInput = {
    id?: number
    filialId: number
    data: Date | string
    tipoPeriodo: string
    receitaFilial: Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa: Decimal | DecimalJsLike | number | string
    percentualParticipacao: Decimal | DecimalJsLike | number | string
    posicaoRanking: number
    totalFiliais: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ParticipacaoReceitaFilialUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaFilial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    totalFiliais?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParticipacaoReceitaFilialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaFilial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    totalFiliais?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialRegiaoCreateInput = {
    data: Date | string
    tipoPeriodo: string
    regiaoCliente: string
    estadoCliente: string
    cidadeCliente: string
    receitaRegiao: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    numeroClientes: number
    percentualReceita: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial: FilialCreateNestedOneWithoutReceitasRegioesInput
  }

  export type ReceitaFilialRegiaoUncheckedCreateInput = {
    id?: number
    filialId: number
    data: Date | string
    tipoPeriodo: string
    regiaoCliente: string
    estadoCliente: string
    cidadeCliente: string
    receitaRegiao: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    numeroClientes: number
    percentualReceita: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialRegiaoUpdateInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    regiaoCliente?: StringFieldUpdateOperationsInput | string
    estadoCliente?: StringFieldUpdateOperationsInput | string
    cidadeCliente?: StringFieldUpdateOperationsInput | string
    receitaRegiao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    numeroClientes?: IntFieldUpdateOperationsInput | number
    percentualReceita?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneRequiredWithoutReceitasRegioesNestedInput
  }

  export type ReceitaFilialRegiaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    regiaoCliente?: StringFieldUpdateOperationsInput | string
    estadoCliente?: StringFieldUpdateOperationsInput | string
    cidadeCliente?: StringFieldUpdateOperationsInput | string
    receitaRegiao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    numeroClientes?: IntFieldUpdateOperationsInput | number
    percentualReceita?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialRegiaoCreateManyInput = {
    id?: number
    filialId: number
    data: Date | string
    tipoPeriodo: string
    regiaoCliente: string
    estadoCliente: string
    cidadeCliente: string
    receitaRegiao: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    numeroClientes: number
    percentualReceita: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialRegiaoUpdateManyMutationInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    regiaoCliente?: StringFieldUpdateOperationsInput | string
    estadoCliente?: StringFieldUpdateOperationsInput | string
    cidadeCliente?: StringFieldUpdateOperationsInput | string
    receitaRegiao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    numeroClientes?: IntFieldUpdateOperationsInput | number
    percentualReceita?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialRegiaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    regiaoCliente?: StringFieldUpdateOperationsInput | string
    estadoCliente?: StringFieldUpdateOperationsInput | string
    cidadeCliente?: StringFieldUpdateOperationsInput | string
    receitaRegiao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    numeroClientes?: IntFieldUpdateOperationsInput | number
    percentualReceita?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracaoInatividadeCreateInput = {
    diasSemCompra: number
    valorMinimoCompra?: Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: boolean
    tiposClienteExcluidos?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    empresa: EmpresaCreateNestedOneWithoutConfiguracaoInatividadeInput
  }

  export type ConfiguracaoInatividadeUncheckedCreateInput = {
    id?: number
    empresaId: number
    diasSemCompra: number
    valorMinimoCompra?: Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: boolean
    tiposClienteExcluidos?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfiguracaoInatividadeUpdateInput = {
    diasSemCompra?: IntFieldUpdateOperationsInput | number
    valorMinimoCompra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolFieldUpdateOperationsInput | boolean
    tiposClienteExcluidos?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    empresa?: EmpresaUpdateOneRequiredWithoutConfiguracaoInatividadeNestedInput
  }

  export type ConfiguracaoInatividadeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    diasSemCompra?: IntFieldUpdateOperationsInput | number
    valorMinimoCompra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolFieldUpdateOperationsInput | boolean
    tiposClienteExcluidos?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracaoInatividadeCreateManyInput = {
    id?: number
    empresaId: number
    diasSemCompra: number
    valorMinimoCompra?: Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: boolean
    tiposClienteExcluidos?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfiguracaoInatividadeUpdateManyMutationInput = {
    diasSemCompra?: IntFieldUpdateOperationsInput | number
    valorMinimoCompra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolFieldUpdateOperationsInput | boolean
    tiposClienteExcluidos?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracaoInatividadeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    diasSemCompra?: IntFieldUpdateOperationsInput | number
    valorMinimoCompra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolFieldUpdateOperationsInput | boolean
    tiposClienteExcluidos?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RFVTipoNegocioCreateInput = {
    tipoNegocio: string
    dataAnalise: Date | string
    periodoAnalise: string
    recencia: number
    frequencia: number
    valorMonetario: Decimal | DecimalJsLike | number | string
    scoreRecencia: number
    scoreFrequencia: number
    scoreValor: number
    scoreRFV: Decimal | DecimalJsLike | number | string
    segmentoRFV: string
    rankingAutomatico?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    cliente: ClienteCreateNestedOneWithoutRfvTipoNegocioInput
  }

  export type RFVTipoNegocioUncheckedCreateInput = {
    id?: number
    clienteId: number
    tipoNegocio: string
    dataAnalise: Date | string
    periodoAnalise: string
    recencia: number
    frequencia: number
    valorMonetario: Decimal | DecimalJsLike | number | string
    scoreRecencia: number
    scoreFrequencia: number
    scoreValor: number
    scoreRFV: Decimal | DecimalJsLike | number | string
    segmentoRFV: string
    rankingAutomatico?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RFVTipoNegocioUpdateInput = {
    tipoNegocio?: StringFieldUpdateOperationsInput | string
    dataAnalise?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoAnalise?: StringFieldUpdateOperationsInput | string
    recencia?: IntFieldUpdateOperationsInput | number
    frequencia?: IntFieldUpdateOperationsInput | number
    valorMonetario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFieldUpdateOperationsInput | number
    scoreFrequencia?: IntFieldUpdateOperationsInput | number
    scoreValor?: IntFieldUpdateOperationsInput | number
    scoreRFV?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFieldUpdateOperationsInput | string
    rankingAutomatico?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cliente?: ClienteUpdateOneRequiredWithoutRfvTipoNegocioNestedInput
  }

  export type RFVTipoNegocioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    tipoNegocio?: StringFieldUpdateOperationsInput | string
    dataAnalise?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoAnalise?: StringFieldUpdateOperationsInput | string
    recencia?: IntFieldUpdateOperationsInput | number
    frequencia?: IntFieldUpdateOperationsInput | number
    valorMonetario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFieldUpdateOperationsInput | number
    scoreFrequencia?: IntFieldUpdateOperationsInput | number
    scoreValor?: IntFieldUpdateOperationsInput | number
    scoreRFV?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFieldUpdateOperationsInput | string
    rankingAutomatico?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RFVTipoNegocioCreateManyInput = {
    id?: number
    clienteId: number
    tipoNegocio: string
    dataAnalise: Date | string
    periodoAnalise: string
    recencia: number
    frequencia: number
    valorMonetario: Decimal | DecimalJsLike | number | string
    scoreRecencia: number
    scoreFrequencia: number
    scoreValor: number
    scoreRFV: Decimal | DecimalJsLike | number | string
    segmentoRFV: string
    rankingAutomatico?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RFVTipoNegocioUpdateManyMutationInput = {
    tipoNegocio?: StringFieldUpdateOperationsInput | string
    dataAnalise?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoAnalise?: StringFieldUpdateOperationsInput | string
    recencia?: IntFieldUpdateOperationsInput | number
    frequencia?: IntFieldUpdateOperationsInput | number
    valorMonetario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFieldUpdateOperationsInput | number
    scoreFrequencia?: IntFieldUpdateOperationsInput | number
    scoreValor?: IntFieldUpdateOperationsInput | number
    scoreRFV?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFieldUpdateOperationsInput | string
    rankingAutomatico?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RFVTipoNegocioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clienteId?: IntFieldUpdateOperationsInput | number
    tipoNegocio?: StringFieldUpdateOperationsInput | string
    dataAnalise?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoAnalise?: StringFieldUpdateOperationsInput | string
    recencia?: IntFieldUpdateOperationsInput | number
    frequencia?: IntFieldUpdateOperationsInput | number
    valorMonetario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFieldUpdateOperationsInput | number
    scoreFrequencia?: IntFieldUpdateOperationsInput | number
    scoreValor?: IntFieldUpdateOperationsInput | number
    scoreRFV?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFieldUpdateOperationsInput | string
    rankingAutomatico?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ProdutoScalarRelationFilter = {
    is?: ProdutoWhereInput
    isNot?: ProdutoWhereInput
  }

  export type AssociacaoProdutoOrderByRelevanceInput = {
    fields: AssociacaoProdutoOrderByRelevanceFieldEnum | AssociacaoProdutoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AssociacaoProdutoCountOrderByAggregateInput = {
    id?: SortOrder
    produto_a_id?: SortOrder
    produto_b_id?: SortOrder
    suporte?: SortOrder
    confianca?: SortOrder
    lift?: SortOrder
    a_nome?: SortOrder
    b_nome?: SortOrder
    a_tipo?: SortOrder
    b_tipo?: SortOrder
    vendas_produto_a?: SortOrder
    vendas_produto_b?: SortOrder
    atualizado_em?: SortOrder
  }

  export type AssociacaoProdutoAvgOrderByAggregateInput = {
    id?: SortOrder
    produto_a_id?: SortOrder
    produto_b_id?: SortOrder
    suporte?: SortOrder
    confianca?: SortOrder
    lift?: SortOrder
    vendas_produto_a?: SortOrder
    vendas_produto_b?: SortOrder
  }

  export type AssociacaoProdutoMaxOrderByAggregateInput = {
    id?: SortOrder
    produto_a_id?: SortOrder
    produto_b_id?: SortOrder
    suporte?: SortOrder
    confianca?: SortOrder
    lift?: SortOrder
    a_nome?: SortOrder
    b_nome?: SortOrder
    a_tipo?: SortOrder
    b_tipo?: SortOrder
    vendas_produto_a?: SortOrder
    vendas_produto_b?: SortOrder
    atualizado_em?: SortOrder
  }

  export type AssociacaoProdutoMinOrderByAggregateInput = {
    id?: SortOrder
    produto_a_id?: SortOrder
    produto_b_id?: SortOrder
    suporte?: SortOrder
    confianca?: SortOrder
    lift?: SortOrder
    a_nome?: SortOrder
    b_nome?: SortOrder
    a_tipo?: SortOrder
    b_tipo?: SortOrder
    vendas_produto_a?: SortOrder
    vendas_produto_b?: SortOrder
    atualizado_em?: SortOrder
  }

  export type AssociacaoProdutoSumOrderByAggregateInput = {
    id?: SortOrder
    produto_a_id?: SortOrder
    produto_b_id?: SortOrder
    suporte?: SortOrder
    confianca?: SortOrder
    lift?: SortOrder
    vendas_produto_a?: SortOrder
    vendas_produto_b?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type FilialListRelationFilter = {
    every?: FilialWhereInput
    some?: FilialWhereInput
    none?: FilialWhereInput
  }

  export type ConfiguracaoInatividadeNullableScalarRelationFilter = {
    is?: ConfiguracaoInatividadeWhereInput | null
    isNot?: ConfiguracaoInatividadeWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type FilialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EmpresaOrderByRelevanceInput = {
    fields: EmpresaOrderByRelevanceFieldEnum | EmpresaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EmpresaCountOrderByAggregateInput = {
    id?: SortOrder
    razaoSocial?: SortOrder
    nomeFantasia?: SortOrder
    cnpjMatriz?: SortOrder
    inscricaoEstadual?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    ativo?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type EmpresaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EmpresaMaxOrderByAggregateInput = {
    id?: SortOrder
    razaoSocial?: SortOrder
    nomeFantasia?: SortOrder
    cnpjMatriz?: SortOrder
    inscricaoEstadual?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    ativo?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type EmpresaMinOrderByAggregateInput = {
    id?: SortOrder
    razaoSocial?: SortOrder
    nomeFantasia?: SortOrder
    cnpjMatriz?: SortOrder
    inscricaoEstadual?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    telefone?: SortOrder
    email?: SortOrder
    ativo?: SortOrder
    dataCriacao?: SortOrder
    dataAtualizacao?: SortOrder
  }

  export type EmpresaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NotasFiscalCabecalhoListRelationFilter = {
    every?: NotasFiscalCabecalhoWhereInput
    some?: NotasFiscalCabecalhoWhereInput
    none?: NotasFiscalCabecalhoWhereInput
  }

  export type RFVTipoNegocioListRelationFilter = {
    every?: RFVTipoNegocioWhereInput
    some?: RFVTipoNegocioWhereInput
    none?: RFVTipoNegocioWhereInput
  }

  export type NotasFiscalCabecalhoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RFVTipoNegocioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteOrderByRelevanceInput = {
    fields: ClienteOrderByRelevanceFieldEnum | ClienteOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ClienteCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpfCnpj?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    telefone?: SortOrder
  }

  export type ClienteAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpfCnpj?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    telefone?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpfCnpj?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    telefone?: SortOrder
  }

  export type ClienteSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EmpresaScalarRelationFilter = {
    is?: EmpresaWhereInput
    isNot?: EmpresaWhereInput
  }

  export type VendedorListRelationFilter = {
    every?: VendedorWhereInput
    some?: VendedorWhereInput
    none?: VendedorWhereInput
  }

  export type RfvParameterSetListRelationFilter = {
    every?: RfvParameterSetWhereInput
    some?: RfvParameterSetWhereInput
    none?: RfvParameterSetWhereInput
  }

  export type MaquinaEstoqueListRelationFilter = {
    every?: MaquinaEstoqueWhereInput
    some?: MaquinaEstoqueWhereInput
    none?: MaquinaEstoqueWhereInput
  }

  export type ReceitaPeriodoListRelationFilter = {
    every?: ReceitaPeriodoWhereInput
    some?: ReceitaPeriodoWhereInput
    none?: ReceitaPeriodoWhereInput
  }

  export type ReceitaTipoProdutoListRelationFilter = {
    every?: ReceitaTipoProdutoWhereInput
    some?: ReceitaTipoProdutoWhereInput
    none?: ReceitaTipoProdutoWhereInput
  }

  export type ReceitaProdutoModeloListRelationFilter = {
    every?: ReceitaProdutoModeloWhereInput
    some?: ReceitaProdutoModeloWhereInput
    none?: ReceitaProdutoModeloWhereInput
  }

  export type CrescimentoVendasListRelationFilter = {
    every?: CrescimentoVendasWhereInput
    some?: CrescimentoVendasWhereInput
    none?: CrescimentoVendasWhereInput
  }

  export type TicketMedioListRelationFilter = {
    every?: TicketMedioWhereInput
    some?: TicketMedioWhereInput
    none?: TicketMedioWhereInput
  }

  export type ItensPorNFListRelationFilter = {
    every?: ItensPorNFWhereInput
    some?: ItensPorNFWhereInput
    none?: ItensPorNFWhereInput
  }

  export type SazonalidadeListRelationFilter = {
    every?: SazonalidadeWhereInput
    some?: SazonalidadeWhereInput
    none?: SazonalidadeWhereInput
  }

  export type ReceitaLocalizacaoListRelationFilter = {
    every?: ReceitaLocalizacaoWhereInput
    some?: ReceitaLocalizacaoWhereInput
    none?: ReceitaLocalizacaoWhereInput
  }

  export type ReceitaVendedorListRelationFilter = {
    every?: ReceitaVendedorWhereInput
    some?: ReceitaVendedorWhereInput
    none?: ReceitaVendedorWhereInput
  }

  export type EstatisticasNotasFiscaisListRelationFilter = {
    every?: EstatisticasNotasFiscaisWhereInput
    some?: EstatisticasNotasFiscaisWhereInput
    none?: EstatisticasNotasFiscaisWhereInput
  }

  export type ReceitaVendedorDetalhadaListRelationFilter = {
    every?: ReceitaVendedorDetalhadaWhereInput
    some?: ReceitaVendedorDetalhadaWhereInput
    none?: ReceitaVendedorDetalhadaWhereInput
  }

  export type TicketMedioVendedorListRelationFilter = {
    every?: TicketMedioVendedorWhereInput
    some?: TicketMedioVendedorWhereInput
    none?: TicketMedioVendedorWhereInput
  }

  export type MixVendedorListRelationFilter = {
    every?: MixVendedorWhereInput
    some?: MixVendedorWhereInput
    none?: MixVendedorWhereInput
  }

  export type CoberturaCarteiraListRelationFilter = {
    every?: CoberturaCarteiraWhereInput
    some?: CoberturaCarteiraWhereInput
    none?: CoberturaCarteiraWhereInput
  }

  export type RankingVendedoresListRelationFilter = {
    every?: RankingVendedoresWhereInput
    some?: RankingVendedoresWhereInput
    none?: RankingVendedoresWhereInput
  }

  export type ReceitaFilialListRelationFilter = {
    every?: ReceitaFilialWhereInput
    some?: ReceitaFilialWhereInput
    none?: ReceitaFilialWhereInput
  }

  export type MixFilialListRelationFilter = {
    every?: MixFilialWhereInput
    some?: MixFilialWhereInput
    none?: MixFilialWhereInput
  }

  export type ParticipacaoReceitaFilialListRelationFilter = {
    every?: ParticipacaoReceitaFilialWhereInput
    some?: ParticipacaoReceitaFilialWhereInput
    none?: ParticipacaoReceitaFilialWhereInput
  }

  export type ReceitaFilialRegiaoListRelationFilter = {
    every?: ReceitaFilialRegiaoWhereInput
    some?: ReceitaFilialRegiaoWhereInput
    none?: ReceitaFilialRegiaoWhereInput
  }

  export type VendedorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RfvParameterSetOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaquinaEstoqueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceitaPeriodoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceitaTipoProdutoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceitaProdutoModeloOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CrescimentoVendasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TicketMedioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ItensPorNFOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SazonalidadeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceitaLocalizacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceitaVendedorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EstatisticasNotasFiscaisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceitaVendedorDetalhadaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TicketMedioVendedorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MixVendedorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CoberturaCarteiraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RankingVendedoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceitaFilialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MixFilialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ParticipacaoReceitaFilialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceitaFilialRegiaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FilialOrderByRelevanceInput = {
    fields: FilialOrderByRelevanceFieldEnum | FilialOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type FilialCountOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
  }

  export type FilialAvgOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
  }

  export type FilialMaxOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
  }

  export type FilialMinOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
    nome?: SortOrder
    cnpj?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
  }

  export type FilialSumOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FilialNullableScalarRelationFilter = {
    is?: FilialWhereInput | null
    isNot?: FilialWhereInput | null
  }

  export type VendedorOrderByRelevanceInput = {
    fields: VendedorOrderByRelevanceFieldEnum | VendedorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type VendedorCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    filialId?: SortOrder
  }

  export type VendedorAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
  }

  export type VendedorMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    filialId?: SortOrder
  }

  export type VendedorMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    cpf?: SortOrder
    filialId?: SortOrder
  }

  export type VendedorSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NotaFiscalItemListRelationFilter = {
    every?: NotaFiscalItemWhereInput
    some?: NotaFiscalItemWhereInput
    none?: NotaFiscalItemWhereInput
  }

  export type AssociacaoProdutoListRelationFilter = {
    every?: AssociacaoProdutoWhereInput
    some?: AssociacaoProdutoWhereInput
    none?: AssociacaoProdutoWhereInput
  }

  export type NotaFiscalItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssociacaoProdutoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProdutoOrderByRelevanceInput = {
    fields: ProdutoOrderByRelevanceFieldEnum | ProdutoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ProdutoCountOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    tipo?: SortOrder
    preco?: SortOrder
  }

  export type ProdutoAvgOrderByAggregateInput = {
    id?: SortOrder
    preco?: SortOrder
  }

  export type ProdutoMaxOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    tipo?: SortOrder
    preco?: SortOrder
  }

  export type ProdutoMinOrderByAggregateInput = {
    id?: SortOrder
    descricao?: SortOrder
    tipo?: SortOrder
    preco?: SortOrder
  }

  export type ProdutoSumOrderByAggregateInput = {
    id?: SortOrder
    preco?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type MaquinaEstoqueOrderByRelevanceInput = {
    fields: MaquinaEstoqueOrderByRelevanceFieldEnum | MaquinaEstoqueOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MaquinaEstoqueCountOrderByAggregateInput = {
    Chassi?: SortOrder
    produtoId?: SortOrder
    filialId?: SortOrder
    Status?: SortOrder
  }

  export type MaquinaEstoqueAvgOrderByAggregateInput = {
    produtoId?: SortOrder
    filialId?: SortOrder
  }

  export type MaquinaEstoqueMaxOrderByAggregateInput = {
    Chassi?: SortOrder
    produtoId?: SortOrder
    filialId?: SortOrder
    Status?: SortOrder
  }

  export type MaquinaEstoqueMinOrderByAggregateInput = {
    Chassi?: SortOrder
    produtoId?: SortOrder
    filialId?: SortOrder
    Status?: SortOrder
  }

  export type MaquinaEstoqueSumOrderByAggregateInput = {
    produtoId?: SortOrder
    filialId?: SortOrder
  }

  export type ClienteNullableScalarRelationFilter = {
    is?: ClienteWhereInput | null
    isNot?: ClienteWhereInput | null
  }

  export type VendedorNullableScalarRelationFilter = {
    is?: VendedorWhereInput | null
    isNot?: VendedorWhereInput | null
  }

  export type NotasFiscalCabecalhoNumeroNotaFilialIdCompoundUniqueInput = {
    numeroNota: number
    filialId: number
  }

  export type NotasFiscalCabecalhoCountOrderByAggregateInput = {
    id?: SortOrder
    numeroNota?: SortOrder
    dataEmissao?: SortOrder
    valorTotal?: SortOrder
    filialId?: SortOrder
    clienteId?: SortOrder
    vendedorId?: SortOrder
  }

  export type NotasFiscalCabecalhoAvgOrderByAggregateInput = {
    id?: SortOrder
    numeroNota?: SortOrder
    valorTotal?: SortOrder
    filialId?: SortOrder
    clienteId?: SortOrder
    vendedorId?: SortOrder
  }

  export type NotasFiscalCabecalhoMaxOrderByAggregateInput = {
    id?: SortOrder
    numeroNota?: SortOrder
    dataEmissao?: SortOrder
    valorTotal?: SortOrder
    filialId?: SortOrder
    clienteId?: SortOrder
    vendedorId?: SortOrder
  }

  export type NotasFiscalCabecalhoMinOrderByAggregateInput = {
    id?: SortOrder
    numeroNota?: SortOrder
    dataEmissao?: SortOrder
    valorTotal?: SortOrder
    filialId?: SortOrder
    clienteId?: SortOrder
    vendedorId?: SortOrder
  }

  export type NotasFiscalCabecalhoSumOrderByAggregateInput = {
    id?: SortOrder
    numeroNota?: SortOrder
    valorTotal?: SortOrder
    filialId?: SortOrder
    clienteId?: SortOrder
    vendedorId?: SortOrder
  }

  export type MaquinaEstoqueNullableScalarRelationFilter = {
    is?: MaquinaEstoqueWhereInput | null
    isNot?: MaquinaEstoqueWhereInput | null
  }

  export type NotasFiscalCabecalhoScalarRelationFilter = {
    is?: NotasFiscalCabecalhoWhereInput
    isNot?: NotasFiscalCabecalhoWhereInput
  }

  export type NotaFiscalItemOrderByRelevanceInput = {
    fields: NotaFiscalItemOrderByRelevanceFieldEnum | NotaFiscalItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type NotaFiscalItemCountOrderByAggregateInput = {
    id?: SortOrder
    notaFiscalId?: SortOrder
    produtoId?: SortOrder
    Quantidade?: SortOrder
    valorUnitario?: SortOrder
    valorTotalItem?: SortOrder
    Chassi?: SortOrder
  }

  export type NotaFiscalItemAvgOrderByAggregateInput = {
    id?: SortOrder
    notaFiscalId?: SortOrder
    produtoId?: SortOrder
    Quantidade?: SortOrder
    valorUnitario?: SortOrder
    valorTotalItem?: SortOrder
  }

  export type NotaFiscalItemMaxOrderByAggregateInput = {
    id?: SortOrder
    notaFiscalId?: SortOrder
    produtoId?: SortOrder
    Quantidade?: SortOrder
    valorUnitario?: SortOrder
    valorTotalItem?: SortOrder
    Chassi?: SortOrder
  }

  export type NotaFiscalItemMinOrderByAggregateInput = {
    id?: SortOrder
    notaFiscalId?: SortOrder
    produtoId?: SortOrder
    Quantidade?: SortOrder
    valorUnitario?: SortOrder
    valorTotalItem?: SortOrder
    Chassi?: SortOrder
  }

  export type NotaFiscalItemSumOrderByAggregateInput = {
    id?: SortOrder
    notaFiscalId?: SortOrder
    produtoId?: SortOrder
    Quantidade?: SortOrder
    valorUnitario?: SortOrder
    valorTotalItem?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumRfvStrategyFilter<$PrismaModel = never> = {
    equals?: $Enums.RfvStrategy | EnumRfvStrategyFieldRefInput<$PrismaModel>
    in?: $Enums.RfvStrategy[]
    notIn?: $Enums.RfvStrategy[]
    not?: NestedEnumRfvStrategyFilter<$PrismaModel> | $Enums.RfvStrategy
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumCalculationStrategyFilter<$PrismaModel = never> = {
    equals?: $Enums.CalculationStrategy | EnumCalculationStrategyFieldRefInput<$PrismaModel>
    in?: $Enums.CalculationStrategy[]
    notIn?: $Enums.CalculationStrategy[]
    not?: NestedEnumCalculationStrategyFilter<$PrismaModel> | $Enums.CalculationStrategy
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type RfvSegmentListRelationFilter = {
    every?: RfvSegmentWhereInput
    some?: RfvSegmentWhereInput
    none?: RfvSegmentWhereInput
  }

  export type RfvSegmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RfvParameterSetOrderByRelevanceInput = {
    fields: RfvParameterSetOrderByRelevanceFieldEnum | RfvParameterSetOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RfvParameterSetCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    name?: SortOrder
    strategy?: SortOrder
    windowDays?: SortOrder
    weights?: SortOrder
    ruleRecency?: SortOrder
    ruleFrequency?: SortOrder
    ruleValue?: SortOrder
    effectiveFrom?: SortOrder
    effectiveTo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    calculationStrategy?: SortOrder
    classRanges?: SortOrder
    conditionalRules?: SortOrder
  }

  export type RfvParameterSetAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    windowDays?: SortOrder
  }

  export type RfvParameterSetMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    name?: SortOrder
    strategy?: SortOrder
    windowDays?: SortOrder
    effectiveFrom?: SortOrder
    effectiveTo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    calculationStrategy?: SortOrder
  }

  export type RfvParameterSetMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    name?: SortOrder
    strategy?: SortOrder
    windowDays?: SortOrder
    effectiveFrom?: SortOrder
    effectiveTo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    calculationStrategy?: SortOrder
  }

  export type RfvParameterSetSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    windowDays?: SortOrder
  }

  export type EnumRfvStrategyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RfvStrategy | EnumRfvStrategyFieldRefInput<$PrismaModel>
    in?: $Enums.RfvStrategy[]
    notIn?: $Enums.RfvStrategy[]
    not?: NestedEnumRfvStrategyWithAggregatesFilter<$PrismaModel> | $Enums.RfvStrategy
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRfvStrategyFilter<$PrismaModel>
    _max?: NestedEnumRfvStrategyFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumCalculationStrategyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CalculationStrategy | EnumCalculationStrategyFieldRefInput<$PrismaModel>
    in?: $Enums.CalculationStrategy[]
    notIn?: $Enums.CalculationStrategy[]
    not?: NestedEnumCalculationStrategyWithAggregatesFilter<$PrismaModel> | $Enums.CalculationStrategy
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCalculationStrategyFilter<$PrismaModel>
    _max?: NestedEnumCalculationStrategyFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type RfvParameterSetScalarRelationFilter = {
    is?: RfvParameterSetWhereInput
    isNot?: RfvParameterSetWhereInput
  }

  export type RfvSegmentOrderByRelevanceInput = {
    fields: RfvSegmentOrderByRelevanceFieldEnum | RfvSegmentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RfvSegmentCountOrderByAggregateInput = {
    id?: SortOrder
    parameterSetId?: SortOrder
    name?: SortOrder
    rules?: SortOrder
    priority?: SortOrder
  }

  export type RfvSegmentAvgOrderByAggregateInput = {
    id?: SortOrder
    parameterSetId?: SortOrder
    priority?: SortOrder
  }

  export type RfvSegmentMaxOrderByAggregateInput = {
    id?: SortOrder
    parameterSetId?: SortOrder
    name?: SortOrder
    priority?: SortOrder
  }

  export type RfvSegmentMinOrderByAggregateInput = {
    id?: SortOrder
    parameterSetId?: SortOrder
    name?: SortOrder
    priority?: SortOrder
  }

  export type RfvSegmentSumOrderByAggregateInput = {
    id?: SortOrder
    parameterSetId?: SortOrder
    priority?: SortOrder
  }

  export type ReceitaPeriodoOrderByRelevanceInput = {
    fields: ReceitaPeriodoOrderByRelevanceFieldEnum | ReceitaPeriodoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReceitaPeriodoCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaPeriodoAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type ReceitaPeriodoMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaPeriodoMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaPeriodoSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type ProdutoNullableScalarRelationFilter = {
    is?: ProdutoWhereInput | null
    isNot?: ProdutoWhereInput | null
  }

  export type ReceitaTipoProdutoOrderByRelevanceInput = {
    fields: ReceitaTipoProdutoOrderByRelevanceFieldEnum | ReceitaTipoProdutoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReceitaTipoProdutoCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoProduto?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaTipoProdutoAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type ReceitaTipoProdutoMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoProduto?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaTipoProdutoMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoProduto?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaTipoProdutoSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type ReceitaProdutoModeloOrderByRelevanceInput = {
    fields: ReceitaProdutoModeloOrderByRelevanceFieldEnum | ReceitaProdutoModeloOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReceitaProdutoModeloCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    ranking?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaProdutoModeloAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    ranking?: SortOrder
  }

  export type ReceitaProdutoModeloMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    ranking?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaProdutoModeloMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    ranking?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaProdutoModeloSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    produtoId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    ranking?: SortOrder
  }

  export type CrescimentoVendasOrderByRelevanceInput = {
    fields: CrescimentoVendasOrderByRelevanceFieldEnum | CrescimentoVendasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CrescimentoVendasCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoComparacao?: SortOrder
    valorAtual?: SortOrder
    valorAnterior?: SortOrder
    crescimento?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CrescimentoVendasAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    valorAtual?: SortOrder
    valorAnterior?: SortOrder
    crescimento?: SortOrder
  }

  export type CrescimentoVendasMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoComparacao?: SortOrder
    valorAtual?: SortOrder
    valorAnterior?: SortOrder
    crescimento?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CrescimentoVendasMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoComparacao?: SortOrder
    valorAtual?: SortOrder
    valorAnterior?: SortOrder
    crescimento?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CrescimentoVendasSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    valorAtual?: SortOrder
    valorAnterior?: SortOrder
    crescimento?: SortOrder
  }

  export type TicketMedioOrderByRelevanceInput = {
    fields: TicketMedioOrderByRelevanceFieldEnum | TicketMedioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TicketMedioCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedioNF?: SortOrder
    ticketMedioItem?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketMedioAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    ticketMedioNF?: SortOrder
    ticketMedioItem?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type TicketMedioMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedioNF?: SortOrder
    ticketMedioItem?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketMedioMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedioNF?: SortOrder
    ticketMedioItem?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketMedioSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    ticketMedioNF?: SortOrder
    ticketMedioItem?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type ItensPorNFOrderByRelevanceInput = {
    fields: ItensPorNFOrderByRelevanceFieldEnum | ItensPorNFOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ItensPorNFCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    mediaItens?: SortOrder
    p95Itens?: SortOrder
    quantidadeNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ItensPorNFAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    mediaItens?: SortOrder
    p95Itens?: SortOrder
    quantidadeNotas?: SortOrder
  }

  export type ItensPorNFMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    mediaItens?: SortOrder
    p95Itens?: SortOrder
    quantidadeNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ItensPorNFMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    mediaItens?: SortOrder
    p95Itens?: SortOrder
    quantidadeNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ItensPorNFSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    mediaItens?: SortOrder
    p95Itens?: SortOrder
    quantidadeNotas?: SortOrder
  }

  export type SazonalidadeCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    percentualAno?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SazonalidadeAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    percentualAno?: SortOrder
  }

  export type SazonalidadeMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    percentualAno?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SazonalidadeMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    percentualAno?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SazonalidadeSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    percentualAno?: SortOrder
  }

  export type ReceitaLocalizacaoOrderByRelevanceInput = {
    fields: ReceitaLocalizacaoOrderByRelevanceFieldEnum | ReceitaLocalizacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReceitaLocalizacaoCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaLocalizacaoAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type ReceitaLocalizacaoMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaLocalizacaoMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaLocalizacaoSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type VendedorScalarRelationFilter = {
    is?: VendedorWhereInput
    isNot?: VendedorWhereInput
  }

  export type ReceitaVendedorOrderByRelevanceInput = {
    fields: ReceitaVendedorOrderByRelevanceFieldEnum | ReceitaVendedorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReceitaVendedorCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaVendedorAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type ReceitaVendedorMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaVendedorMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaVendedorSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    valorTotal?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
  }

  export type EstatisticasNotasFiscaisOrderByRelevanceInput = {
    fields: EstatisticasNotasFiscaisOrderByRelevanceFieldEnum | EstatisticasNotasFiscaisOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EstatisticasNotasFiscaisCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    mediaItensPorNota?: SortOrder
    valorTotalNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EstatisticasNotasFiscaisAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    mediaItensPorNota?: SortOrder
    valorTotalNotas?: SortOrder
  }

  export type EstatisticasNotasFiscaisMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    mediaItensPorNota?: SortOrder
    valorTotalNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EstatisticasNotasFiscaisMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    mediaItensPorNota?: SortOrder
    valorTotalNotas?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EstatisticasNotasFiscaisSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    quantidadeNotas?: SortOrder
    quantidadeItens?: SortOrder
    mediaItensPorNota?: SortOrder
    valorTotalNotas?: SortOrder
  }

  export type ReceitaVendedorDetalhadaOrderByRelevanceInput = {
    fields: ReceitaVendedorDetalhadaOrderByRelevanceFieldEnum | ReceitaVendedorDetalhadaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReceitaVendedorDetalhadaCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaVendedorDetalhadaAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
  }

  export type ReceitaVendedorDetalhadaMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaVendedorDetalhadaMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    dataInicio?: SortOrder
    dataFim?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaVendedorDetalhadaSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
  }

  export type TicketMedioVendedorOrderByRelevanceInput = {
    fields: TicketMedioVendedorOrderByRelevanceFieldEnum | TicketMedioVendedorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TicketMedioVendedorCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedio?: SortOrder
    quantidadeNotas?: SortOrder
    valorTotal?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketMedioVendedorAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    ticketMedio?: SortOrder
    quantidadeNotas?: SortOrder
    valorTotal?: SortOrder
  }

  export type TicketMedioVendedorMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedio?: SortOrder
    quantidadeNotas?: SortOrder
    valorTotal?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketMedioVendedorMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    ticketMedio?: SortOrder
    quantidadeNotas?: SortOrder
    valorTotal?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TicketMedioVendedorSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    ticketMedio?: SortOrder
    quantidadeNotas?: SortOrder
    valorTotal?: SortOrder
  }

  export type MixVendedorOrderByRelevanceInput = {
    fields: MixVendedorOrderByRelevanceFieldEnum | MixVendedorOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MixVendedorCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MixVendedorAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
  }

  export type MixVendedorMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MixVendedorMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MixVendedorSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
  }

  export type CoberturaCarteiraOrderByRelevanceInput = {
    fields: CoberturaCarteiraOrderByRelevanceFieldEnum | CoberturaCarteiraOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CoberturaCarteiraCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    clientesUnicosAtendidos?: SortOrder
    clientesAtivos?: SortOrder
    percentualCobertura?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CoberturaCarteiraAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    clientesUnicosAtendidos?: SortOrder
    clientesAtivos?: SortOrder
    percentualCobertura?: SortOrder
  }

  export type CoberturaCarteiraMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    clientesUnicosAtendidos?: SortOrder
    clientesAtivos?: SortOrder
    percentualCobertura?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CoberturaCarteiraMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    clientesUnicosAtendidos?: SortOrder
    clientesAtivos?: SortOrder
    percentualCobertura?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CoberturaCarteiraSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    clientesUnicosAtendidos?: SortOrder
    clientesAtivos?: SortOrder
    percentualCobertura?: SortOrder
  }

  export type RankingVendedoresOrderByRelevanceInput = {
    fields: RankingVendedoresOrderByRelevanceFieldEnum | RankingVendedoresOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RankingVendedoresCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoRanking?: SortOrder
    posicaoRanking?: SortOrder
    valorMetrica?: SortOrder
    totalVendedores?: SortOrder
    percentilRanking?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RankingVendedoresAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    posicaoRanking?: SortOrder
    valorMetrica?: SortOrder
    totalVendedores?: SortOrder
    percentilRanking?: SortOrder
  }

  export type RankingVendedoresMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoRanking?: SortOrder
    posicaoRanking?: SortOrder
    valorMetrica?: SortOrder
    totalVendedores?: SortOrder
    percentilRanking?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RankingVendedoresMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    tipoRanking?: SortOrder
    posicaoRanking?: SortOrder
    valorMetrica?: SortOrder
    totalVendedores?: SortOrder
    percentilRanking?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RankingVendedoresSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    vendedorId?: SortOrder
    posicaoRanking?: SortOrder
    valorMetrica?: SortOrder
    totalVendedores?: SortOrder
    percentilRanking?: SortOrder
  }

  export type FilialScalarRelationFilter = {
    is?: FilialWhereInput
    isNot?: FilialWhereInput
  }

  export type ReceitaFilialOrderByRelevanceInput = {
    fields: ReceitaFilialOrderByRelevanceFieldEnum | ReceitaFilialOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReceitaFilialCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    ticketMedio?: SortOrder
    numeroItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaFilialAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    ticketMedio?: SortOrder
    numeroItens?: SortOrder
  }

  export type ReceitaFilialMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    ticketMedio?: SortOrder
    numeroItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaFilialMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    ticketMedio?: SortOrder
    numeroItens?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaFilialSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    receitaTotal?: SortOrder
    numeroNotas?: SortOrder
    ticketMedio?: SortOrder
    numeroItens?: SortOrder
  }

  export type MixFilialOrderByRelevanceInput = {
    fields: MixFilialOrderByRelevanceFieldEnum | MixFilialOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MixFilialCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MixFilialAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
  }

  export type MixFilialMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MixFilialMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MixFilialSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    receitaMaquinas?: SortOrder
    receitaPecas?: SortOrder
    receitaServicos?: SortOrder
    percentualMaquinas?: SortOrder
    percentualPecas?: SortOrder
    percentualServicos?: SortOrder
    quantidadeNotasMaquinas?: SortOrder
    quantidadeNotasPecas?: SortOrder
    quantidadeNotasServicos?: SortOrder
  }

  export type ParticipacaoReceitaFilialOrderByRelevanceInput = {
    fields: ParticipacaoReceitaFilialOrderByRelevanceFieldEnum | ParticipacaoReceitaFilialOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ParticipacaoReceitaFilialCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaFilial?: SortOrder
    receitaTotalEmpresa?: SortOrder
    percentualParticipacao?: SortOrder
    posicaoRanking?: SortOrder
    totalFiliais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ParticipacaoReceitaFilialAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    receitaFilial?: SortOrder
    receitaTotalEmpresa?: SortOrder
    percentualParticipacao?: SortOrder
    posicaoRanking?: SortOrder
    totalFiliais?: SortOrder
  }

  export type ParticipacaoReceitaFilialMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaFilial?: SortOrder
    receitaTotalEmpresa?: SortOrder
    percentualParticipacao?: SortOrder
    posicaoRanking?: SortOrder
    totalFiliais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ParticipacaoReceitaFilialMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    receitaFilial?: SortOrder
    receitaTotalEmpresa?: SortOrder
    percentualParticipacao?: SortOrder
    posicaoRanking?: SortOrder
    totalFiliais?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ParticipacaoReceitaFilialSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    receitaFilial?: SortOrder
    receitaTotalEmpresa?: SortOrder
    percentualParticipacao?: SortOrder
    posicaoRanking?: SortOrder
    totalFiliais?: SortOrder
  }

  export type ReceitaFilialRegiaoOrderByRelevanceInput = {
    fields: ReceitaFilialRegiaoOrderByRelevanceFieldEnum | ReceitaFilialRegiaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReceitaFilialRegiaoCountOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    regiaoCliente?: SortOrder
    estadoCliente?: SortOrder
    cidadeCliente?: SortOrder
    receitaRegiao?: SortOrder
    numeroNotas?: SortOrder
    numeroClientes?: SortOrder
    percentualReceita?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaFilialRegiaoAvgOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    receitaRegiao?: SortOrder
    numeroNotas?: SortOrder
    numeroClientes?: SortOrder
    percentualReceita?: SortOrder
  }

  export type ReceitaFilialRegiaoMaxOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    regiaoCliente?: SortOrder
    estadoCliente?: SortOrder
    cidadeCliente?: SortOrder
    receitaRegiao?: SortOrder
    numeroNotas?: SortOrder
    numeroClientes?: SortOrder
    percentualReceita?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaFilialRegiaoMinOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    data?: SortOrder
    tipoPeriodo?: SortOrder
    regiaoCliente?: SortOrder
    estadoCliente?: SortOrder
    cidadeCliente?: SortOrder
    receitaRegiao?: SortOrder
    numeroNotas?: SortOrder
    numeroClientes?: SortOrder
    percentualReceita?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceitaFilialRegiaoSumOrderByAggregateInput = {
    id?: SortOrder
    filialId?: SortOrder
    receitaRegiao?: SortOrder
    numeroNotas?: SortOrder
    numeroClientes?: SortOrder
    percentualReceita?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type ConfiguracaoInatividadeOrderByRelevanceInput = {
    fields: ConfiguracaoInatividadeOrderByRelevanceFieldEnum | ConfiguracaoInatividadeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ConfiguracaoInatividadeCountOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
    diasSemCompra?: SortOrder
    valorMinimoCompra?: SortOrder
    considerarTipoCliente?: SortOrder
    tiposClienteExcluidos?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracaoInatividadeAvgOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
    diasSemCompra?: SortOrder
    valorMinimoCompra?: SortOrder
  }

  export type ConfiguracaoInatividadeMaxOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
    diasSemCompra?: SortOrder
    valorMinimoCompra?: SortOrder
    considerarTipoCliente?: SortOrder
    tiposClienteExcluidos?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracaoInatividadeMinOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
    diasSemCompra?: SortOrder
    valorMinimoCompra?: SortOrder
    considerarTipoCliente?: SortOrder
    tiposClienteExcluidos?: SortOrder
    ativo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfiguracaoInatividadeSumOrderByAggregateInput = {
    id?: SortOrder
    empresaId?: SortOrder
    diasSemCompra?: SortOrder
    valorMinimoCompra?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type ClienteScalarRelationFilter = {
    is?: ClienteWhereInput
    isNot?: ClienteWhereInput
  }

  export type RFVTipoNegocioOrderByRelevanceInput = {
    fields: RFVTipoNegocioOrderByRelevanceFieldEnum | RFVTipoNegocioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RFVTipoNegocioCountOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    tipoNegocio?: SortOrder
    dataAnalise?: SortOrder
    periodoAnalise?: SortOrder
    recencia?: SortOrder
    frequencia?: SortOrder
    valorMonetario?: SortOrder
    scoreRecencia?: SortOrder
    scoreFrequencia?: SortOrder
    scoreValor?: SortOrder
    scoreRFV?: SortOrder
    segmentoRFV?: SortOrder
    rankingAutomatico?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RFVTipoNegocioAvgOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    recencia?: SortOrder
    frequencia?: SortOrder
    valorMonetario?: SortOrder
    scoreRecencia?: SortOrder
    scoreFrequencia?: SortOrder
    scoreValor?: SortOrder
    scoreRFV?: SortOrder
  }

  export type RFVTipoNegocioMaxOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    tipoNegocio?: SortOrder
    dataAnalise?: SortOrder
    periodoAnalise?: SortOrder
    recencia?: SortOrder
    frequencia?: SortOrder
    valorMonetario?: SortOrder
    scoreRecencia?: SortOrder
    scoreFrequencia?: SortOrder
    scoreValor?: SortOrder
    scoreRFV?: SortOrder
    segmentoRFV?: SortOrder
    rankingAutomatico?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RFVTipoNegocioMinOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    tipoNegocio?: SortOrder
    dataAnalise?: SortOrder
    periodoAnalise?: SortOrder
    recencia?: SortOrder
    frequencia?: SortOrder
    valorMonetario?: SortOrder
    scoreRecencia?: SortOrder
    scoreFrequencia?: SortOrder
    scoreValor?: SortOrder
    scoreRFV?: SortOrder
    segmentoRFV?: SortOrder
    rankingAutomatico?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RFVTipoNegocioSumOrderByAggregateInput = {
    id?: SortOrder
    clienteId?: SortOrder
    recencia?: SortOrder
    frequencia?: SortOrder
    valorMonetario?: SortOrder
    scoreRecencia?: SortOrder
    scoreFrequencia?: SortOrder
    scoreValor?: SortOrder
    scoreRFV?: SortOrder
  }

  export type ProdutoCreateNestedOneWithoutAssociacoesAInput = {
    create?: XOR<ProdutoCreateWithoutAssociacoesAInput, ProdutoUncheckedCreateWithoutAssociacoesAInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutAssociacoesAInput
    connect?: ProdutoWhereUniqueInput
  }

  export type ProdutoCreateNestedOneWithoutAssociacoesBInput = {
    create?: XOR<ProdutoCreateWithoutAssociacoesBInput, ProdutoUncheckedCreateWithoutAssociacoesBInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutAssociacoesBInput
    connect?: ProdutoWhereUniqueInput
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type ProdutoUpdateOneRequiredWithoutAssociacoesANestedInput = {
    create?: XOR<ProdutoCreateWithoutAssociacoesAInput, ProdutoUncheckedCreateWithoutAssociacoesAInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutAssociacoesAInput
    upsert?: ProdutoUpsertWithoutAssociacoesAInput
    connect?: ProdutoWhereUniqueInput
    update?: XOR<XOR<ProdutoUpdateToOneWithWhereWithoutAssociacoesAInput, ProdutoUpdateWithoutAssociacoesAInput>, ProdutoUncheckedUpdateWithoutAssociacoesAInput>
  }

  export type ProdutoUpdateOneRequiredWithoutAssociacoesBNestedInput = {
    create?: XOR<ProdutoCreateWithoutAssociacoesBInput, ProdutoUncheckedCreateWithoutAssociacoesBInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutAssociacoesBInput
    upsert?: ProdutoUpsertWithoutAssociacoesBInput
    connect?: ProdutoWhereUniqueInput
    update?: XOR<XOR<ProdutoUpdateToOneWithWhereWithoutAssociacoesBInput, ProdutoUpdateWithoutAssociacoesBInput>, ProdutoUncheckedUpdateWithoutAssociacoesBInput>
  }

  export type FilialCreateNestedManyWithoutEmpresaInput = {
    create?: XOR<FilialCreateWithoutEmpresaInput, FilialUncheckedCreateWithoutEmpresaInput> | FilialCreateWithoutEmpresaInput[] | FilialUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: FilialCreateOrConnectWithoutEmpresaInput | FilialCreateOrConnectWithoutEmpresaInput[]
    createMany?: FilialCreateManyEmpresaInputEnvelope
    connect?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
  }

  export type ConfiguracaoInatividadeCreateNestedOneWithoutEmpresaInput = {
    create?: XOR<ConfiguracaoInatividadeCreateWithoutEmpresaInput, ConfiguracaoInatividadeUncheckedCreateWithoutEmpresaInput>
    connectOrCreate?: ConfiguracaoInatividadeCreateOrConnectWithoutEmpresaInput
    connect?: ConfiguracaoInatividadeWhereUniqueInput
  }

  export type FilialUncheckedCreateNestedManyWithoutEmpresaInput = {
    create?: XOR<FilialCreateWithoutEmpresaInput, FilialUncheckedCreateWithoutEmpresaInput> | FilialCreateWithoutEmpresaInput[] | FilialUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: FilialCreateOrConnectWithoutEmpresaInput | FilialCreateOrConnectWithoutEmpresaInput[]
    createMany?: FilialCreateManyEmpresaInputEnvelope
    connect?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
  }

  export type ConfiguracaoInatividadeUncheckedCreateNestedOneWithoutEmpresaInput = {
    create?: XOR<ConfiguracaoInatividadeCreateWithoutEmpresaInput, ConfiguracaoInatividadeUncheckedCreateWithoutEmpresaInput>
    connectOrCreate?: ConfiguracaoInatividadeCreateOrConnectWithoutEmpresaInput
    connect?: ConfiguracaoInatividadeWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type FilialUpdateManyWithoutEmpresaNestedInput = {
    create?: XOR<FilialCreateWithoutEmpresaInput, FilialUncheckedCreateWithoutEmpresaInput> | FilialCreateWithoutEmpresaInput[] | FilialUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: FilialCreateOrConnectWithoutEmpresaInput | FilialCreateOrConnectWithoutEmpresaInput[]
    upsert?: FilialUpsertWithWhereUniqueWithoutEmpresaInput | FilialUpsertWithWhereUniqueWithoutEmpresaInput[]
    createMany?: FilialCreateManyEmpresaInputEnvelope
    set?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
    disconnect?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
    delete?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
    connect?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
    update?: FilialUpdateWithWhereUniqueWithoutEmpresaInput | FilialUpdateWithWhereUniqueWithoutEmpresaInput[]
    updateMany?: FilialUpdateManyWithWhereWithoutEmpresaInput | FilialUpdateManyWithWhereWithoutEmpresaInput[]
    deleteMany?: FilialScalarWhereInput | FilialScalarWhereInput[]
  }

  export type ConfiguracaoInatividadeUpdateOneWithoutEmpresaNestedInput = {
    create?: XOR<ConfiguracaoInatividadeCreateWithoutEmpresaInput, ConfiguracaoInatividadeUncheckedCreateWithoutEmpresaInput>
    connectOrCreate?: ConfiguracaoInatividadeCreateOrConnectWithoutEmpresaInput
    upsert?: ConfiguracaoInatividadeUpsertWithoutEmpresaInput
    disconnect?: ConfiguracaoInatividadeWhereInput | boolean
    delete?: ConfiguracaoInatividadeWhereInput | boolean
    connect?: ConfiguracaoInatividadeWhereUniqueInput
    update?: XOR<XOR<ConfiguracaoInatividadeUpdateToOneWithWhereWithoutEmpresaInput, ConfiguracaoInatividadeUpdateWithoutEmpresaInput>, ConfiguracaoInatividadeUncheckedUpdateWithoutEmpresaInput>
  }

  export type FilialUncheckedUpdateManyWithoutEmpresaNestedInput = {
    create?: XOR<FilialCreateWithoutEmpresaInput, FilialUncheckedCreateWithoutEmpresaInput> | FilialCreateWithoutEmpresaInput[] | FilialUncheckedCreateWithoutEmpresaInput[]
    connectOrCreate?: FilialCreateOrConnectWithoutEmpresaInput | FilialCreateOrConnectWithoutEmpresaInput[]
    upsert?: FilialUpsertWithWhereUniqueWithoutEmpresaInput | FilialUpsertWithWhereUniqueWithoutEmpresaInput[]
    createMany?: FilialCreateManyEmpresaInputEnvelope
    set?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
    disconnect?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
    delete?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
    connect?: FilialWhereUniqueInput | FilialWhereUniqueInput[]
    update?: FilialUpdateWithWhereUniqueWithoutEmpresaInput | FilialUpdateWithWhereUniqueWithoutEmpresaInput[]
    updateMany?: FilialUpdateManyWithWhereWithoutEmpresaInput | FilialUpdateManyWithWhereWithoutEmpresaInput[]
    deleteMany?: FilialScalarWhereInput | FilialScalarWhereInput[]
  }

  export type ConfiguracaoInatividadeUncheckedUpdateOneWithoutEmpresaNestedInput = {
    create?: XOR<ConfiguracaoInatividadeCreateWithoutEmpresaInput, ConfiguracaoInatividadeUncheckedCreateWithoutEmpresaInput>
    connectOrCreate?: ConfiguracaoInatividadeCreateOrConnectWithoutEmpresaInput
    upsert?: ConfiguracaoInatividadeUpsertWithoutEmpresaInput
    disconnect?: ConfiguracaoInatividadeWhereInput | boolean
    delete?: ConfiguracaoInatividadeWhereInput | boolean
    connect?: ConfiguracaoInatividadeWhereUniqueInput
    update?: XOR<XOR<ConfiguracaoInatividadeUpdateToOneWithWhereWithoutEmpresaInput, ConfiguracaoInatividadeUpdateWithoutEmpresaInput>, ConfiguracaoInatividadeUncheckedUpdateWithoutEmpresaInput>
  }

  export type NotasFiscalCabecalhoCreateNestedManyWithoutClienteInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutClienteInput, NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput> | NotasFiscalCabecalhoCreateWithoutClienteInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput | NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput[]
    createMany?: NotasFiscalCabecalhoCreateManyClienteInputEnvelope
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
  }

  export type RFVTipoNegocioCreateNestedManyWithoutClienteInput = {
    create?: XOR<RFVTipoNegocioCreateWithoutClienteInput, RFVTipoNegocioUncheckedCreateWithoutClienteInput> | RFVTipoNegocioCreateWithoutClienteInput[] | RFVTipoNegocioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: RFVTipoNegocioCreateOrConnectWithoutClienteInput | RFVTipoNegocioCreateOrConnectWithoutClienteInput[]
    createMany?: RFVTipoNegocioCreateManyClienteInputEnvelope
    connect?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
  }

  export type NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutClienteInput, NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput> | NotasFiscalCabecalhoCreateWithoutClienteInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput | NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput[]
    createMany?: NotasFiscalCabecalhoCreateManyClienteInputEnvelope
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
  }

  export type RFVTipoNegocioUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<RFVTipoNegocioCreateWithoutClienteInput, RFVTipoNegocioUncheckedCreateWithoutClienteInput> | RFVTipoNegocioCreateWithoutClienteInput[] | RFVTipoNegocioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: RFVTipoNegocioCreateOrConnectWithoutClienteInput | RFVTipoNegocioCreateOrConnectWithoutClienteInput[]
    createMany?: RFVTipoNegocioCreateManyClienteInputEnvelope
    connect?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
  }

  export type NotasFiscalCabecalhoUpdateManyWithoutClienteNestedInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutClienteInput, NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput> | NotasFiscalCabecalhoCreateWithoutClienteInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput | NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput[]
    upsert?: NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutClienteInput | NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: NotasFiscalCabecalhoCreateManyClienteInputEnvelope
    set?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    disconnect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    delete?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    update?: NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutClienteInput | NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: NotasFiscalCabecalhoUpdateManyWithWhereWithoutClienteInput | NotasFiscalCabecalhoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: NotasFiscalCabecalhoScalarWhereInput | NotasFiscalCabecalhoScalarWhereInput[]
  }

  export type RFVTipoNegocioUpdateManyWithoutClienteNestedInput = {
    create?: XOR<RFVTipoNegocioCreateWithoutClienteInput, RFVTipoNegocioUncheckedCreateWithoutClienteInput> | RFVTipoNegocioCreateWithoutClienteInput[] | RFVTipoNegocioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: RFVTipoNegocioCreateOrConnectWithoutClienteInput | RFVTipoNegocioCreateOrConnectWithoutClienteInput[]
    upsert?: RFVTipoNegocioUpsertWithWhereUniqueWithoutClienteInput | RFVTipoNegocioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: RFVTipoNegocioCreateManyClienteInputEnvelope
    set?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
    disconnect?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
    delete?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
    connect?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
    update?: RFVTipoNegocioUpdateWithWhereUniqueWithoutClienteInput | RFVTipoNegocioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: RFVTipoNegocioUpdateManyWithWhereWithoutClienteInput | RFVTipoNegocioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: RFVTipoNegocioScalarWhereInput | RFVTipoNegocioScalarWhereInput[]
  }

  export type NotasFiscalCabecalhoUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutClienteInput, NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput> | NotasFiscalCabecalhoCreateWithoutClienteInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput | NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput[]
    upsert?: NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutClienteInput | NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: NotasFiscalCabecalhoCreateManyClienteInputEnvelope
    set?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    disconnect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    delete?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    update?: NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutClienteInput | NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: NotasFiscalCabecalhoUpdateManyWithWhereWithoutClienteInput | NotasFiscalCabecalhoUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: NotasFiscalCabecalhoScalarWhereInput | NotasFiscalCabecalhoScalarWhereInput[]
  }

  export type RFVTipoNegocioUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<RFVTipoNegocioCreateWithoutClienteInput, RFVTipoNegocioUncheckedCreateWithoutClienteInput> | RFVTipoNegocioCreateWithoutClienteInput[] | RFVTipoNegocioUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: RFVTipoNegocioCreateOrConnectWithoutClienteInput | RFVTipoNegocioCreateOrConnectWithoutClienteInput[]
    upsert?: RFVTipoNegocioUpsertWithWhereUniqueWithoutClienteInput | RFVTipoNegocioUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: RFVTipoNegocioCreateManyClienteInputEnvelope
    set?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
    disconnect?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
    delete?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
    connect?: RFVTipoNegocioWhereUniqueInput | RFVTipoNegocioWhereUniqueInput[]
    update?: RFVTipoNegocioUpdateWithWhereUniqueWithoutClienteInput | RFVTipoNegocioUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: RFVTipoNegocioUpdateManyWithWhereWithoutClienteInput | RFVTipoNegocioUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: RFVTipoNegocioScalarWhereInput | RFVTipoNegocioScalarWhereInput[]
  }

  export type EmpresaCreateNestedOneWithoutFiliaisInput = {
    create?: XOR<EmpresaCreateWithoutFiliaisInput, EmpresaUncheckedCreateWithoutFiliaisInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutFiliaisInput
    connect?: EmpresaWhereUniqueInput
  }

  export type NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutFilialInput, NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput> | NotasFiscalCabecalhoCreateWithoutFilialInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput | NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput[]
    createMany?: NotasFiscalCabecalhoCreateManyFilialInputEnvelope
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
  }

  export type VendedorCreateNestedManyWithoutFilialInput = {
    create?: XOR<VendedorCreateWithoutFilialInput, VendedorUncheckedCreateWithoutFilialInput> | VendedorCreateWithoutFilialInput[] | VendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: VendedorCreateOrConnectWithoutFilialInput | VendedorCreateOrConnectWithoutFilialInput[]
    createMany?: VendedorCreateManyFilialInputEnvelope
    connect?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
  }

  export type RfvParameterSetCreateNestedManyWithoutFilialInput = {
    create?: XOR<RfvParameterSetCreateWithoutFilialInput, RfvParameterSetUncheckedCreateWithoutFilialInput> | RfvParameterSetCreateWithoutFilialInput[] | RfvParameterSetUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: RfvParameterSetCreateOrConnectWithoutFilialInput | RfvParameterSetCreateOrConnectWithoutFilialInput[]
    createMany?: RfvParameterSetCreateManyFilialInputEnvelope
    connect?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
  }

  export type MaquinaEstoqueCreateNestedManyWithoutFilialInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutFilialInput, MaquinaEstoqueUncheckedCreateWithoutFilialInput> | MaquinaEstoqueCreateWithoutFilialInput[] | MaquinaEstoqueUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutFilialInput | MaquinaEstoqueCreateOrConnectWithoutFilialInput[]
    createMany?: MaquinaEstoqueCreateManyFilialInputEnvelope
    connect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
  }

  export type ReceitaPeriodoCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaPeriodoCreateWithoutFilialInput, ReceitaPeriodoUncheckedCreateWithoutFilialInput> | ReceitaPeriodoCreateWithoutFilialInput[] | ReceitaPeriodoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaPeriodoCreateOrConnectWithoutFilialInput | ReceitaPeriodoCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaPeriodoCreateManyFilialInputEnvelope
    connect?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
  }

  export type ReceitaTipoProdutoCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaTipoProdutoCreateWithoutFilialInput, ReceitaTipoProdutoUncheckedCreateWithoutFilialInput> | ReceitaTipoProdutoCreateWithoutFilialInput[] | ReceitaTipoProdutoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaTipoProdutoCreateOrConnectWithoutFilialInput | ReceitaTipoProdutoCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaTipoProdutoCreateManyFilialInputEnvelope
    connect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
  }

  export type ReceitaProdutoModeloCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaProdutoModeloCreateWithoutFilialInput, ReceitaProdutoModeloUncheckedCreateWithoutFilialInput> | ReceitaProdutoModeloCreateWithoutFilialInput[] | ReceitaProdutoModeloUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaProdutoModeloCreateOrConnectWithoutFilialInput | ReceitaProdutoModeloCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaProdutoModeloCreateManyFilialInputEnvelope
    connect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
  }

  export type CrescimentoVendasCreateNestedManyWithoutFilialInput = {
    create?: XOR<CrescimentoVendasCreateWithoutFilialInput, CrescimentoVendasUncheckedCreateWithoutFilialInput> | CrescimentoVendasCreateWithoutFilialInput[] | CrescimentoVendasUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: CrescimentoVendasCreateOrConnectWithoutFilialInput | CrescimentoVendasCreateOrConnectWithoutFilialInput[]
    createMany?: CrescimentoVendasCreateManyFilialInputEnvelope
    connect?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
  }

  export type TicketMedioCreateNestedManyWithoutFilialInput = {
    create?: XOR<TicketMedioCreateWithoutFilialInput, TicketMedioUncheckedCreateWithoutFilialInput> | TicketMedioCreateWithoutFilialInput[] | TicketMedioUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: TicketMedioCreateOrConnectWithoutFilialInput | TicketMedioCreateOrConnectWithoutFilialInput[]
    createMany?: TicketMedioCreateManyFilialInputEnvelope
    connect?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
  }

  export type ItensPorNFCreateNestedManyWithoutFilialInput = {
    create?: XOR<ItensPorNFCreateWithoutFilialInput, ItensPorNFUncheckedCreateWithoutFilialInput> | ItensPorNFCreateWithoutFilialInput[] | ItensPorNFUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ItensPorNFCreateOrConnectWithoutFilialInput | ItensPorNFCreateOrConnectWithoutFilialInput[]
    createMany?: ItensPorNFCreateManyFilialInputEnvelope
    connect?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
  }

  export type SazonalidadeCreateNestedManyWithoutFilialInput = {
    create?: XOR<SazonalidadeCreateWithoutFilialInput, SazonalidadeUncheckedCreateWithoutFilialInput> | SazonalidadeCreateWithoutFilialInput[] | SazonalidadeUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: SazonalidadeCreateOrConnectWithoutFilialInput | SazonalidadeCreateOrConnectWithoutFilialInput[]
    createMany?: SazonalidadeCreateManyFilialInputEnvelope
    connect?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
  }

  export type ReceitaLocalizacaoCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaLocalizacaoCreateWithoutFilialInput, ReceitaLocalizacaoUncheckedCreateWithoutFilialInput> | ReceitaLocalizacaoCreateWithoutFilialInput[] | ReceitaLocalizacaoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaLocalizacaoCreateOrConnectWithoutFilialInput | ReceitaLocalizacaoCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaLocalizacaoCreateManyFilialInputEnvelope
    connect?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
  }

  export type ReceitaVendedorCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaVendedorCreateWithoutFilialInput, ReceitaVendedorUncheckedCreateWithoutFilialInput> | ReceitaVendedorCreateWithoutFilialInput[] | ReceitaVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaVendedorCreateOrConnectWithoutFilialInput | ReceitaVendedorCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaVendedorCreateManyFilialInputEnvelope
    connect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
  }

  export type EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput = {
    create?: XOR<EstatisticasNotasFiscaisCreateWithoutFilialInput, EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput> | EstatisticasNotasFiscaisCreateWithoutFilialInput[] | EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput | EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput[]
    createMany?: EstatisticasNotasFiscaisCreateManyFilialInputEnvelope
    connect?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
  }

  export type ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaVendedorDetalhadaCreateWithoutFilialInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput> | ReceitaVendedorDetalhadaCreateWithoutFilialInput[] | ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput | ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaVendedorDetalhadaCreateManyFilialInputEnvelope
    connect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
  }

  export type TicketMedioVendedorCreateNestedManyWithoutFilialInput = {
    create?: XOR<TicketMedioVendedorCreateWithoutFilialInput, TicketMedioVendedorUncheckedCreateWithoutFilialInput> | TicketMedioVendedorCreateWithoutFilialInput[] | TicketMedioVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: TicketMedioVendedorCreateOrConnectWithoutFilialInput | TicketMedioVendedorCreateOrConnectWithoutFilialInput[]
    createMany?: TicketMedioVendedorCreateManyFilialInputEnvelope
    connect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
  }

  export type MixVendedorCreateNestedManyWithoutFilialInput = {
    create?: XOR<MixVendedorCreateWithoutFilialInput, MixVendedorUncheckedCreateWithoutFilialInput> | MixVendedorCreateWithoutFilialInput[] | MixVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MixVendedorCreateOrConnectWithoutFilialInput | MixVendedorCreateOrConnectWithoutFilialInput[]
    createMany?: MixVendedorCreateManyFilialInputEnvelope
    connect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
  }

  export type CoberturaCarteiraCreateNestedManyWithoutFilialInput = {
    create?: XOR<CoberturaCarteiraCreateWithoutFilialInput, CoberturaCarteiraUncheckedCreateWithoutFilialInput> | CoberturaCarteiraCreateWithoutFilialInput[] | CoberturaCarteiraUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: CoberturaCarteiraCreateOrConnectWithoutFilialInput | CoberturaCarteiraCreateOrConnectWithoutFilialInput[]
    createMany?: CoberturaCarteiraCreateManyFilialInputEnvelope
    connect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
  }

  export type RankingVendedoresCreateNestedManyWithoutFilialInput = {
    create?: XOR<RankingVendedoresCreateWithoutFilialInput, RankingVendedoresUncheckedCreateWithoutFilialInput> | RankingVendedoresCreateWithoutFilialInput[] | RankingVendedoresUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: RankingVendedoresCreateOrConnectWithoutFilialInput | RankingVendedoresCreateOrConnectWithoutFilialInput[]
    createMany?: RankingVendedoresCreateManyFilialInputEnvelope
    connect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
  }

  export type ReceitaFilialCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaFilialCreateWithoutFilialInput, ReceitaFilialUncheckedCreateWithoutFilialInput> | ReceitaFilialCreateWithoutFilialInput[] | ReceitaFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaFilialCreateOrConnectWithoutFilialInput | ReceitaFilialCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaFilialCreateManyFilialInputEnvelope
    connect?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
  }

  export type MixFilialCreateNestedManyWithoutFilialInput = {
    create?: XOR<MixFilialCreateWithoutFilialInput, MixFilialUncheckedCreateWithoutFilialInput> | MixFilialCreateWithoutFilialInput[] | MixFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MixFilialCreateOrConnectWithoutFilialInput | MixFilialCreateOrConnectWithoutFilialInput[]
    createMany?: MixFilialCreateManyFilialInputEnvelope
    connect?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
  }

  export type ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput = {
    create?: XOR<ParticipacaoReceitaFilialCreateWithoutFilialInput, ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput> | ParticipacaoReceitaFilialCreateWithoutFilialInput[] | ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput | ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput[]
    createMany?: ParticipacaoReceitaFilialCreateManyFilialInputEnvelope
    connect?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
  }

  export type ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaFilialRegiaoCreateWithoutFilialInput, ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput> | ReceitaFilialRegiaoCreateWithoutFilialInput[] | ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput | ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaFilialRegiaoCreateManyFilialInputEnvelope
    connect?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
  }

  export type NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutFilialInput, NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput> | NotasFiscalCabecalhoCreateWithoutFilialInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput | NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput[]
    createMany?: NotasFiscalCabecalhoCreateManyFilialInputEnvelope
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
  }

  export type VendedorUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<VendedorCreateWithoutFilialInput, VendedorUncheckedCreateWithoutFilialInput> | VendedorCreateWithoutFilialInput[] | VendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: VendedorCreateOrConnectWithoutFilialInput | VendedorCreateOrConnectWithoutFilialInput[]
    createMany?: VendedorCreateManyFilialInputEnvelope
    connect?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
  }

  export type RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<RfvParameterSetCreateWithoutFilialInput, RfvParameterSetUncheckedCreateWithoutFilialInput> | RfvParameterSetCreateWithoutFilialInput[] | RfvParameterSetUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: RfvParameterSetCreateOrConnectWithoutFilialInput | RfvParameterSetCreateOrConnectWithoutFilialInput[]
    createMany?: RfvParameterSetCreateManyFilialInputEnvelope
    connect?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
  }

  export type MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutFilialInput, MaquinaEstoqueUncheckedCreateWithoutFilialInput> | MaquinaEstoqueCreateWithoutFilialInput[] | MaquinaEstoqueUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutFilialInput | MaquinaEstoqueCreateOrConnectWithoutFilialInput[]
    createMany?: MaquinaEstoqueCreateManyFilialInputEnvelope
    connect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
  }

  export type ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaPeriodoCreateWithoutFilialInput, ReceitaPeriodoUncheckedCreateWithoutFilialInput> | ReceitaPeriodoCreateWithoutFilialInput[] | ReceitaPeriodoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaPeriodoCreateOrConnectWithoutFilialInput | ReceitaPeriodoCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaPeriodoCreateManyFilialInputEnvelope
    connect?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
  }

  export type ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaTipoProdutoCreateWithoutFilialInput, ReceitaTipoProdutoUncheckedCreateWithoutFilialInput> | ReceitaTipoProdutoCreateWithoutFilialInput[] | ReceitaTipoProdutoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaTipoProdutoCreateOrConnectWithoutFilialInput | ReceitaTipoProdutoCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaTipoProdutoCreateManyFilialInputEnvelope
    connect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
  }

  export type ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaProdutoModeloCreateWithoutFilialInput, ReceitaProdutoModeloUncheckedCreateWithoutFilialInput> | ReceitaProdutoModeloCreateWithoutFilialInput[] | ReceitaProdutoModeloUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaProdutoModeloCreateOrConnectWithoutFilialInput | ReceitaProdutoModeloCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaProdutoModeloCreateManyFilialInputEnvelope
    connect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
  }

  export type CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<CrescimentoVendasCreateWithoutFilialInput, CrescimentoVendasUncheckedCreateWithoutFilialInput> | CrescimentoVendasCreateWithoutFilialInput[] | CrescimentoVendasUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: CrescimentoVendasCreateOrConnectWithoutFilialInput | CrescimentoVendasCreateOrConnectWithoutFilialInput[]
    createMany?: CrescimentoVendasCreateManyFilialInputEnvelope
    connect?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
  }

  export type TicketMedioUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<TicketMedioCreateWithoutFilialInput, TicketMedioUncheckedCreateWithoutFilialInput> | TicketMedioCreateWithoutFilialInput[] | TicketMedioUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: TicketMedioCreateOrConnectWithoutFilialInput | TicketMedioCreateOrConnectWithoutFilialInput[]
    createMany?: TicketMedioCreateManyFilialInputEnvelope
    connect?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
  }

  export type ItensPorNFUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ItensPorNFCreateWithoutFilialInput, ItensPorNFUncheckedCreateWithoutFilialInput> | ItensPorNFCreateWithoutFilialInput[] | ItensPorNFUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ItensPorNFCreateOrConnectWithoutFilialInput | ItensPorNFCreateOrConnectWithoutFilialInput[]
    createMany?: ItensPorNFCreateManyFilialInputEnvelope
    connect?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
  }

  export type SazonalidadeUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<SazonalidadeCreateWithoutFilialInput, SazonalidadeUncheckedCreateWithoutFilialInput> | SazonalidadeCreateWithoutFilialInput[] | SazonalidadeUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: SazonalidadeCreateOrConnectWithoutFilialInput | SazonalidadeCreateOrConnectWithoutFilialInput[]
    createMany?: SazonalidadeCreateManyFilialInputEnvelope
    connect?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
  }

  export type ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaLocalizacaoCreateWithoutFilialInput, ReceitaLocalizacaoUncheckedCreateWithoutFilialInput> | ReceitaLocalizacaoCreateWithoutFilialInput[] | ReceitaLocalizacaoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaLocalizacaoCreateOrConnectWithoutFilialInput | ReceitaLocalizacaoCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaLocalizacaoCreateManyFilialInputEnvelope
    connect?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
  }

  export type ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaVendedorCreateWithoutFilialInput, ReceitaVendedorUncheckedCreateWithoutFilialInput> | ReceitaVendedorCreateWithoutFilialInput[] | ReceitaVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaVendedorCreateOrConnectWithoutFilialInput | ReceitaVendedorCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaVendedorCreateManyFilialInputEnvelope
    connect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
  }

  export type EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<EstatisticasNotasFiscaisCreateWithoutFilialInput, EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput> | EstatisticasNotasFiscaisCreateWithoutFilialInput[] | EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput | EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput[]
    createMany?: EstatisticasNotasFiscaisCreateManyFilialInputEnvelope
    connect?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
  }

  export type ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaVendedorDetalhadaCreateWithoutFilialInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput> | ReceitaVendedorDetalhadaCreateWithoutFilialInput[] | ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput | ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaVendedorDetalhadaCreateManyFilialInputEnvelope
    connect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
  }

  export type TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<TicketMedioVendedorCreateWithoutFilialInput, TicketMedioVendedorUncheckedCreateWithoutFilialInput> | TicketMedioVendedorCreateWithoutFilialInput[] | TicketMedioVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: TicketMedioVendedorCreateOrConnectWithoutFilialInput | TicketMedioVendedorCreateOrConnectWithoutFilialInput[]
    createMany?: TicketMedioVendedorCreateManyFilialInputEnvelope
    connect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
  }

  export type MixVendedorUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<MixVendedorCreateWithoutFilialInput, MixVendedorUncheckedCreateWithoutFilialInput> | MixVendedorCreateWithoutFilialInput[] | MixVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MixVendedorCreateOrConnectWithoutFilialInput | MixVendedorCreateOrConnectWithoutFilialInput[]
    createMany?: MixVendedorCreateManyFilialInputEnvelope
    connect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
  }

  export type CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<CoberturaCarteiraCreateWithoutFilialInput, CoberturaCarteiraUncheckedCreateWithoutFilialInput> | CoberturaCarteiraCreateWithoutFilialInput[] | CoberturaCarteiraUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: CoberturaCarteiraCreateOrConnectWithoutFilialInput | CoberturaCarteiraCreateOrConnectWithoutFilialInput[]
    createMany?: CoberturaCarteiraCreateManyFilialInputEnvelope
    connect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
  }

  export type RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<RankingVendedoresCreateWithoutFilialInput, RankingVendedoresUncheckedCreateWithoutFilialInput> | RankingVendedoresCreateWithoutFilialInput[] | RankingVendedoresUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: RankingVendedoresCreateOrConnectWithoutFilialInput | RankingVendedoresCreateOrConnectWithoutFilialInput[]
    createMany?: RankingVendedoresCreateManyFilialInputEnvelope
    connect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
  }

  export type ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaFilialCreateWithoutFilialInput, ReceitaFilialUncheckedCreateWithoutFilialInput> | ReceitaFilialCreateWithoutFilialInput[] | ReceitaFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaFilialCreateOrConnectWithoutFilialInput | ReceitaFilialCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaFilialCreateManyFilialInputEnvelope
    connect?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
  }

  export type MixFilialUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<MixFilialCreateWithoutFilialInput, MixFilialUncheckedCreateWithoutFilialInput> | MixFilialCreateWithoutFilialInput[] | MixFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MixFilialCreateOrConnectWithoutFilialInput | MixFilialCreateOrConnectWithoutFilialInput[]
    createMany?: MixFilialCreateManyFilialInputEnvelope
    connect?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
  }

  export type ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ParticipacaoReceitaFilialCreateWithoutFilialInput, ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput> | ParticipacaoReceitaFilialCreateWithoutFilialInput[] | ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput | ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput[]
    createMany?: ParticipacaoReceitaFilialCreateManyFilialInputEnvelope
    connect?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
  }

  export type ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput = {
    create?: XOR<ReceitaFilialRegiaoCreateWithoutFilialInput, ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput> | ReceitaFilialRegiaoCreateWithoutFilialInput[] | ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput | ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput[]
    createMany?: ReceitaFilialRegiaoCreateManyFilialInputEnvelope
    connect?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
  }

  export type EmpresaUpdateOneRequiredWithoutFiliaisNestedInput = {
    create?: XOR<EmpresaCreateWithoutFiliaisInput, EmpresaUncheckedCreateWithoutFiliaisInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutFiliaisInput
    upsert?: EmpresaUpsertWithoutFiliaisInput
    connect?: EmpresaWhereUniqueInput
    update?: XOR<XOR<EmpresaUpdateToOneWithWhereWithoutFiliaisInput, EmpresaUpdateWithoutFiliaisInput>, EmpresaUncheckedUpdateWithoutFiliaisInput>
  }

  export type NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutFilialInput, NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput> | NotasFiscalCabecalhoCreateWithoutFilialInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput | NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput[]
    upsert?: NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutFilialInput | NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: NotasFiscalCabecalhoCreateManyFilialInputEnvelope
    set?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    disconnect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    delete?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    update?: NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutFilialInput | NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: NotasFiscalCabecalhoUpdateManyWithWhereWithoutFilialInput | NotasFiscalCabecalhoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: NotasFiscalCabecalhoScalarWhereInput | NotasFiscalCabecalhoScalarWhereInput[]
  }

  export type VendedorUpdateManyWithoutFilialNestedInput = {
    create?: XOR<VendedorCreateWithoutFilialInput, VendedorUncheckedCreateWithoutFilialInput> | VendedorCreateWithoutFilialInput[] | VendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: VendedorCreateOrConnectWithoutFilialInput | VendedorCreateOrConnectWithoutFilialInput[]
    upsert?: VendedorUpsertWithWhereUniqueWithoutFilialInput | VendedorUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: VendedorCreateManyFilialInputEnvelope
    set?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
    disconnect?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
    delete?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
    connect?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
    update?: VendedorUpdateWithWhereUniqueWithoutFilialInput | VendedorUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: VendedorUpdateManyWithWhereWithoutFilialInput | VendedorUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: VendedorScalarWhereInput | VendedorScalarWhereInput[]
  }

  export type RfvParameterSetUpdateManyWithoutFilialNestedInput = {
    create?: XOR<RfvParameterSetCreateWithoutFilialInput, RfvParameterSetUncheckedCreateWithoutFilialInput> | RfvParameterSetCreateWithoutFilialInput[] | RfvParameterSetUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: RfvParameterSetCreateOrConnectWithoutFilialInput | RfvParameterSetCreateOrConnectWithoutFilialInput[]
    upsert?: RfvParameterSetUpsertWithWhereUniqueWithoutFilialInput | RfvParameterSetUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: RfvParameterSetCreateManyFilialInputEnvelope
    set?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
    disconnect?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
    delete?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
    connect?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
    update?: RfvParameterSetUpdateWithWhereUniqueWithoutFilialInput | RfvParameterSetUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: RfvParameterSetUpdateManyWithWhereWithoutFilialInput | RfvParameterSetUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: RfvParameterSetScalarWhereInput | RfvParameterSetScalarWhereInput[]
  }

  export type MaquinaEstoqueUpdateManyWithoutFilialNestedInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutFilialInput, MaquinaEstoqueUncheckedCreateWithoutFilialInput> | MaquinaEstoqueCreateWithoutFilialInput[] | MaquinaEstoqueUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutFilialInput | MaquinaEstoqueCreateOrConnectWithoutFilialInput[]
    upsert?: MaquinaEstoqueUpsertWithWhereUniqueWithoutFilialInput | MaquinaEstoqueUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: MaquinaEstoqueCreateManyFilialInputEnvelope
    set?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    disconnect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    delete?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    connect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    update?: MaquinaEstoqueUpdateWithWhereUniqueWithoutFilialInput | MaquinaEstoqueUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: MaquinaEstoqueUpdateManyWithWhereWithoutFilialInput | MaquinaEstoqueUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: MaquinaEstoqueScalarWhereInput | MaquinaEstoqueScalarWhereInput[]
  }

  export type ReceitaPeriodoUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaPeriodoCreateWithoutFilialInput, ReceitaPeriodoUncheckedCreateWithoutFilialInput> | ReceitaPeriodoCreateWithoutFilialInput[] | ReceitaPeriodoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaPeriodoCreateOrConnectWithoutFilialInput | ReceitaPeriodoCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaPeriodoUpsertWithWhereUniqueWithoutFilialInput | ReceitaPeriodoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaPeriodoCreateManyFilialInputEnvelope
    set?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
    disconnect?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
    delete?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
    connect?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
    update?: ReceitaPeriodoUpdateWithWhereUniqueWithoutFilialInput | ReceitaPeriodoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaPeriodoUpdateManyWithWhereWithoutFilialInput | ReceitaPeriodoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaPeriodoScalarWhereInput | ReceitaPeriodoScalarWhereInput[]
  }

  export type ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaTipoProdutoCreateWithoutFilialInput, ReceitaTipoProdutoUncheckedCreateWithoutFilialInput> | ReceitaTipoProdutoCreateWithoutFilialInput[] | ReceitaTipoProdutoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaTipoProdutoCreateOrConnectWithoutFilialInput | ReceitaTipoProdutoCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaTipoProdutoUpsertWithWhereUniqueWithoutFilialInput | ReceitaTipoProdutoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaTipoProdutoCreateManyFilialInputEnvelope
    set?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    disconnect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    delete?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    connect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    update?: ReceitaTipoProdutoUpdateWithWhereUniqueWithoutFilialInput | ReceitaTipoProdutoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaTipoProdutoUpdateManyWithWhereWithoutFilialInput | ReceitaTipoProdutoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaTipoProdutoScalarWhereInput | ReceitaTipoProdutoScalarWhereInput[]
  }

  export type ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaProdutoModeloCreateWithoutFilialInput, ReceitaProdutoModeloUncheckedCreateWithoutFilialInput> | ReceitaProdutoModeloCreateWithoutFilialInput[] | ReceitaProdutoModeloUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaProdutoModeloCreateOrConnectWithoutFilialInput | ReceitaProdutoModeloCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaProdutoModeloUpsertWithWhereUniqueWithoutFilialInput | ReceitaProdutoModeloUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaProdutoModeloCreateManyFilialInputEnvelope
    set?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    disconnect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    delete?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    connect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    update?: ReceitaProdutoModeloUpdateWithWhereUniqueWithoutFilialInput | ReceitaProdutoModeloUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaProdutoModeloUpdateManyWithWhereWithoutFilialInput | ReceitaProdutoModeloUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaProdutoModeloScalarWhereInput | ReceitaProdutoModeloScalarWhereInput[]
  }

  export type CrescimentoVendasUpdateManyWithoutFilialNestedInput = {
    create?: XOR<CrescimentoVendasCreateWithoutFilialInput, CrescimentoVendasUncheckedCreateWithoutFilialInput> | CrescimentoVendasCreateWithoutFilialInput[] | CrescimentoVendasUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: CrescimentoVendasCreateOrConnectWithoutFilialInput | CrescimentoVendasCreateOrConnectWithoutFilialInput[]
    upsert?: CrescimentoVendasUpsertWithWhereUniqueWithoutFilialInput | CrescimentoVendasUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: CrescimentoVendasCreateManyFilialInputEnvelope
    set?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
    disconnect?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
    delete?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
    connect?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
    update?: CrescimentoVendasUpdateWithWhereUniqueWithoutFilialInput | CrescimentoVendasUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: CrescimentoVendasUpdateManyWithWhereWithoutFilialInput | CrescimentoVendasUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: CrescimentoVendasScalarWhereInput | CrescimentoVendasScalarWhereInput[]
  }

  export type TicketMedioUpdateManyWithoutFilialNestedInput = {
    create?: XOR<TicketMedioCreateWithoutFilialInput, TicketMedioUncheckedCreateWithoutFilialInput> | TicketMedioCreateWithoutFilialInput[] | TicketMedioUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: TicketMedioCreateOrConnectWithoutFilialInput | TicketMedioCreateOrConnectWithoutFilialInput[]
    upsert?: TicketMedioUpsertWithWhereUniqueWithoutFilialInput | TicketMedioUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: TicketMedioCreateManyFilialInputEnvelope
    set?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
    disconnect?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
    delete?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
    connect?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
    update?: TicketMedioUpdateWithWhereUniqueWithoutFilialInput | TicketMedioUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: TicketMedioUpdateManyWithWhereWithoutFilialInput | TicketMedioUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: TicketMedioScalarWhereInput | TicketMedioScalarWhereInput[]
  }

  export type ItensPorNFUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ItensPorNFCreateWithoutFilialInput, ItensPorNFUncheckedCreateWithoutFilialInput> | ItensPorNFCreateWithoutFilialInput[] | ItensPorNFUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ItensPorNFCreateOrConnectWithoutFilialInput | ItensPorNFCreateOrConnectWithoutFilialInput[]
    upsert?: ItensPorNFUpsertWithWhereUniqueWithoutFilialInput | ItensPorNFUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ItensPorNFCreateManyFilialInputEnvelope
    set?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
    disconnect?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
    delete?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
    connect?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
    update?: ItensPorNFUpdateWithWhereUniqueWithoutFilialInput | ItensPorNFUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ItensPorNFUpdateManyWithWhereWithoutFilialInput | ItensPorNFUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ItensPorNFScalarWhereInput | ItensPorNFScalarWhereInput[]
  }

  export type SazonalidadeUpdateManyWithoutFilialNestedInput = {
    create?: XOR<SazonalidadeCreateWithoutFilialInput, SazonalidadeUncheckedCreateWithoutFilialInput> | SazonalidadeCreateWithoutFilialInput[] | SazonalidadeUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: SazonalidadeCreateOrConnectWithoutFilialInput | SazonalidadeCreateOrConnectWithoutFilialInput[]
    upsert?: SazonalidadeUpsertWithWhereUniqueWithoutFilialInput | SazonalidadeUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: SazonalidadeCreateManyFilialInputEnvelope
    set?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
    disconnect?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
    delete?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
    connect?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
    update?: SazonalidadeUpdateWithWhereUniqueWithoutFilialInput | SazonalidadeUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: SazonalidadeUpdateManyWithWhereWithoutFilialInput | SazonalidadeUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: SazonalidadeScalarWhereInput | SazonalidadeScalarWhereInput[]
  }

  export type ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaLocalizacaoCreateWithoutFilialInput, ReceitaLocalizacaoUncheckedCreateWithoutFilialInput> | ReceitaLocalizacaoCreateWithoutFilialInput[] | ReceitaLocalizacaoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaLocalizacaoCreateOrConnectWithoutFilialInput | ReceitaLocalizacaoCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaLocalizacaoUpsertWithWhereUniqueWithoutFilialInput | ReceitaLocalizacaoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaLocalizacaoCreateManyFilialInputEnvelope
    set?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
    disconnect?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
    delete?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
    connect?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
    update?: ReceitaLocalizacaoUpdateWithWhereUniqueWithoutFilialInput | ReceitaLocalizacaoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaLocalizacaoUpdateManyWithWhereWithoutFilialInput | ReceitaLocalizacaoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaLocalizacaoScalarWhereInput | ReceitaLocalizacaoScalarWhereInput[]
  }

  export type ReceitaVendedorUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaVendedorCreateWithoutFilialInput, ReceitaVendedorUncheckedCreateWithoutFilialInput> | ReceitaVendedorCreateWithoutFilialInput[] | ReceitaVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaVendedorCreateOrConnectWithoutFilialInput | ReceitaVendedorCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaVendedorUpsertWithWhereUniqueWithoutFilialInput | ReceitaVendedorUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaVendedorCreateManyFilialInputEnvelope
    set?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    disconnect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    delete?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    connect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    update?: ReceitaVendedorUpdateWithWhereUniqueWithoutFilialInput | ReceitaVendedorUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaVendedorUpdateManyWithWhereWithoutFilialInput | ReceitaVendedorUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaVendedorScalarWhereInput | ReceitaVendedorScalarWhereInput[]
  }

  export type EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput = {
    create?: XOR<EstatisticasNotasFiscaisCreateWithoutFilialInput, EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput> | EstatisticasNotasFiscaisCreateWithoutFilialInput[] | EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput | EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput[]
    upsert?: EstatisticasNotasFiscaisUpsertWithWhereUniqueWithoutFilialInput | EstatisticasNotasFiscaisUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: EstatisticasNotasFiscaisCreateManyFilialInputEnvelope
    set?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
    disconnect?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
    delete?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
    connect?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
    update?: EstatisticasNotasFiscaisUpdateWithWhereUniqueWithoutFilialInput | EstatisticasNotasFiscaisUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: EstatisticasNotasFiscaisUpdateManyWithWhereWithoutFilialInput | EstatisticasNotasFiscaisUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: EstatisticasNotasFiscaisScalarWhereInput | EstatisticasNotasFiscaisScalarWhereInput[]
  }

  export type ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaVendedorDetalhadaCreateWithoutFilialInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput> | ReceitaVendedorDetalhadaCreateWithoutFilialInput[] | ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput | ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutFilialInput | ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaVendedorDetalhadaCreateManyFilialInputEnvelope
    set?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    disconnect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    delete?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    connect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    update?: ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutFilialInput | ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutFilialInput | ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaVendedorDetalhadaScalarWhereInput | ReceitaVendedorDetalhadaScalarWhereInput[]
  }

  export type TicketMedioVendedorUpdateManyWithoutFilialNestedInput = {
    create?: XOR<TicketMedioVendedorCreateWithoutFilialInput, TicketMedioVendedorUncheckedCreateWithoutFilialInput> | TicketMedioVendedorCreateWithoutFilialInput[] | TicketMedioVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: TicketMedioVendedorCreateOrConnectWithoutFilialInput | TicketMedioVendedorCreateOrConnectWithoutFilialInput[]
    upsert?: TicketMedioVendedorUpsertWithWhereUniqueWithoutFilialInput | TicketMedioVendedorUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: TicketMedioVendedorCreateManyFilialInputEnvelope
    set?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    disconnect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    delete?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    connect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    update?: TicketMedioVendedorUpdateWithWhereUniqueWithoutFilialInput | TicketMedioVendedorUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: TicketMedioVendedorUpdateManyWithWhereWithoutFilialInput | TicketMedioVendedorUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: TicketMedioVendedorScalarWhereInput | TicketMedioVendedorScalarWhereInput[]
  }

  export type MixVendedorUpdateManyWithoutFilialNestedInput = {
    create?: XOR<MixVendedorCreateWithoutFilialInput, MixVendedorUncheckedCreateWithoutFilialInput> | MixVendedorCreateWithoutFilialInput[] | MixVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MixVendedorCreateOrConnectWithoutFilialInput | MixVendedorCreateOrConnectWithoutFilialInput[]
    upsert?: MixVendedorUpsertWithWhereUniqueWithoutFilialInput | MixVendedorUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: MixVendedorCreateManyFilialInputEnvelope
    set?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    disconnect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    delete?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    connect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    update?: MixVendedorUpdateWithWhereUniqueWithoutFilialInput | MixVendedorUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: MixVendedorUpdateManyWithWhereWithoutFilialInput | MixVendedorUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: MixVendedorScalarWhereInput | MixVendedorScalarWhereInput[]
  }

  export type CoberturaCarteiraUpdateManyWithoutFilialNestedInput = {
    create?: XOR<CoberturaCarteiraCreateWithoutFilialInput, CoberturaCarteiraUncheckedCreateWithoutFilialInput> | CoberturaCarteiraCreateWithoutFilialInput[] | CoberturaCarteiraUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: CoberturaCarteiraCreateOrConnectWithoutFilialInput | CoberturaCarteiraCreateOrConnectWithoutFilialInput[]
    upsert?: CoberturaCarteiraUpsertWithWhereUniqueWithoutFilialInput | CoberturaCarteiraUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: CoberturaCarteiraCreateManyFilialInputEnvelope
    set?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    disconnect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    delete?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    connect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    update?: CoberturaCarteiraUpdateWithWhereUniqueWithoutFilialInput | CoberturaCarteiraUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: CoberturaCarteiraUpdateManyWithWhereWithoutFilialInput | CoberturaCarteiraUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: CoberturaCarteiraScalarWhereInput | CoberturaCarteiraScalarWhereInput[]
  }

  export type RankingVendedoresUpdateManyWithoutFilialNestedInput = {
    create?: XOR<RankingVendedoresCreateWithoutFilialInput, RankingVendedoresUncheckedCreateWithoutFilialInput> | RankingVendedoresCreateWithoutFilialInput[] | RankingVendedoresUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: RankingVendedoresCreateOrConnectWithoutFilialInput | RankingVendedoresCreateOrConnectWithoutFilialInput[]
    upsert?: RankingVendedoresUpsertWithWhereUniqueWithoutFilialInput | RankingVendedoresUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: RankingVendedoresCreateManyFilialInputEnvelope
    set?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    disconnect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    delete?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    connect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    update?: RankingVendedoresUpdateWithWhereUniqueWithoutFilialInput | RankingVendedoresUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: RankingVendedoresUpdateManyWithWhereWithoutFilialInput | RankingVendedoresUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: RankingVendedoresScalarWhereInput | RankingVendedoresScalarWhereInput[]
  }

  export type ReceitaFilialUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaFilialCreateWithoutFilialInput, ReceitaFilialUncheckedCreateWithoutFilialInput> | ReceitaFilialCreateWithoutFilialInput[] | ReceitaFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaFilialCreateOrConnectWithoutFilialInput | ReceitaFilialCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaFilialUpsertWithWhereUniqueWithoutFilialInput | ReceitaFilialUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaFilialCreateManyFilialInputEnvelope
    set?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
    disconnect?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
    delete?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
    connect?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
    update?: ReceitaFilialUpdateWithWhereUniqueWithoutFilialInput | ReceitaFilialUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaFilialUpdateManyWithWhereWithoutFilialInput | ReceitaFilialUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaFilialScalarWhereInput | ReceitaFilialScalarWhereInput[]
  }

  export type MixFilialUpdateManyWithoutFilialNestedInput = {
    create?: XOR<MixFilialCreateWithoutFilialInput, MixFilialUncheckedCreateWithoutFilialInput> | MixFilialCreateWithoutFilialInput[] | MixFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MixFilialCreateOrConnectWithoutFilialInput | MixFilialCreateOrConnectWithoutFilialInput[]
    upsert?: MixFilialUpsertWithWhereUniqueWithoutFilialInput | MixFilialUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: MixFilialCreateManyFilialInputEnvelope
    set?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
    disconnect?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
    delete?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
    connect?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
    update?: MixFilialUpdateWithWhereUniqueWithoutFilialInput | MixFilialUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: MixFilialUpdateManyWithWhereWithoutFilialInput | MixFilialUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: MixFilialScalarWhereInput | MixFilialScalarWhereInput[]
  }

  export type ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ParticipacaoReceitaFilialCreateWithoutFilialInput, ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput> | ParticipacaoReceitaFilialCreateWithoutFilialInput[] | ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput | ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput[]
    upsert?: ParticipacaoReceitaFilialUpsertWithWhereUniqueWithoutFilialInput | ParticipacaoReceitaFilialUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ParticipacaoReceitaFilialCreateManyFilialInputEnvelope
    set?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
    disconnect?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
    delete?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
    connect?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
    update?: ParticipacaoReceitaFilialUpdateWithWhereUniqueWithoutFilialInput | ParticipacaoReceitaFilialUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ParticipacaoReceitaFilialUpdateManyWithWhereWithoutFilialInput | ParticipacaoReceitaFilialUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ParticipacaoReceitaFilialScalarWhereInput | ParticipacaoReceitaFilialScalarWhereInput[]
  }

  export type ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaFilialRegiaoCreateWithoutFilialInput, ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput> | ReceitaFilialRegiaoCreateWithoutFilialInput[] | ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput | ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaFilialRegiaoUpsertWithWhereUniqueWithoutFilialInput | ReceitaFilialRegiaoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaFilialRegiaoCreateManyFilialInputEnvelope
    set?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
    disconnect?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
    delete?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
    connect?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
    update?: ReceitaFilialRegiaoUpdateWithWhereUniqueWithoutFilialInput | ReceitaFilialRegiaoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaFilialRegiaoUpdateManyWithWhereWithoutFilialInput | ReceitaFilialRegiaoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaFilialRegiaoScalarWhereInput | ReceitaFilialRegiaoScalarWhereInput[]
  }

  export type NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutFilialInput, NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput> | NotasFiscalCabecalhoCreateWithoutFilialInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput | NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput[]
    upsert?: NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutFilialInput | NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: NotasFiscalCabecalhoCreateManyFilialInputEnvelope
    set?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    disconnect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    delete?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    update?: NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutFilialInput | NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: NotasFiscalCabecalhoUpdateManyWithWhereWithoutFilialInput | NotasFiscalCabecalhoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: NotasFiscalCabecalhoScalarWhereInput | NotasFiscalCabecalhoScalarWhereInput[]
  }

  export type VendedorUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<VendedorCreateWithoutFilialInput, VendedorUncheckedCreateWithoutFilialInput> | VendedorCreateWithoutFilialInput[] | VendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: VendedorCreateOrConnectWithoutFilialInput | VendedorCreateOrConnectWithoutFilialInput[]
    upsert?: VendedorUpsertWithWhereUniqueWithoutFilialInput | VendedorUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: VendedorCreateManyFilialInputEnvelope
    set?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
    disconnect?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
    delete?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
    connect?: VendedorWhereUniqueInput | VendedorWhereUniqueInput[]
    update?: VendedorUpdateWithWhereUniqueWithoutFilialInput | VendedorUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: VendedorUpdateManyWithWhereWithoutFilialInput | VendedorUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: VendedorScalarWhereInput | VendedorScalarWhereInput[]
  }

  export type RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<RfvParameterSetCreateWithoutFilialInput, RfvParameterSetUncheckedCreateWithoutFilialInput> | RfvParameterSetCreateWithoutFilialInput[] | RfvParameterSetUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: RfvParameterSetCreateOrConnectWithoutFilialInput | RfvParameterSetCreateOrConnectWithoutFilialInput[]
    upsert?: RfvParameterSetUpsertWithWhereUniqueWithoutFilialInput | RfvParameterSetUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: RfvParameterSetCreateManyFilialInputEnvelope
    set?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
    disconnect?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
    delete?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
    connect?: RfvParameterSetWhereUniqueInput | RfvParameterSetWhereUniqueInput[]
    update?: RfvParameterSetUpdateWithWhereUniqueWithoutFilialInput | RfvParameterSetUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: RfvParameterSetUpdateManyWithWhereWithoutFilialInput | RfvParameterSetUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: RfvParameterSetScalarWhereInput | RfvParameterSetScalarWhereInput[]
  }

  export type MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutFilialInput, MaquinaEstoqueUncheckedCreateWithoutFilialInput> | MaquinaEstoqueCreateWithoutFilialInput[] | MaquinaEstoqueUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutFilialInput | MaquinaEstoqueCreateOrConnectWithoutFilialInput[]
    upsert?: MaquinaEstoqueUpsertWithWhereUniqueWithoutFilialInput | MaquinaEstoqueUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: MaquinaEstoqueCreateManyFilialInputEnvelope
    set?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    disconnect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    delete?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    connect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    update?: MaquinaEstoqueUpdateWithWhereUniqueWithoutFilialInput | MaquinaEstoqueUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: MaquinaEstoqueUpdateManyWithWhereWithoutFilialInput | MaquinaEstoqueUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: MaquinaEstoqueScalarWhereInput | MaquinaEstoqueScalarWhereInput[]
  }

  export type ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaPeriodoCreateWithoutFilialInput, ReceitaPeriodoUncheckedCreateWithoutFilialInput> | ReceitaPeriodoCreateWithoutFilialInput[] | ReceitaPeriodoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaPeriodoCreateOrConnectWithoutFilialInput | ReceitaPeriodoCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaPeriodoUpsertWithWhereUniqueWithoutFilialInput | ReceitaPeriodoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaPeriodoCreateManyFilialInputEnvelope
    set?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
    disconnect?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
    delete?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
    connect?: ReceitaPeriodoWhereUniqueInput | ReceitaPeriodoWhereUniqueInput[]
    update?: ReceitaPeriodoUpdateWithWhereUniqueWithoutFilialInput | ReceitaPeriodoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaPeriodoUpdateManyWithWhereWithoutFilialInput | ReceitaPeriodoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaPeriodoScalarWhereInput | ReceitaPeriodoScalarWhereInput[]
  }

  export type ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaTipoProdutoCreateWithoutFilialInput, ReceitaTipoProdutoUncheckedCreateWithoutFilialInput> | ReceitaTipoProdutoCreateWithoutFilialInput[] | ReceitaTipoProdutoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaTipoProdutoCreateOrConnectWithoutFilialInput | ReceitaTipoProdutoCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaTipoProdutoUpsertWithWhereUniqueWithoutFilialInput | ReceitaTipoProdutoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaTipoProdutoCreateManyFilialInputEnvelope
    set?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    disconnect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    delete?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    connect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    update?: ReceitaTipoProdutoUpdateWithWhereUniqueWithoutFilialInput | ReceitaTipoProdutoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaTipoProdutoUpdateManyWithWhereWithoutFilialInput | ReceitaTipoProdutoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaTipoProdutoScalarWhereInput | ReceitaTipoProdutoScalarWhereInput[]
  }

  export type ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaProdutoModeloCreateWithoutFilialInput, ReceitaProdutoModeloUncheckedCreateWithoutFilialInput> | ReceitaProdutoModeloCreateWithoutFilialInput[] | ReceitaProdutoModeloUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaProdutoModeloCreateOrConnectWithoutFilialInput | ReceitaProdutoModeloCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaProdutoModeloUpsertWithWhereUniqueWithoutFilialInput | ReceitaProdutoModeloUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaProdutoModeloCreateManyFilialInputEnvelope
    set?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    disconnect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    delete?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    connect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    update?: ReceitaProdutoModeloUpdateWithWhereUniqueWithoutFilialInput | ReceitaProdutoModeloUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaProdutoModeloUpdateManyWithWhereWithoutFilialInput | ReceitaProdutoModeloUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaProdutoModeloScalarWhereInput | ReceitaProdutoModeloScalarWhereInput[]
  }

  export type CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<CrescimentoVendasCreateWithoutFilialInput, CrescimentoVendasUncheckedCreateWithoutFilialInput> | CrescimentoVendasCreateWithoutFilialInput[] | CrescimentoVendasUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: CrescimentoVendasCreateOrConnectWithoutFilialInput | CrescimentoVendasCreateOrConnectWithoutFilialInput[]
    upsert?: CrescimentoVendasUpsertWithWhereUniqueWithoutFilialInput | CrescimentoVendasUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: CrescimentoVendasCreateManyFilialInputEnvelope
    set?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
    disconnect?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
    delete?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
    connect?: CrescimentoVendasWhereUniqueInput | CrescimentoVendasWhereUniqueInput[]
    update?: CrescimentoVendasUpdateWithWhereUniqueWithoutFilialInput | CrescimentoVendasUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: CrescimentoVendasUpdateManyWithWhereWithoutFilialInput | CrescimentoVendasUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: CrescimentoVendasScalarWhereInput | CrescimentoVendasScalarWhereInput[]
  }

  export type TicketMedioUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<TicketMedioCreateWithoutFilialInput, TicketMedioUncheckedCreateWithoutFilialInput> | TicketMedioCreateWithoutFilialInput[] | TicketMedioUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: TicketMedioCreateOrConnectWithoutFilialInput | TicketMedioCreateOrConnectWithoutFilialInput[]
    upsert?: TicketMedioUpsertWithWhereUniqueWithoutFilialInput | TicketMedioUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: TicketMedioCreateManyFilialInputEnvelope
    set?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
    disconnect?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
    delete?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
    connect?: TicketMedioWhereUniqueInput | TicketMedioWhereUniqueInput[]
    update?: TicketMedioUpdateWithWhereUniqueWithoutFilialInput | TicketMedioUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: TicketMedioUpdateManyWithWhereWithoutFilialInput | TicketMedioUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: TicketMedioScalarWhereInput | TicketMedioScalarWhereInput[]
  }

  export type ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ItensPorNFCreateWithoutFilialInput, ItensPorNFUncheckedCreateWithoutFilialInput> | ItensPorNFCreateWithoutFilialInput[] | ItensPorNFUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ItensPorNFCreateOrConnectWithoutFilialInput | ItensPorNFCreateOrConnectWithoutFilialInput[]
    upsert?: ItensPorNFUpsertWithWhereUniqueWithoutFilialInput | ItensPorNFUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ItensPorNFCreateManyFilialInputEnvelope
    set?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
    disconnect?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
    delete?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
    connect?: ItensPorNFWhereUniqueInput | ItensPorNFWhereUniqueInput[]
    update?: ItensPorNFUpdateWithWhereUniqueWithoutFilialInput | ItensPorNFUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ItensPorNFUpdateManyWithWhereWithoutFilialInput | ItensPorNFUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ItensPorNFScalarWhereInput | ItensPorNFScalarWhereInput[]
  }

  export type SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<SazonalidadeCreateWithoutFilialInput, SazonalidadeUncheckedCreateWithoutFilialInput> | SazonalidadeCreateWithoutFilialInput[] | SazonalidadeUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: SazonalidadeCreateOrConnectWithoutFilialInput | SazonalidadeCreateOrConnectWithoutFilialInput[]
    upsert?: SazonalidadeUpsertWithWhereUniqueWithoutFilialInput | SazonalidadeUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: SazonalidadeCreateManyFilialInputEnvelope
    set?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
    disconnect?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
    delete?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
    connect?: SazonalidadeWhereUniqueInput | SazonalidadeWhereUniqueInput[]
    update?: SazonalidadeUpdateWithWhereUniqueWithoutFilialInput | SazonalidadeUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: SazonalidadeUpdateManyWithWhereWithoutFilialInput | SazonalidadeUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: SazonalidadeScalarWhereInput | SazonalidadeScalarWhereInput[]
  }

  export type ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaLocalizacaoCreateWithoutFilialInput, ReceitaLocalizacaoUncheckedCreateWithoutFilialInput> | ReceitaLocalizacaoCreateWithoutFilialInput[] | ReceitaLocalizacaoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaLocalizacaoCreateOrConnectWithoutFilialInput | ReceitaLocalizacaoCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaLocalizacaoUpsertWithWhereUniqueWithoutFilialInput | ReceitaLocalizacaoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaLocalizacaoCreateManyFilialInputEnvelope
    set?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
    disconnect?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
    delete?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
    connect?: ReceitaLocalizacaoWhereUniqueInput | ReceitaLocalizacaoWhereUniqueInput[]
    update?: ReceitaLocalizacaoUpdateWithWhereUniqueWithoutFilialInput | ReceitaLocalizacaoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaLocalizacaoUpdateManyWithWhereWithoutFilialInput | ReceitaLocalizacaoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaLocalizacaoScalarWhereInput | ReceitaLocalizacaoScalarWhereInput[]
  }

  export type ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaVendedorCreateWithoutFilialInput, ReceitaVendedorUncheckedCreateWithoutFilialInput> | ReceitaVendedorCreateWithoutFilialInput[] | ReceitaVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaVendedorCreateOrConnectWithoutFilialInput | ReceitaVendedorCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaVendedorUpsertWithWhereUniqueWithoutFilialInput | ReceitaVendedorUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaVendedorCreateManyFilialInputEnvelope
    set?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    disconnect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    delete?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    connect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    update?: ReceitaVendedorUpdateWithWhereUniqueWithoutFilialInput | ReceitaVendedorUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaVendedorUpdateManyWithWhereWithoutFilialInput | ReceitaVendedorUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaVendedorScalarWhereInput | ReceitaVendedorScalarWhereInput[]
  }

  export type EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<EstatisticasNotasFiscaisCreateWithoutFilialInput, EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput> | EstatisticasNotasFiscaisCreateWithoutFilialInput[] | EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput | EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput[]
    upsert?: EstatisticasNotasFiscaisUpsertWithWhereUniqueWithoutFilialInput | EstatisticasNotasFiscaisUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: EstatisticasNotasFiscaisCreateManyFilialInputEnvelope
    set?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
    disconnect?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
    delete?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
    connect?: EstatisticasNotasFiscaisWhereUniqueInput | EstatisticasNotasFiscaisWhereUniqueInput[]
    update?: EstatisticasNotasFiscaisUpdateWithWhereUniqueWithoutFilialInput | EstatisticasNotasFiscaisUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: EstatisticasNotasFiscaisUpdateManyWithWhereWithoutFilialInput | EstatisticasNotasFiscaisUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: EstatisticasNotasFiscaisScalarWhereInput | EstatisticasNotasFiscaisScalarWhereInput[]
  }

  export type ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaVendedorDetalhadaCreateWithoutFilialInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput> | ReceitaVendedorDetalhadaCreateWithoutFilialInput[] | ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput | ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutFilialInput | ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaVendedorDetalhadaCreateManyFilialInputEnvelope
    set?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    disconnect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    delete?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    connect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    update?: ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutFilialInput | ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutFilialInput | ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaVendedorDetalhadaScalarWhereInput | ReceitaVendedorDetalhadaScalarWhereInput[]
  }

  export type TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<TicketMedioVendedorCreateWithoutFilialInput, TicketMedioVendedorUncheckedCreateWithoutFilialInput> | TicketMedioVendedorCreateWithoutFilialInput[] | TicketMedioVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: TicketMedioVendedorCreateOrConnectWithoutFilialInput | TicketMedioVendedorCreateOrConnectWithoutFilialInput[]
    upsert?: TicketMedioVendedorUpsertWithWhereUniqueWithoutFilialInput | TicketMedioVendedorUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: TicketMedioVendedorCreateManyFilialInputEnvelope
    set?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    disconnect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    delete?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    connect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    update?: TicketMedioVendedorUpdateWithWhereUniqueWithoutFilialInput | TicketMedioVendedorUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: TicketMedioVendedorUpdateManyWithWhereWithoutFilialInput | TicketMedioVendedorUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: TicketMedioVendedorScalarWhereInput | TicketMedioVendedorScalarWhereInput[]
  }

  export type MixVendedorUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<MixVendedorCreateWithoutFilialInput, MixVendedorUncheckedCreateWithoutFilialInput> | MixVendedorCreateWithoutFilialInput[] | MixVendedorUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MixVendedorCreateOrConnectWithoutFilialInput | MixVendedorCreateOrConnectWithoutFilialInput[]
    upsert?: MixVendedorUpsertWithWhereUniqueWithoutFilialInput | MixVendedorUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: MixVendedorCreateManyFilialInputEnvelope
    set?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    disconnect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    delete?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    connect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    update?: MixVendedorUpdateWithWhereUniqueWithoutFilialInput | MixVendedorUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: MixVendedorUpdateManyWithWhereWithoutFilialInput | MixVendedorUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: MixVendedorScalarWhereInput | MixVendedorScalarWhereInput[]
  }

  export type CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<CoberturaCarteiraCreateWithoutFilialInput, CoberturaCarteiraUncheckedCreateWithoutFilialInput> | CoberturaCarteiraCreateWithoutFilialInput[] | CoberturaCarteiraUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: CoberturaCarteiraCreateOrConnectWithoutFilialInput | CoberturaCarteiraCreateOrConnectWithoutFilialInput[]
    upsert?: CoberturaCarteiraUpsertWithWhereUniqueWithoutFilialInput | CoberturaCarteiraUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: CoberturaCarteiraCreateManyFilialInputEnvelope
    set?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    disconnect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    delete?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    connect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    update?: CoberturaCarteiraUpdateWithWhereUniqueWithoutFilialInput | CoberturaCarteiraUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: CoberturaCarteiraUpdateManyWithWhereWithoutFilialInput | CoberturaCarteiraUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: CoberturaCarteiraScalarWhereInput | CoberturaCarteiraScalarWhereInput[]
  }

  export type RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<RankingVendedoresCreateWithoutFilialInput, RankingVendedoresUncheckedCreateWithoutFilialInput> | RankingVendedoresCreateWithoutFilialInput[] | RankingVendedoresUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: RankingVendedoresCreateOrConnectWithoutFilialInput | RankingVendedoresCreateOrConnectWithoutFilialInput[]
    upsert?: RankingVendedoresUpsertWithWhereUniqueWithoutFilialInput | RankingVendedoresUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: RankingVendedoresCreateManyFilialInputEnvelope
    set?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    disconnect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    delete?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    connect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    update?: RankingVendedoresUpdateWithWhereUniqueWithoutFilialInput | RankingVendedoresUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: RankingVendedoresUpdateManyWithWhereWithoutFilialInput | RankingVendedoresUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: RankingVendedoresScalarWhereInput | RankingVendedoresScalarWhereInput[]
  }

  export type ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaFilialCreateWithoutFilialInput, ReceitaFilialUncheckedCreateWithoutFilialInput> | ReceitaFilialCreateWithoutFilialInput[] | ReceitaFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaFilialCreateOrConnectWithoutFilialInput | ReceitaFilialCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaFilialUpsertWithWhereUniqueWithoutFilialInput | ReceitaFilialUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaFilialCreateManyFilialInputEnvelope
    set?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
    disconnect?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
    delete?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
    connect?: ReceitaFilialWhereUniqueInput | ReceitaFilialWhereUniqueInput[]
    update?: ReceitaFilialUpdateWithWhereUniqueWithoutFilialInput | ReceitaFilialUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaFilialUpdateManyWithWhereWithoutFilialInput | ReceitaFilialUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaFilialScalarWhereInput | ReceitaFilialScalarWhereInput[]
  }

  export type MixFilialUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<MixFilialCreateWithoutFilialInput, MixFilialUncheckedCreateWithoutFilialInput> | MixFilialCreateWithoutFilialInput[] | MixFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: MixFilialCreateOrConnectWithoutFilialInput | MixFilialCreateOrConnectWithoutFilialInput[]
    upsert?: MixFilialUpsertWithWhereUniqueWithoutFilialInput | MixFilialUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: MixFilialCreateManyFilialInputEnvelope
    set?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
    disconnect?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
    delete?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
    connect?: MixFilialWhereUniqueInput | MixFilialWhereUniqueInput[]
    update?: MixFilialUpdateWithWhereUniqueWithoutFilialInput | MixFilialUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: MixFilialUpdateManyWithWhereWithoutFilialInput | MixFilialUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: MixFilialScalarWhereInput | MixFilialScalarWhereInput[]
  }

  export type ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ParticipacaoReceitaFilialCreateWithoutFilialInput, ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput> | ParticipacaoReceitaFilialCreateWithoutFilialInput[] | ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput | ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput[]
    upsert?: ParticipacaoReceitaFilialUpsertWithWhereUniqueWithoutFilialInput | ParticipacaoReceitaFilialUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ParticipacaoReceitaFilialCreateManyFilialInputEnvelope
    set?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
    disconnect?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
    delete?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
    connect?: ParticipacaoReceitaFilialWhereUniqueInput | ParticipacaoReceitaFilialWhereUniqueInput[]
    update?: ParticipacaoReceitaFilialUpdateWithWhereUniqueWithoutFilialInput | ParticipacaoReceitaFilialUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ParticipacaoReceitaFilialUpdateManyWithWhereWithoutFilialInput | ParticipacaoReceitaFilialUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ParticipacaoReceitaFilialScalarWhereInput | ParticipacaoReceitaFilialScalarWhereInput[]
  }

  export type ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput = {
    create?: XOR<ReceitaFilialRegiaoCreateWithoutFilialInput, ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput> | ReceitaFilialRegiaoCreateWithoutFilialInput[] | ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput[]
    connectOrCreate?: ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput | ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput[]
    upsert?: ReceitaFilialRegiaoUpsertWithWhereUniqueWithoutFilialInput | ReceitaFilialRegiaoUpsertWithWhereUniqueWithoutFilialInput[]
    createMany?: ReceitaFilialRegiaoCreateManyFilialInputEnvelope
    set?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
    disconnect?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
    delete?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
    connect?: ReceitaFilialRegiaoWhereUniqueInput | ReceitaFilialRegiaoWhereUniqueInput[]
    update?: ReceitaFilialRegiaoUpdateWithWhereUniqueWithoutFilialInput | ReceitaFilialRegiaoUpdateWithWhereUniqueWithoutFilialInput[]
    updateMany?: ReceitaFilialRegiaoUpdateManyWithWhereWithoutFilialInput | ReceitaFilialRegiaoUpdateManyWithWhereWithoutFilialInput[]
    deleteMany?: ReceitaFilialRegiaoScalarWhereInput | ReceitaFilialRegiaoScalarWhereInput[]
  }

  export type NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutVendedorInput, NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput> | NotasFiscalCabecalhoCreateWithoutVendedorInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput | NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput[]
    createMany?: NotasFiscalCabecalhoCreateManyVendedorInputEnvelope
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
  }

  export type ReceitaVendedorCreateNestedManyWithoutVendedorInput = {
    create?: XOR<ReceitaVendedorCreateWithoutVendedorInput, ReceitaVendedorUncheckedCreateWithoutVendedorInput> | ReceitaVendedorCreateWithoutVendedorInput[] | ReceitaVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ReceitaVendedorCreateOrConnectWithoutVendedorInput | ReceitaVendedorCreateOrConnectWithoutVendedorInput[]
    createMany?: ReceitaVendedorCreateManyVendedorInputEnvelope
    connect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
  }

  export type ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput = {
    create?: XOR<ReceitaVendedorDetalhadaCreateWithoutVendedorInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput> | ReceitaVendedorDetalhadaCreateWithoutVendedorInput[] | ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput | ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput[]
    createMany?: ReceitaVendedorDetalhadaCreateManyVendedorInputEnvelope
    connect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
  }

  export type TicketMedioVendedorCreateNestedManyWithoutVendedorInput = {
    create?: XOR<TicketMedioVendedorCreateWithoutVendedorInput, TicketMedioVendedorUncheckedCreateWithoutVendedorInput> | TicketMedioVendedorCreateWithoutVendedorInput[] | TicketMedioVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: TicketMedioVendedorCreateOrConnectWithoutVendedorInput | TicketMedioVendedorCreateOrConnectWithoutVendedorInput[]
    createMany?: TicketMedioVendedorCreateManyVendedorInputEnvelope
    connect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
  }

  export type MixVendedorCreateNestedManyWithoutVendedorInput = {
    create?: XOR<MixVendedorCreateWithoutVendedorInput, MixVendedorUncheckedCreateWithoutVendedorInput> | MixVendedorCreateWithoutVendedorInput[] | MixVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: MixVendedorCreateOrConnectWithoutVendedorInput | MixVendedorCreateOrConnectWithoutVendedorInput[]
    createMany?: MixVendedorCreateManyVendedorInputEnvelope
    connect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
  }

  export type CoberturaCarteiraCreateNestedManyWithoutVendedorInput = {
    create?: XOR<CoberturaCarteiraCreateWithoutVendedorInput, CoberturaCarteiraUncheckedCreateWithoutVendedorInput> | CoberturaCarteiraCreateWithoutVendedorInput[] | CoberturaCarteiraUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: CoberturaCarteiraCreateOrConnectWithoutVendedorInput | CoberturaCarteiraCreateOrConnectWithoutVendedorInput[]
    createMany?: CoberturaCarteiraCreateManyVendedorInputEnvelope
    connect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
  }

  export type RankingVendedoresCreateNestedManyWithoutVendedorInput = {
    create?: XOR<RankingVendedoresCreateWithoutVendedorInput, RankingVendedoresUncheckedCreateWithoutVendedorInput> | RankingVendedoresCreateWithoutVendedorInput[] | RankingVendedoresUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: RankingVendedoresCreateOrConnectWithoutVendedorInput | RankingVendedoresCreateOrConnectWithoutVendedorInput[]
    createMany?: RankingVendedoresCreateManyVendedorInputEnvelope
    connect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
  }

  export type FilialCreateNestedOneWithoutVendedoresInput = {
    create?: XOR<FilialCreateWithoutVendedoresInput, FilialUncheckedCreateWithoutVendedoresInput>
    connectOrCreate?: FilialCreateOrConnectWithoutVendedoresInput
    connect?: FilialWhereUniqueInput
  }

  export type NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutVendedorInput, NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput> | NotasFiscalCabecalhoCreateWithoutVendedorInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput | NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput[]
    createMany?: NotasFiscalCabecalhoCreateManyVendedorInputEnvelope
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
  }

  export type ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<ReceitaVendedorCreateWithoutVendedorInput, ReceitaVendedorUncheckedCreateWithoutVendedorInput> | ReceitaVendedorCreateWithoutVendedorInput[] | ReceitaVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ReceitaVendedorCreateOrConnectWithoutVendedorInput | ReceitaVendedorCreateOrConnectWithoutVendedorInput[]
    createMany?: ReceitaVendedorCreateManyVendedorInputEnvelope
    connect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
  }

  export type ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<ReceitaVendedorDetalhadaCreateWithoutVendedorInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput> | ReceitaVendedorDetalhadaCreateWithoutVendedorInput[] | ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput | ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput[]
    createMany?: ReceitaVendedorDetalhadaCreateManyVendedorInputEnvelope
    connect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
  }

  export type TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<TicketMedioVendedorCreateWithoutVendedorInput, TicketMedioVendedorUncheckedCreateWithoutVendedorInput> | TicketMedioVendedorCreateWithoutVendedorInput[] | TicketMedioVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: TicketMedioVendedorCreateOrConnectWithoutVendedorInput | TicketMedioVendedorCreateOrConnectWithoutVendedorInput[]
    createMany?: TicketMedioVendedorCreateManyVendedorInputEnvelope
    connect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
  }

  export type MixVendedorUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<MixVendedorCreateWithoutVendedorInput, MixVendedorUncheckedCreateWithoutVendedorInput> | MixVendedorCreateWithoutVendedorInput[] | MixVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: MixVendedorCreateOrConnectWithoutVendedorInput | MixVendedorCreateOrConnectWithoutVendedorInput[]
    createMany?: MixVendedorCreateManyVendedorInputEnvelope
    connect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
  }

  export type CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<CoberturaCarteiraCreateWithoutVendedorInput, CoberturaCarteiraUncheckedCreateWithoutVendedorInput> | CoberturaCarteiraCreateWithoutVendedorInput[] | CoberturaCarteiraUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: CoberturaCarteiraCreateOrConnectWithoutVendedorInput | CoberturaCarteiraCreateOrConnectWithoutVendedorInput[]
    createMany?: CoberturaCarteiraCreateManyVendedorInputEnvelope
    connect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
  }

  export type RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<RankingVendedoresCreateWithoutVendedorInput, RankingVendedoresUncheckedCreateWithoutVendedorInput> | RankingVendedoresCreateWithoutVendedorInput[] | RankingVendedoresUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: RankingVendedoresCreateOrConnectWithoutVendedorInput | RankingVendedoresCreateOrConnectWithoutVendedorInput[]
    createMany?: RankingVendedoresCreateManyVendedorInputEnvelope
    connect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
  }

  export type NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutVendedorInput, NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput> | NotasFiscalCabecalhoCreateWithoutVendedorInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput | NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput[]
    upsert?: NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutVendedorInput | NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: NotasFiscalCabecalhoCreateManyVendedorInputEnvelope
    set?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    disconnect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    delete?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    update?: NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutVendedorInput | NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: NotasFiscalCabecalhoUpdateManyWithWhereWithoutVendedorInput | NotasFiscalCabecalhoUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: NotasFiscalCabecalhoScalarWhereInput | NotasFiscalCabecalhoScalarWhereInput[]
  }

  export type ReceitaVendedorUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<ReceitaVendedorCreateWithoutVendedorInput, ReceitaVendedorUncheckedCreateWithoutVendedorInput> | ReceitaVendedorCreateWithoutVendedorInput[] | ReceitaVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ReceitaVendedorCreateOrConnectWithoutVendedorInput | ReceitaVendedorCreateOrConnectWithoutVendedorInput[]
    upsert?: ReceitaVendedorUpsertWithWhereUniqueWithoutVendedorInput | ReceitaVendedorUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: ReceitaVendedorCreateManyVendedorInputEnvelope
    set?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    disconnect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    delete?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    connect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    update?: ReceitaVendedorUpdateWithWhereUniqueWithoutVendedorInput | ReceitaVendedorUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: ReceitaVendedorUpdateManyWithWhereWithoutVendedorInput | ReceitaVendedorUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: ReceitaVendedorScalarWhereInput | ReceitaVendedorScalarWhereInput[]
  }

  export type ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<ReceitaVendedorDetalhadaCreateWithoutVendedorInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput> | ReceitaVendedorDetalhadaCreateWithoutVendedorInput[] | ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput | ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput[]
    upsert?: ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutVendedorInput | ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: ReceitaVendedorDetalhadaCreateManyVendedorInputEnvelope
    set?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    disconnect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    delete?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    connect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    update?: ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutVendedorInput | ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutVendedorInput | ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: ReceitaVendedorDetalhadaScalarWhereInput | ReceitaVendedorDetalhadaScalarWhereInput[]
  }

  export type TicketMedioVendedorUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<TicketMedioVendedorCreateWithoutVendedorInput, TicketMedioVendedorUncheckedCreateWithoutVendedorInput> | TicketMedioVendedorCreateWithoutVendedorInput[] | TicketMedioVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: TicketMedioVendedorCreateOrConnectWithoutVendedorInput | TicketMedioVendedorCreateOrConnectWithoutVendedorInput[]
    upsert?: TicketMedioVendedorUpsertWithWhereUniqueWithoutVendedorInput | TicketMedioVendedorUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: TicketMedioVendedorCreateManyVendedorInputEnvelope
    set?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    disconnect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    delete?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    connect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    update?: TicketMedioVendedorUpdateWithWhereUniqueWithoutVendedorInput | TicketMedioVendedorUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: TicketMedioVendedorUpdateManyWithWhereWithoutVendedorInput | TicketMedioVendedorUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: TicketMedioVendedorScalarWhereInput | TicketMedioVendedorScalarWhereInput[]
  }

  export type MixVendedorUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<MixVendedorCreateWithoutVendedorInput, MixVendedorUncheckedCreateWithoutVendedorInput> | MixVendedorCreateWithoutVendedorInput[] | MixVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: MixVendedorCreateOrConnectWithoutVendedorInput | MixVendedorCreateOrConnectWithoutVendedorInput[]
    upsert?: MixVendedorUpsertWithWhereUniqueWithoutVendedorInput | MixVendedorUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: MixVendedorCreateManyVendedorInputEnvelope
    set?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    disconnect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    delete?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    connect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    update?: MixVendedorUpdateWithWhereUniqueWithoutVendedorInput | MixVendedorUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: MixVendedorUpdateManyWithWhereWithoutVendedorInput | MixVendedorUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: MixVendedorScalarWhereInput | MixVendedorScalarWhereInput[]
  }

  export type CoberturaCarteiraUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<CoberturaCarteiraCreateWithoutVendedorInput, CoberturaCarteiraUncheckedCreateWithoutVendedorInput> | CoberturaCarteiraCreateWithoutVendedorInput[] | CoberturaCarteiraUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: CoberturaCarteiraCreateOrConnectWithoutVendedorInput | CoberturaCarteiraCreateOrConnectWithoutVendedorInput[]
    upsert?: CoberturaCarteiraUpsertWithWhereUniqueWithoutVendedorInput | CoberturaCarteiraUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: CoberturaCarteiraCreateManyVendedorInputEnvelope
    set?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    disconnect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    delete?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    connect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    update?: CoberturaCarteiraUpdateWithWhereUniqueWithoutVendedorInput | CoberturaCarteiraUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: CoberturaCarteiraUpdateManyWithWhereWithoutVendedorInput | CoberturaCarteiraUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: CoberturaCarteiraScalarWhereInput | CoberturaCarteiraScalarWhereInput[]
  }

  export type RankingVendedoresUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<RankingVendedoresCreateWithoutVendedorInput, RankingVendedoresUncheckedCreateWithoutVendedorInput> | RankingVendedoresCreateWithoutVendedorInput[] | RankingVendedoresUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: RankingVendedoresCreateOrConnectWithoutVendedorInput | RankingVendedoresCreateOrConnectWithoutVendedorInput[]
    upsert?: RankingVendedoresUpsertWithWhereUniqueWithoutVendedorInput | RankingVendedoresUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: RankingVendedoresCreateManyVendedorInputEnvelope
    set?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    disconnect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    delete?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    connect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    update?: RankingVendedoresUpdateWithWhereUniqueWithoutVendedorInput | RankingVendedoresUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: RankingVendedoresUpdateManyWithWhereWithoutVendedorInput | RankingVendedoresUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: RankingVendedoresScalarWhereInput | RankingVendedoresScalarWhereInput[]
  }

  export type FilialUpdateOneWithoutVendedoresNestedInput = {
    create?: XOR<FilialCreateWithoutVendedoresInput, FilialUncheckedCreateWithoutVendedoresInput>
    connectOrCreate?: FilialCreateOrConnectWithoutVendedoresInput
    upsert?: FilialUpsertWithoutVendedoresInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutVendedoresInput, FilialUpdateWithoutVendedoresInput>, FilialUncheckedUpdateWithoutVendedoresInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutVendedorInput, NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput> | NotasFiscalCabecalhoCreateWithoutVendedorInput[] | NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput | NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput[]
    upsert?: NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutVendedorInput | NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: NotasFiscalCabecalhoCreateManyVendedorInputEnvelope
    set?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    disconnect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    delete?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    connect?: NotasFiscalCabecalhoWhereUniqueInput | NotasFiscalCabecalhoWhereUniqueInput[]
    update?: NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutVendedorInput | NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: NotasFiscalCabecalhoUpdateManyWithWhereWithoutVendedorInput | NotasFiscalCabecalhoUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: NotasFiscalCabecalhoScalarWhereInput | NotasFiscalCabecalhoScalarWhereInput[]
  }

  export type ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<ReceitaVendedorCreateWithoutVendedorInput, ReceitaVendedorUncheckedCreateWithoutVendedorInput> | ReceitaVendedorCreateWithoutVendedorInput[] | ReceitaVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ReceitaVendedorCreateOrConnectWithoutVendedorInput | ReceitaVendedorCreateOrConnectWithoutVendedorInput[]
    upsert?: ReceitaVendedorUpsertWithWhereUniqueWithoutVendedorInput | ReceitaVendedorUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: ReceitaVendedorCreateManyVendedorInputEnvelope
    set?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    disconnect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    delete?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    connect?: ReceitaVendedorWhereUniqueInput | ReceitaVendedorWhereUniqueInput[]
    update?: ReceitaVendedorUpdateWithWhereUniqueWithoutVendedorInput | ReceitaVendedorUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: ReceitaVendedorUpdateManyWithWhereWithoutVendedorInput | ReceitaVendedorUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: ReceitaVendedorScalarWhereInput | ReceitaVendedorScalarWhereInput[]
  }

  export type ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<ReceitaVendedorDetalhadaCreateWithoutVendedorInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput> | ReceitaVendedorDetalhadaCreateWithoutVendedorInput[] | ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput | ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput[]
    upsert?: ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutVendedorInput | ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: ReceitaVendedorDetalhadaCreateManyVendedorInputEnvelope
    set?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    disconnect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    delete?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    connect?: ReceitaVendedorDetalhadaWhereUniqueInput | ReceitaVendedorDetalhadaWhereUniqueInput[]
    update?: ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutVendedorInput | ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutVendedorInput | ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: ReceitaVendedorDetalhadaScalarWhereInput | ReceitaVendedorDetalhadaScalarWhereInput[]
  }

  export type TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<TicketMedioVendedorCreateWithoutVendedorInput, TicketMedioVendedorUncheckedCreateWithoutVendedorInput> | TicketMedioVendedorCreateWithoutVendedorInput[] | TicketMedioVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: TicketMedioVendedorCreateOrConnectWithoutVendedorInput | TicketMedioVendedorCreateOrConnectWithoutVendedorInput[]
    upsert?: TicketMedioVendedorUpsertWithWhereUniqueWithoutVendedorInput | TicketMedioVendedorUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: TicketMedioVendedorCreateManyVendedorInputEnvelope
    set?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    disconnect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    delete?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    connect?: TicketMedioVendedorWhereUniqueInput | TicketMedioVendedorWhereUniqueInput[]
    update?: TicketMedioVendedorUpdateWithWhereUniqueWithoutVendedorInput | TicketMedioVendedorUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: TicketMedioVendedorUpdateManyWithWhereWithoutVendedorInput | TicketMedioVendedorUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: TicketMedioVendedorScalarWhereInput | TicketMedioVendedorScalarWhereInput[]
  }

  export type MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<MixVendedorCreateWithoutVendedorInput, MixVendedorUncheckedCreateWithoutVendedorInput> | MixVendedorCreateWithoutVendedorInput[] | MixVendedorUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: MixVendedorCreateOrConnectWithoutVendedorInput | MixVendedorCreateOrConnectWithoutVendedorInput[]
    upsert?: MixVendedorUpsertWithWhereUniqueWithoutVendedorInput | MixVendedorUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: MixVendedorCreateManyVendedorInputEnvelope
    set?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    disconnect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    delete?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    connect?: MixVendedorWhereUniqueInput | MixVendedorWhereUniqueInput[]
    update?: MixVendedorUpdateWithWhereUniqueWithoutVendedorInput | MixVendedorUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: MixVendedorUpdateManyWithWhereWithoutVendedorInput | MixVendedorUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: MixVendedorScalarWhereInput | MixVendedorScalarWhereInput[]
  }

  export type CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<CoberturaCarteiraCreateWithoutVendedorInput, CoberturaCarteiraUncheckedCreateWithoutVendedorInput> | CoberturaCarteiraCreateWithoutVendedorInput[] | CoberturaCarteiraUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: CoberturaCarteiraCreateOrConnectWithoutVendedorInput | CoberturaCarteiraCreateOrConnectWithoutVendedorInput[]
    upsert?: CoberturaCarteiraUpsertWithWhereUniqueWithoutVendedorInput | CoberturaCarteiraUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: CoberturaCarteiraCreateManyVendedorInputEnvelope
    set?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    disconnect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    delete?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    connect?: CoberturaCarteiraWhereUniqueInput | CoberturaCarteiraWhereUniqueInput[]
    update?: CoberturaCarteiraUpdateWithWhereUniqueWithoutVendedorInput | CoberturaCarteiraUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: CoberturaCarteiraUpdateManyWithWhereWithoutVendedorInput | CoberturaCarteiraUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: CoberturaCarteiraScalarWhereInput | CoberturaCarteiraScalarWhereInput[]
  }

  export type RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<RankingVendedoresCreateWithoutVendedorInput, RankingVendedoresUncheckedCreateWithoutVendedorInput> | RankingVendedoresCreateWithoutVendedorInput[] | RankingVendedoresUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: RankingVendedoresCreateOrConnectWithoutVendedorInput | RankingVendedoresCreateOrConnectWithoutVendedorInput[]
    upsert?: RankingVendedoresUpsertWithWhereUniqueWithoutVendedorInput | RankingVendedoresUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: RankingVendedoresCreateManyVendedorInputEnvelope
    set?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    disconnect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    delete?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    connect?: RankingVendedoresWhereUniqueInput | RankingVendedoresWhereUniqueInput[]
    update?: RankingVendedoresUpdateWithWhereUniqueWithoutVendedorInput | RankingVendedoresUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: RankingVendedoresUpdateManyWithWhereWithoutVendedorInput | RankingVendedoresUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: RankingVendedoresScalarWhereInput | RankingVendedoresScalarWhereInput[]
  }

  export type MaquinaEstoqueCreateNestedManyWithoutProdutoInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutProdutoInput, MaquinaEstoqueUncheckedCreateWithoutProdutoInput> | MaquinaEstoqueCreateWithoutProdutoInput[] | MaquinaEstoqueUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutProdutoInput | MaquinaEstoqueCreateOrConnectWithoutProdutoInput[]
    createMany?: MaquinaEstoqueCreateManyProdutoInputEnvelope
    connect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
  }

  export type NotaFiscalItemCreateNestedManyWithoutProdutoInput = {
    create?: XOR<NotaFiscalItemCreateWithoutProdutoInput, NotaFiscalItemUncheckedCreateWithoutProdutoInput> | NotaFiscalItemCreateWithoutProdutoInput[] | NotaFiscalItemUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutProdutoInput | NotaFiscalItemCreateOrConnectWithoutProdutoInput[]
    createMany?: NotaFiscalItemCreateManyProdutoInputEnvelope
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
  }

  export type ReceitaTipoProdutoCreateNestedManyWithoutProdutoInput = {
    create?: XOR<ReceitaTipoProdutoCreateWithoutProdutoInput, ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput> | ReceitaTipoProdutoCreateWithoutProdutoInput[] | ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput | ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput[]
    createMany?: ReceitaTipoProdutoCreateManyProdutoInputEnvelope
    connect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
  }

  export type ReceitaProdutoModeloCreateNestedManyWithoutProdutoInput = {
    create?: XOR<ReceitaProdutoModeloCreateWithoutProdutoInput, ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput> | ReceitaProdutoModeloCreateWithoutProdutoInput[] | ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput | ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput[]
    createMany?: ReceitaProdutoModeloCreateManyProdutoInputEnvelope
    connect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
  }

  export type AssociacaoProdutoCreateNestedManyWithoutProdutoAInput = {
    create?: XOR<AssociacaoProdutoCreateWithoutProdutoAInput, AssociacaoProdutoUncheckedCreateWithoutProdutoAInput> | AssociacaoProdutoCreateWithoutProdutoAInput[] | AssociacaoProdutoUncheckedCreateWithoutProdutoAInput[]
    connectOrCreate?: AssociacaoProdutoCreateOrConnectWithoutProdutoAInput | AssociacaoProdutoCreateOrConnectWithoutProdutoAInput[]
    createMany?: AssociacaoProdutoCreateManyProdutoAInputEnvelope
    connect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
  }

  export type AssociacaoProdutoCreateNestedManyWithoutProdutoBInput = {
    create?: XOR<AssociacaoProdutoCreateWithoutProdutoBInput, AssociacaoProdutoUncheckedCreateWithoutProdutoBInput> | AssociacaoProdutoCreateWithoutProdutoBInput[] | AssociacaoProdutoUncheckedCreateWithoutProdutoBInput[]
    connectOrCreate?: AssociacaoProdutoCreateOrConnectWithoutProdutoBInput | AssociacaoProdutoCreateOrConnectWithoutProdutoBInput[]
    createMany?: AssociacaoProdutoCreateManyProdutoBInputEnvelope
    connect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
  }

  export type MaquinaEstoqueUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutProdutoInput, MaquinaEstoqueUncheckedCreateWithoutProdutoInput> | MaquinaEstoqueCreateWithoutProdutoInput[] | MaquinaEstoqueUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutProdutoInput | MaquinaEstoqueCreateOrConnectWithoutProdutoInput[]
    createMany?: MaquinaEstoqueCreateManyProdutoInputEnvelope
    connect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
  }

  export type NotaFiscalItemUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<NotaFiscalItemCreateWithoutProdutoInput, NotaFiscalItemUncheckedCreateWithoutProdutoInput> | NotaFiscalItemCreateWithoutProdutoInput[] | NotaFiscalItemUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutProdutoInput | NotaFiscalItemCreateOrConnectWithoutProdutoInput[]
    createMany?: NotaFiscalItemCreateManyProdutoInputEnvelope
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
  }

  export type ReceitaTipoProdutoUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<ReceitaTipoProdutoCreateWithoutProdutoInput, ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput> | ReceitaTipoProdutoCreateWithoutProdutoInput[] | ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput | ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput[]
    createMany?: ReceitaTipoProdutoCreateManyProdutoInputEnvelope
    connect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
  }

  export type ReceitaProdutoModeloUncheckedCreateNestedManyWithoutProdutoInput = {
    create?: XOR<ReceitaProdutoModeloCreateWithoutProdutoInput, ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput> | ReceitaProdutoModeloCreateWithoutProdutoInput[] | ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput | ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput[]
    createMany?: ReceitaProdutoModeloCreateManyProdutoInputEnvelope
    connect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
  }

  export type AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoAInput = {
    create?: XOR<AssociacaoProdutoCreateWithoutProdutoAInput, AssociacaoProdutoUncheckedCreateWithoutProdutoAInput> | AssociacaoProdutoCreateWithoutProdutoAInput[] | AssociacaoProdutoUncheckedCreateWithoutProdutoAInput[]
    connectOrCreate?: AssociacaoProdutoCreateOrConnectWithoutProdutoAInput | AssociacaoProdutoCreateOrConnectWithoutProdutoAInput[]
    createMany?: AssociacaoProdutoCreateManyProdutoAInputEnvelope
    connect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
  }

  export type AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoBInput = {
    create?: XOR<AssociacaoProdutoCreateWithoutProdutoBInput, AssociacaoProdutoUncheckedCreateWithoutProdutoBInput> | AssociacaoProdutoCreateWithoutProdutoBInput[] | AssociacaoProdutoUncheckedCreateWithoutProdutoBInput[]
    connectOrCreate?: AssociacaoProdutoCreateOrConnectWithoutProdutoBInput | AssociacaoProdutoCreateOrConnectWithoutProdutoBInput[]
    createMany?: AssociacaoProdutoCreateManyProdutoBInputEnvelope
    connect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type MaquinaEstoqueUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutProdutoInput, MaquinaEstoqueUncheckedCreateWithoutProdutoInput> | MaquinaEstoqueCreateWithoutProdutoInput[] | MaquinaEstoqueUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutProdutoInput | MaquinaEstoqueCreateOrConnectWithoutProdutoInput[]
    upsert?: MaquinaEstoqueUpsertWithWhereUniqueWithoutProdutoInput | MaquinaEstoqueUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: MaquinaEstoqueCreateManyProdutoInputEnvelope
    set?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    disconnect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    delete?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    connect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    update?: MaquinaEstoqueUpdateWithWhereUniqueWithoutProdutoInput | MaquinaEstoqueUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: MaquinaEstoqueUpdateManyWithWhereWithoutProdutoInput | MaquinaEstoqueUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: MaquinaEstoqueScalarWhereInput | MaquinaEstoqueScalarWhereInput[]
  }

  export type NotaFiscalItemUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<NotaFiscalItemCreateWithoutProdutoInput, NotaFiscalItemUncheckedCreateWithoutProdutoInput> | NotaFiscalItemCreateWithoutProdutoInput[] | NotaFiscalItemUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutProdutoInput | NotaFiscalItemCreateOrConnectWithoutProdutoInput[]
    upsert?: NotaFiscalItemUpsertWithWhereUniqueWithoutProdutoInput | NotaFiscalItemUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: NotaFiscalItemCreateManyProdutoInputEnvelope
    set?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    disconnect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    delete?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    update?: NotaFiscalItemUpdateWithWhereUniqueWithoutProdutoInput | NotaFiscalItemUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: NotaFiscalItemUpdateManyWithWhereWithoutProdutoInput | NotaFiscalItemUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: NotaFiscalItemScalarWhereInput | NotaFiscalItemScalarWhereInput[]
  }

  export type ReceitaTipoProdutoUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<ReceitaTipoProdutoCreateWithoutProdutoInput, ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput> | ReceitaTipoProdutoCreateWithoutProdutoInput[] | ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput | ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput[]
    upsert?: ReceitaTipoProdutoUpsertWithWhereUniqueWithoutProdutoInput | ReceitaTipoProdutoUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: ReceitaTipoProdutoCreateManyProdutoInputEnvelope
    set?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    disconnect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    delete?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    connect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    update?: ReceitaTipoProdutoUpdateWithWhereUniqueWithoutProdutoInput | ReceitaTipoProdutoUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: ReceitaTipoProdutoUpdateManyWithWhereWithoutProdutoInput | ReceitaTipoProdutoUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: ReceitaTipoProdutoScalarWhereInput | ReceitaTipoProdutoScalarWhereInput[]
  }

  export type ReceitaProdutoModeloUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<ReceitaProdutoModeloCreateWithoutProdutoInput, ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput> | ReceitaProdutoModeloCreateWithoutProdutoInput[] | ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput | ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput[]
    upsert?: ReceitaProdutoModeloUpsertWithWhereUniqueWithoutProdutoInput | ReceitaProdutoModeloUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: ReceitaProdutoModeloCreateManyProdutoInputEnvelope
    set?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    disconnect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    delete?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    connect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    update?: ReceitaProdutoModeloUpdateWithWhereUniqueWithoutProdutoInput | ReceitaProdutoModeloUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: ReceitaProdutoModeloUpdateManyWithWhereWithoutProdutoInput | ReceitaProdutoModeloUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: ReceitaProdutoModeloScalarWhereInput | ReceitaProdutoModeloScalarWhereInput[]
  }

  export type AssociacaoProdutoUpdateManyWithoutProdutoANestedInput = {
    create?: XOR<AssociacaoProdutoCreateWithoutProdutoAInput, AssociacaoProdutoUncheckedCreateWithoutProdutoAInput> | AssociacaoProdutoCreateWithoutProdutoAInput[] | AssociacaoProdutoUncheckedCreateWithoutProdutoAInput[]
    connectOrCreate?: AssociacaoProdutoCreateOrConnectWithoutProdutoAInput | AssociacaoProdutoCreateOrConnectWithoutProdutoAInput[]
    upsert?: AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoAInput | AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoAInput[]
    createMany?: AssociacaoProdutoCreateManyProdutoAInputEnvelope
    set?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    disconnect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    delete?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    connect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    update?: AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoAInput | AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoAInput[]
    updateMany?: AssociacaoProdutoUpdateManyWithWhereWithoutProdutoAInput | AssociacaoProdutoUpdateManyWithWhereWithoutProdutoAInput[]
    deleteMany?: AssociacaoProdutoScalarWhereInput | AssociacaoProdutoScalarWhereInput[]
  }

  export type AssociacaoProdutoUpdateManyWithoutProdutoBNestedInput = {
    create?: XOR<AssociacaoProdutoCreateWithoutProdutoBInput, AssociacaoProdutoUncheckedCreateWithoutProdutoBInput> | AssociacaoProdutoCreateWithoutProdutoBInput[] | AssociacaoProdutoUncheckedCreateWithoutProdutoBInput[]
    connectOrCreate?: AssociacaoProdutoCreateOrConnectWithoutProdutoBInput | AssociacaoProdutoCreateOrConnectWithoutProdutoBInput[]
    upsert?: AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoBInput | AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoBInput[]
    createMany?: AssociacaoProdutoCreateManyProdutoBInputEnvelope
    set?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    disconnect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    delete?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    connect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    update?: AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoBInput | AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoBInput[]
    updateMany?: AssociacaoProdutoUpdateManyWithWhereWithoutProdutoBInput | AssociacaoProdutoUpdateManyWithWhereWithoutProdutoBInput[]
    deleteMany?: AssociacaoProdutoScalarWhereInput | AssociacaoProdutoScalarWhereInput[]
  }

  export type MaquinaEstoqueUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutProdutoInput, MaquinaEstoqueUncheckedCreateWithoutProdutoInput> | MaquinaEstoqueCreateWithoutProdutoInput[] | MaquinaEstoqueUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutProdutoInput | MaquinaEstoqueCreateOrConnectWithoutProdutoInput[]
    upsert?: MaquinaEstoqueUpsertWithWhereUniqueWithoutProdutoInput | MaquinaEstoqueUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: MaquinaEstoqueCreateManyProdutoInputEnvelope
    set?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    disconnect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    delete?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    connect?: MaquinaEstoqueWhereUniqueInput | MaquinaEstoqueWhereUniqueInput[]
    update?: MaquinaEstoqueUpdateWithWhereUniqueWithoutProdutoInput | MaquinaEstoqueUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: MaquinaEstoqueUpdateManyWithWhereWithoutProdutoInput | MaquinaEstoqueUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: MaquinaEstoqueScalarWhereInput | MaquinaEstoqueScalarWhereInput[]
  }

  export type NotaFiscalItemUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<NotaFiscalItemCreateWithoutProdutoInput, NotaFiscalItemUncheckedCreateWithoutProdutoInput> | NotaFiscalItemCreateWithoutProdutoInput[] | NotaFiscalItemUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutProdutoInput | NotaFiscalItemCreateOrConnectWithoutProdutoInput[]
    upsert?: NotaFiscalItemUpsertWithWhereUniqueWithoutProdutoInput | NotaFiscalItemUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: NotaFiscalItemCreateManyProdutoInputEnvelope
    set?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    disconnect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    delete?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    update?: NotaFiscalItemUpdateWithWhereUniqueWithoutProdutoInput | NotaFiscalItemUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: NotaFiscalItemUpdateManyWithWhereWithoutProdutoInput | NotaFiscalItemUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: NotaFiscalItemScalarWhereInput | NotaFiscalItemScalarWhereInput[]
  }

  export type ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<ReceitaTipoProdutoCreateWithoutProdutoInput, ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput> | ReceitaTipoProdutoCreateWithoutProdutoInput[] | ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput | ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput[]
    upsert?: ReceitaTipoProdutoUpsertWithWhereUniqueWithoutProdutoInput | ReceitaTipoProdutoUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: ReceitaTipoProdutoCreateManyProdutoInputEnvelope
    set?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    disconnect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    delete?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    connect?: ReceitaTipoProdutoWhereUniqueInput | ReceitaTipoProdutoWhereUniqueInput[]
    update?: ReceitaTipoProdutoUpdateWithWhereUniqueWithoutProdutoInput | ReceitaTipoProdutoUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: ReceitaTipoProdutoUpdateManyWithWhereWithoutProdutoInput | ReceitaTipoProdutoUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: ReceitaTipoProdutoScalarWhereInput | ReceitaTipoProdutoScalarWhereInput[]
  }

  export type ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoNestedInput = {
    create?: XOR<ReceitaProdutoModeloCreateWithoutProdutoInput, ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput> | ReceitaProdutoModeloCreateWithoutProdutoInput[] | ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput[]
    connectOrCreate?: ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput | ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput[]
    upsert?: ReceitaProdutoModeloUpsertWithWhereUniqueWithoutProdutoInput | ReceitaProdutoModeloUpsertWithWhereUniqueWithoutProdutoInput[]
    createMany?: ReceitaProdutoModeloCreateManyProdutoInputEnvelope
    set?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    disconnect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    delete?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    connect?: ReceitaProdutoModeloWhereUniqueInput | ReceitaProdutoModeloWhereUniqueInput[]
    update?: ReceitaProdutoModeloUpdateWithWhereUniqueWithoutProdutoInput | ReceitaProdutoModeloUpdateWithWhereUniqueWithoutProdutoInput[]
    updateMany?: ReceitaProdutoModeloUpdateManyWithWhereWithoutProdutoInput | ReceitaProdutoModeloUpdateManyWithWhereWithoutProdutoInput[]
    deleteMany?: ReceitaProdutoModeloScalarWhereInput | ReceitaProdutoModeloScalarWhereInput[]
  }

  export type AssociacaoProdutoUncheckedUpdateManyWithoutProdutoANestedInput = {
    create?: XOR<AssociacaoProdutoCreateWithoutProdutoAInput, AssociacaoProdutoUncheckedCreateWithoutProdutoAInput> | AssociacaoProdutoCreateWithoutProdutoAInput[] | AssociacaoProdutoUncheckedCreateWithoutProdutoAInput[]
    connectOrCreate?: AssociacaoProdutoCreateOrConnectWithoutProdutoAInput | AssociacaoProdutoCreateOrConnectWithoutProdutoAInput[]
    upsert?: AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoAInput | AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoAInput[]
    createMany?: AssociacaoProdutoCreateManyProdutoAInputEnvelope
    set?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    disconnect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    delete?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    connect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    update?: AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoAInput | AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoAInput[]
    updateMany?: AssociacaoProdutoUpdateManyWithWhereWithoutProdutoAInput | AssociacaoProdutoUpdateManyWithWhereWithoutProdutoAInput[]
    deleteMany?: AssociacaoProdutoScalarWhereInput | AssociacaoProdutoScalarWhereInput[]
  }

  export type AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBNestedInput = {
    create?: XOR<AssociacaoProdutoCreateWithoutProdutoBInput, AssociacaoProdutoUncheckedCreateWithoutProdutoBInput> | AssociacaoProdutoCreateWithoutProdutoBInput[] | AssociacaoProdutoUncheckedCreateWithoutProdutoBInput[]
    connectOrCreate?: AssociacaoProdutoCreateOrConnectWithoutProdutoBInput | AssociacaoProdutoCreateOrConnectWithoutProdutoBInput[]
    upsert?: AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoBInput | AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoBInput[]
    createMany?: AssociacaoProdutoCreateManyProdutoBInputEnvelope
    set?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    disconnect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    delete?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    connect?: AssociacaoProdutoWhereUniqueInput | AssociacaoProdutoWhereUniqueInput[]
    update?: AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoBInput | AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoBInput[]
    updateMany?: AssociacaoProdutoUpdateManyWithWhereWithoutProdutoBInput | AssociacaoProdutoUpdateManyWithWhereWithoutProdutoBInput[]
    deleteMany?: AssociacaoProdutoScalarWhereInput | AssociacaoProdutoScalarWhereInput[]
  }

  export type ProdutoCreateNestedOneWithoutMaquinasEstoqueInput = {
    create?: XOR<ProdutoCreateWithoutMaquinasEstoqueInput, ProdutoUncheckedCreateWithoutMaquinasEstoqueInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutMaquinasEstoqueInput
    connect?: ProdutoWhereUniqueInput
  }

  export type FilialCreateNestedOneWithoutMaquinasEstoqueInput = {
    create?: XOR<FilialCreateWithoutMaquinasEstoqueInput, FilialUncheckedCreateWithoutMaquinasEstoqueInput>
    connectOrCreate?: FilialCreateOrConnectWithoutMaquinasEstoqueInput
    connect?: FilialWhereUniqueInput
  }

  export type NotaFiscalItemCreateNestedManyWithoutMaquinas_EstoqueInput = {
    create?: XOR<NotaFiscalItemCreateWithoutMaquinas_EstoqueInput, NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput> | NotaFiscalItemCreateWithoutMaquinas_EstoqueInput[] | NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput | NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput[]
    createMany?: NotaFiscalItemCreateManyMaquinas_EstoqueInputEnvelope
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
  }

  export type NotaFiscalItemUncheckedCreateNestedManyWithoutMaquinas_EstoqueInput = {
    create?: XOR<NotaFiscalItemCreateWithoutMaquinas_EstoqueInput, NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput> | NotaFiscalItemCreateWithoutMaquinas_EstoqueInput[] | NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput | NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput[]
    createMany?: NotaFiscalItemCreateManyMaquinas_EstoqueInputEnvelope
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
  }

  export type ProdutoUpdateOneRequiredWithoutMaquinasEstoqueNestedInput = {
    create?: XOR<ProdutoCreateWithoutMaquinasEstoqueInput, ProdutoUncheckedCreateWithoutMaquinasEstoqueInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutMaquinasEstoqueInput
    upsert?: ProdutoUpsertWithoutMaquinasEstoqueInput
    connect?: ProdutoWhereUniqueInput
    update?: XOR<XOR<ProdutoUpdateToOneWithWhereWithoutMaquinasEstoqueInput, ProdutoUpdateWithoutMaquinasEstoqueInput>, ProdutoUncheckedUpdateWithoutMaquinasEstoqueInput>
  }

  export type FilialUpdateOneWithoutMaquinasEstoqueNestedInput = {
    create?: XOR<FilialCreateWithoutMaquinasEstoqueInput, FilialUncheckedCreateWithoutMaquinasEstoqueInput>
    connectOrCreate?: FilialCreateOrConnectWithoutMaquinasEstoqueInput
    upsert?: FilialUpsertWithoutMaquinasEstoqueInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutMaquinasEstoqueInput, FilialUpdateWithoutMaquinasEstoqueInput>, FilialUncheckedUpdateWithoutMaquinasEstoqueInput>
  }

  export type NotaFiscalItemUpdateManyWithoutMaquinas_EstoqueNestedInput = {
    create?: XOR<NotaFiscalItemCreateWithoutMaquinas_EstoqueInput, NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput> | NotaFiscalItemCreateWithoutMaquinas_EstoqueInput[] | NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput | NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput[]
    upsert?: NotaFiscalItemUpsertWithWhereUniqueWithoutMaquinas_EstoqueInput | NotaFiscalItemUpsertWithWhereUniqueWithoutMaquinas_EstoqueInput[]
    createMany?: NotaFiscalItemCreateManyMaquinas_EstoqueInputEnvelope
    set?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    disconnect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    delete?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    update?: NotaFiscalItemUpdateWithWhereUniqueWithoutMaquinas_EstoqueInput | NotaFiscalItemUpdateWithWhereUniqueWithoutMaquinas_EstoqueInput[]
    updateMany?: NotaFiscalItemUpdateManyWithWhereWithoutMaquinas_EstoqueInput | NotaFiscalItemUpdateManyWithWhereWithoutMaquinas_EstoqueInput[]
    deleteMany?: NotaFiscalItemScalarWhereInput | NotaFiscalItemScalarWhereInput[]
  }

  export type NotaFiscalItemUncheckedUpdateManyWithoutMaquinas_EstoqueNestedInput = {
    create?: XOR<NotaFiscalItemCreateWithoutMaquinas_EstoqueInput, NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput> | NotaFiscalItemCreateWithoutMaquinas_EstoqueInput[] | NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput | NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput[]
    upsert?: NotaFiscalItemUpsertWithWhereUniqueWithoutMaquinas_EstoqueInput | NotaFiscalItemUpsertWithWhereUniqueWithoutMaquinas_EstoqueInput[]
    createMany?: NotaFiscalItemCreateManyMaquinas_EstoqueInputEnvelope
    set?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    disconnect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    delete?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    update?: NotaFiscalItemUpdateWithWhereUniqueWithoutMaquinas_EstoqueInput | NotaFiscalItemUpdateWithWhereUniqueWithoutMaquinas_EstoqueInput[]
    updateMany?: NotaFiscalItemUpdateManyWithWhereWithoutMaquinas_EstoqueInput | NotaFiscalItemUpdateManyWithWhereWithoutMaquinas_EstoqueInput[]
    deleteMany?: NotaFiscalItemScalarWhereInput | NotaFiscalItemScalarWhereInput[]
  }

  export type FilialCreateNestedOneWithoutNotasFiscaisInput = {
    create?: XOR<FilialCreateWithoutNotasFiscaisInput, FilialUncheckedCreateWithoutNotasFiscaisInput>
    connectOrCreate?: FilialCreateOrConnectWithoutNotasFiscaisInput
    connect?: FilialWhereUniqueInput
  }

  export type ClienteCreateNestedOneWithoutNotasFiscaisInput = {
    create?: XOR<ClienteCreateWithoutNotasFiscaisInput, ClienteUncheckedCreateWithoutNotasFiscaisInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutNotasFiscaisInput
    connect?: ClienteWhereUniqueInput
  }

  export type VendedorCreateNestedOneWithoutNotasFiscaisInput = {
    create?: XOR<VendedorCreateWithoutNotasFiscaisInput, VendedorUncheckedCreateWithoutNotasFiscaisInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutNotasFiscaisInput
    connect?: VendedorWhereUniqueInput
  }

  export type NotaFiscalItemCreateNestedManyWithoutNotaFiscalInput = {
    create?: XOR<NotaFiscalItemCreateWithoutNotaFiscalInput, NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput> | NotaFiscalItemCreateWithoutNotaFiscalInput[] | NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput | NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput[]
    createMany?: NotaFiscalItemCreateManyNotaFiscalInputEnvelope
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
  }

  export type NotaFiscalItemUncheckedCreateNestedManyWithoutNotaFiscalInput = {
    create?: XOR<NotaFiscalItemCreateWithoutNotaFiscalInput, NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput> | NotaFiscalItemCreateWithoutNotaFiscalInput[] | NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput | NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput[]
    createMany?: NotaFiscalItemCreateManyNotaFiscalInputEnvelope
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
  }

  export type FilialUpdateOneWithoutNotasFiscaisNestedInput = {
    create?: XOR<FilialCreateWithoutNotasFiscaisInput, FilialUncheckedCreateWithoutNotasFiscaisInput>
    connectOrCreate?: FilialCreateOrConnectWithoutNotasFiscaisInput
    upsert?: FilialUpsertWithoutNotasFiscaisInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutNotasFiscaisInput, FilialUpdateWithoutNotasFiscaisInput>, FilialUncheckedUpdateWithoutNotasFiscaisInput>
  }

  export type ClienteUpdateOneWithoutNotasFiscaisNestedInput = {
    create?: XOR<ClienteCreateWithoutNotasFiscaisInput, ClienteUncheckedCreateWithoutNotasFiscaisInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutNotasFiscaisInput
    upsert?: ClienteUpsertWithoutNotasFiscaisInput
    disconnect?: ClienteWhereInput | boolean
    delete?: ClienteWhereInput | boolean
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutNotasFiscaisInput, ClienteUpdateWithoutNotasFiscaisInput>, ClienteUncheckedUpdateWithoutNotasFiscaisInput>
  }

  export type VendedorUpdateOneWithoutNotasFiscaisNestedInput = {
    create?: XOR<VendedorCreateWithoutNotasFiscaisInput, VendedorUncheckedCreateWithoutNotasFiscaisInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutNotasFiscaisInput
    upsert?: VendedorUpsertWithoutNotasFiscaisInput
    disconnect?: VendedorWhereInput | boolean
    delete?: VendedorWhereInput | boolean
    connect?: VendedorWhereUniqueInput
    update?: XOR<XOR<VendedorUpdateToOneWithWhereWithoutNotasFiscaisInput, VendedorUpdateWithoutNotasFiscaisInput>, VendedorUncheckedUpdateWithoutNotasFiscaisInput>
  }

  export type NotaFiscalItemUpdateManyWithoutNotaFiscalNestedInput = {
    create?: XOR<NotaFiscalItemCreateWithoutNotaFiscalInput, NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput> | NotaFiscalItemCreateWithoutNotaFiscalInput[] | NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput | NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput[]
    upsert?: NotaFiscalItemUpsertWithWhereUniqueWithoutNotaFiscalInput | NotaFiscalItemUpsertWithWhereUniqueWithoutNotaFiscalInput[]
    createMany?: NotaFiscalItemCreateManyNotaFiscalInputEnvelope
    set?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    disconnect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    delete?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    update?: NotaFiscalItemUpdateWithWhereUniqueWithoutNotaFiscalInput | NotaFiscalItemUpdateWithWhereUniqueWithoutNotaFiscalInput[]
    updateMany?: NotaFiscalItemUpdateManyWithWhereWithoutNotaFiscalInput | NotaFiscalItemUpdateManyWithWhereWithoutNotaFiscalInput[]
    deleteMany?: NotaFiscalItemScalarWhereInput | NotaFiscalItemScalarWhereInput[]
  }

  export type NotaFiscalItemUncheckedUpdateManyWithoutNotaFiscalNestedInput = {
    create?: XOR<NotaFiscalItemCreateWithoutNotaFiscalInput, NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput> | NotaFiscalItemCreateWithoutNotaFiscalInput[] | NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput[]
    connectOrCreate?: NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput | NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput[]
    upsert?: NotaFiscalItemUpsertWithWhereUniqueWithoutNotaFiscalInput | NotaFiscalItemUpsertWithWhereUniqueWithoutNotaFiscalInput[]
    createMany?: NotaFiscalItemCreateManyNotaFiscalInputEnvelope
    set?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    disconnect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    delete?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    connect?: NotaFiscalItemWhereUniqueInput | NotaFiscalItemWhereUniqueInput[]
    update?: NotaFiscalItemUpdateWithWhereUniqueWithoutNotaFiscalInput | NotaFiscalItemUpdateWithWhereUniqueWithoutNotaFiscalInput[]
    updateMany?: NotaFiscalItemUpdateManyWithWhereWithoutNotaFiscalInput | NotaFiscalItemUpdateManyWithWhereWithoutNotaFiscalInput[]
    deleteMany?: NotaFiscalItemScalarWhereInput | NotaFiscalItemScalarWhereInput[]
  }

  export type MaquinaEstoqueCreateNestedOneWithoutNotas_Fiscais_ItensInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutNotas_Fiscais_ItensInput, MaquinaEstoqueUncheckedCreateWithoutNotas_Fiscais_ItensInput>
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutNotas_Fiscais_ItensInput
    connect?: MaquinaEstoqueWhereUniqueInput
  }

  export type NotasFiscalCabecalhoCreateNestedOneWithoutItensInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutItensInput, NotasFiscalCabecalhoUncheckedCreateWithoutItensInput>
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutItensInput
    connect?: NotasFiscalCabecalhoWhereUniqueInput
  }

  export type ProdutoCreateNestedOneWithoutNotasFiscaisItensInput = {
    create?: XOR<ProdutoCreateWithoutNotasFiscaisItensInput, ProdutoUncheckedCreateWithoutNotasFiscaisItensInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutNotasFiscaisItensInput
    connect?: ProdutoWhereUniqueInput
  }

  export type MaquinaEstoqueUpdateOneWithoutNotas_Fiscais_ItensNestedInput = {
    create?: XOR<MaquinaEstoqueCreateWithoutNotas_Fiscais_ItensInput, MaquinaEstoqueUncheckedCreateWithoutNotas_Fiscais_ItensInput>
    connectOrCreate?: MaquinaEstoqueCreateOrConnectWithoutNotas_Fiscais_ItensInput
    upsert?: MaquinaEstoqueUpsertWithoutNotas_Fiscais_ItensInput
    disconnect?: MaquinaEstoqueWhereInput | boolean
    delete?: MaquinaEstoqueWhereInput | boolean
    connect?: MaquinaEstoqueWhereUniqueInput
    update?: XOR<XOR<MaquinaEstoqueUpdateToOneWithWhereWithoutNotas_Fiscais_ItensInput, MaquinaEstoqueUpdateWithoutNotas_Fiscais_ItensInput>, MaquinaEstoqueUncheckedUpdateWithoutNotas_Fiscais_ItensInput>
  }

  export type NotasFiscalCabecalhoUpdateOneRequiredWithoutItensNestedInput = {
    create?: XOR<NotasFiscalCabecalhoCreateWithoutItensInput, NotasFiscalCabecalhoUncheckedCreateWithoutItensInput>
    connectOrCreate?: NotasFiscalCabecalhoCreateOrConnectWithoutItensInput
    upsert?: NotasFiscalCabecalhoUpsertWithoutItensInput
    connect?: NotasFiscalCabecalhoWhereUniqueInput
    update?: XOR<XOR<NotasFiscalCabecalhoUpdateToOneWithWhereWithoutItensInput, NotasFiscalCabecalhoUpdateWithoutItensInput>, NotasFiscalCabecalhoUncheckedUpdateWithoutItensInput>
  }

  export type ProdutoUpdateOneRequiredWithoutNotasFiscaisItensNestedInput = {
    create?: XOR<ProdutoCreateWithoutNotasFiscaisItensInput, ProdutoUncheckedCreateWithoutNotasFiscaisItensInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutNotasFiscaisItensInput
    upsert?: ProdutoUpsertWithoutNotasFiscaisItensInput
    connect?: ProdutoWhereUniqueInput
    update?: XOR<XOR<ProdutoUpdateToOneWithWhereWithoutNotasFiscaisItensInput, ProdutoUpdateWithoutNotasFiscaisItensInput>, ProdutoUncheckedUpdateWithoutNotasFiscaisItensInput>
  }

  export type FilialCreateNestedOneWithoutRfvParameterSetsInput = {
    create?: XOR<FilialCreateWithoutRfvParameterSetsInput, FilialUncheckedCreateWithoutRfvParameterSetsInput>
    connectOrCreate?: FilialCreateOrConnectWithoutRfvParameterSetsInput
    connect?: FilialWhereUniqueInput
  }

  export type RfvSegmentCreateNestedManyWithoutParameterSetInput = {
    create?: XOR<RfvSegmentCreateWithoutParameterSetInput, RfvSegmentUncheckedCreateWithoutParameterSetInput> | RfvSegmentCreateWithoutParameterSetInput[] | RfvSegmentUncheckedCreateWithoutParameterSetInput[]
    connectOrCreate?: RfvSegmentCreateOrConnectWithoutParameterSetInput | RfvSegmentCreateOrConnectWithoutParameterSetInput[]
    createMany?: RfvSegmentCreateManyParameterSetInputEnvelope
    connect?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
  }

  export type RfvSegmentUncheckedCreateNestedManyWithoutParameterSetInput = {
    create?: XOR<RfvSegmentCreateWithoutParameterSetInput, RfvSegmentUncheckedCreateWithoutParameterSetInput> | RfvSegmentCreateWithoutParameterSetInput[] | RfvSegmentUncheckedCreateWithoutParameterSetInput[]
    connectOrCreate?: RfvSegmentCreateOrConnectWithoutParameterSetInput | RfvSegmentCreateOrConnectWithoutParameterSetInput[]
    createMany?: RfvSegmentCreateManyParameterSetInputEnvelope
    connect?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
  }

  export type EnumRfvStrategyFieldUpdateOperationsInput = {
    set?: $Enums.RfvStrategy
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumCalculationStrategyFieldUpdateOperationsInput = {
    set?: $Enums.CalculationStrategy
  }

  export type FilialUpdateOneWithoutRfvParameterSetsNestedInput = {
    create?: XOR<FilialCreateWithoutRfvParameterSetsInput, FilialUncheckedCreateWithoutRfvParameterSetsInput>
    connectOrCreate?: FilialCreateOrConnectWithoutRfvParameterSetsInput
    upsert?: FilialUpsertWithoutRfvParameterSetsInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutRfvParameterSetsInput, FilialUpdateWithoutRfvParameterSetsInput>, FilialUncheckedUpdateWithoutRfvParameterSetsInput>
  }

  export type RfvSegmentUpdateManyWithoutParameterSetNestedInput = {
    create?: XOR<RfvSegmentCreateWithoutParameterSetInput, RfvSegmentUncheckedCreateWithoutParameterSetInput> | RfvSegmentCreateWithoutParameterSetInput[] | RfvSegmentUncheckedCreateWithoutParameterSetInput[]
    connectOrCreate?: RfvSegmentCreateOrConnectWithoutParameterSetInput | RfvSegmentCreateOrConnectWithoutParameterSetInput[]
    upsert?: RfvSegmentUpsertWithWhereUniqueWithoutParameterSetInput | RfvSegmentUpsertWithWhereUniqueWithoutParameterSetInput[]
    createMany?: RfvSegmentCreateManyParameterSetInputEnvelope
    set?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
    disconnect?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
    delete?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
    connect?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
    update?: RfvSegmentUpdateWithWhereUniqueWithoutParameterSetInput | RfvSegmentUpdateWithWhereUniqueWithoutParameterSetInput[]
    updateMany?: RfvSegmentUpdateManyWithWhereWithoutParameterSetInput | RfvSegmentUpdateManyWithWhereWithoutParameterSetInput[]
    deleteMany?: RfvSegmentScalarWhereInput | RfvSegmentScalarWhereInput[]
  }

  export type RfvSegmentUncheckedUpdateManyWithoutParameterSetNestedInput = {
    create?: XOR<RfvSegmentCreateWithoutParameterSetInput, RfvSegmentUncheckedCreateWithoutParameterSetInput> | RfvSegmentCreateWithoutParameterSetInput[] | RfvSegmentUncheckedCreateWithoutParameterSetInput[]
    connectOrCreate?: RfvSegmentCreateOrConnectWithoutParameterSetInput | RfvSegmentCreateOrConnectWithoutParameterSetInput[]
    upsert?: RfvSegmentUpsertWithWhereUniqueWithoutParameterSetInput | RfvSegmentUpsertWithWhereUniqueWithoutParameterSetInput[]
    createMany?: RfvSegmentCreateManyParameterSetInputEnvelope
    set?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
    disconnect?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
    delete?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
    connect?: RfvSegmentWhereUniqueInput | RfvSegmentWhereUniqueInput[]
    update?: RfvSegmentUpdateWithWhereUniqueWithoutParameterSetInput | RfvSegmentUpdateWithWhereUniqueWithoutParameterSetInput[]
    updateMany?: RfvSegmentUpdateManyWithWhereWithoutParameterSetInput | RfvSegmentUpdateManyWithWhereWithoutParameterSetInput[]
    deleteMany?: RfvSegmentScalarWhereInput | RfvSegmentScalarWhereInput[]
  }

  export type RfvParameterSetCreateNestedOneWithoutSegmentsInput = {
    create?: XOR<RfvParameterSetCreateWithoutSegmentsInput, RfvParameterSetUncheckedCreateWithoutSegmentsInput>
    connectOrCreate?: RfvParameterSetCreateOrConnectWithoutSegmentsInput
    connect?: RfvParameterSetWhereUniqueInput
  }

  export type RfvParameterSetUpdateOneRequiredWithoutSegmentsNestedInput = {
    create?: XOR<RfvParameterSetCreateWithoutSegmentsInput, RfvParameterSetUncheckedCreateWithoutSegmentsInput>
    connectOrCreate?: RfvParameterSetCreateOrConnectWithoutSegmentsInput
    upsert?: RfvParameterSetUpsertWithoutSegmentsInput
    connect?: RfvParameterSetWhereUniqueInput
    update?: XOR<XOR<RfvParameterSetUpdateToOneWithWhereWithoutSegmentsInput, RfvParameterSetUpdateWithoutSegmentsInput>, RfvParameterSetUncheckedUpdateWithoutSegmentsInput>
  }

  export type FilialCreateNestedOneWithoutReceitasPeriodoInput = {
    create?: XOR<FilialCreateWithoutReceitasPeriodoInput, FilialUncheckedCreateWithoutReceitasPeriodoInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasPeriodoInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneWithoutReceitasPeriodoNestedInput = {
    create?: XOR<FilialCreateWithoutReceitasPeriodoInput, FilialUncheckedCreateWithoutReceitasPeriodoInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasPeriodoInput
    upsert?: FilialUpsertWithoutReceitasPeriodoInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutReceitasPeriodoInput, FilialUpdateWithoutReceitasPeriodoInput>, FilialUncheckedUpdateWithoutReceitasPeriodoInput>
  }

  export type FilialCreateNestedOneWithoutReceitasTipoProdutoInput = {
    create?: XOR<FilialCreateWithoutReceitasTipoProdutoInput, FilialUncheckedCreateWithoutReceitasTipoProdutoInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasTipoProdutoInput
    connect?: FilialWhereUniqueInput
  }

  export type ProdutoCreateNestedOneWithoutReceitasTipoInput = {
    create?: XOR<ProdutoCreateWithoutReceitasTipoInput, ProdutoUncheckedCreateWithoutReceitasTipoInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutReceitasTipoInput
    connect?: ProdutoWhereUniqueInput
  }

  export type FilialUpdateOneWithoutReceitasTipoProdutoNestedInput = {
    create?: XOR<FilialCreateWithoutReceitasTipoProdutoInput, FilialUncheckedCreateWithoutReceitasTipoProdutoInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasTipoProdutoInput
    upsert?: FilialUpsertWithoutReceitasTipoProdutoInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutReceitasTipoProdutoInput, FilialUpdateWithoutReceitasTipoProdutoInput>, FilialUncheckedUpdateWithoutReceitasTipoProdutoInput>
  }

  export type ProdutoUpdateOneWithoutReceitasTipoNestedInput = {
    create?: XOR<ProdutoCreateWithoutReceitasTipoInput, ProdutoUncheckedCreateWithoutReceitasTipoInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutReceitasTipoInput
    upsert?: ProdutoUpsertWithoutReceitasTipoInput
    disconnect?: ProdutoWhereInput | boolean
    delete?: ProdutoWhereInput | boolean
    connect?: ProdutoWhereUniqueInput
    update?: XOR<XOR<ProdutoUpdateToOneWithWhereWithoutReceitasTipoInput, ProdutoUpdateWithoutReceitasTipoInput>, ProdutoUncheckedUpdateWithoutReceitasTipoInput>
  }

  export type FilialCreateNestedOneWithoutReceitasProdutoModeloInput = {
    create?: XOR<FilialCreateWithoutReceitasProdutoModeloInput, FilialUncheckedCreateWithoutReceitasProdutoModeloInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasProdutoModeloInput
    connect?: FilialWhereUniqueInput
  }

  export type ProdutoCreateNestedOneWithoutReceitasModeloInput = {
    create?: XOR<ProdutoCreateWithoutReceitasModeloInput, ProdutoUncheckedCreateWithoutReceitasModeloInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutReceitasModeloInput
    connect?: ProdutoWhereUniqueInput
  }

  export type FilialUpdateOneWithoutReceitasProdutoModeloNestedInput = {
    create?: XOR<FilialCreateWithoutReceitasProdutoModeloInput, FilialUncheckedCreateWithoutReceitasProdutoModeloInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasProdutoModeloInput
    upsert?: FilialUpsertWithoutReceitasProdutoModeloInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutReceitasProdutoModeloInput, FilialUpdateWithoutReceitasProdutoModeloInput>, FilialUncheckedUpdateWithoutReceitasProdutoModeloInput>
  }

  export type ProdutoUpdateOneRequiredWithoutReceitasModeloNestedInput = {
    create?: XOR<ProdutoCreateWithoutReceitasModeloInput, ProdutoUncheckedCreateWithoutReceitasModeloInput>
    connectOrCreate?: ProdutoCreateOrConnectWithoutReceitasModeloInput
    upsert?: ProdutoUpsertWithoutReceitasModeloInput
    connect?: ProdutoWhereUniqueInput
    update?: XOR<XOR<ProdutoUpdateToOneWithWhereWithoutReceitasModeloInput, ProdutoUpdateWithoutReceitasModeloInput>, ProdutoUncheckedUpdateWithoutReceitasModeloInput>
  }

  export type FilialCreateNestedOneWithoutCrescimentoVendasInput = {
    create?: XOR<FilialCreateWithoutCrescimentoVendasInput, FilialUncheckedCreateWithoutCrescimentoVendasInput>
    connectOrCreate?: FilialCreateOrConnectWithoutCrescimentoVendasInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneWithoutCrescimentoVendasNestedInput = {
    create?: XOR<FilialCreateWithoutCrescimentoVendasInput, FilialUncheckedCreateWithoutCrescimentoVendasInput>
    connectOrCreate?: FilialCreateOrConnectWithoutCrescimentoVendasInput
    upsert?: FilialUpsertWithoutCrescimentoVendasInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutCrescimentoVendasInput, FilialUpdateWithoutCrescimentoVendasInput>, FilialUncheckedUpdateWithoutCrescimentoVendasInput>
  }

  export type FilialCreateNestedOneWithoutTicketsMediosInput = {
    create?: XOR<FilialCreateWithoutTicketsMediosInput, FilialUncheckedCreateWithoutTicketsMediosInput>
    connectOrCreate?: FilialCreateOrConnectWithoutTicketsMediosInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneWithoutTicketsMediosNestedInput = {
    create?: XOR<FilialCreateWithoutTicketsMediosInput, FilialUncheckedCreateWithoutTicketsMediosInput>
    connectOrCreate?: FilialCreateOrConnectWithoutTicketsMediosInput
    upsert?: FilialUpsertWithoutTicketsMediosInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutTicketsMediosInput, FilialUpdateWithoutTicketsMediosInput>, FilialUncheckedUpdateWithoutTicketsMediosInput>
  }

  export type FilialCreateNestedOneWithoutItensPorNFInput = {
    create?: XOR<FilialCreateWithoutItensPorNFInput, FilialUncheckedCreateWithoutItensPorNFInput>
    connectOrCreate?: FilialCreateOrConnectWithoutItensPorNFInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneWithoutItensPorNFNestedInput = {
    create?: XOR<FilialCreateWithoutItensPorNFInput, FilialUncheckedCreateWithoutItensPorNFInput>
    connectOrCreate?: FilialCreateOrConnectWithoutItensPorNFInput
    upsert?: FilialUpsertWithoutItensPorNFInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutItensPorNFInput, FilialUpdateWithoutItensPorNFInput>, FilialUncheckedUpdateWithoutItensPorNFInput>
  }

  export type FilialCreateNestedOneWithoutSazonalidadesInput = {
    create?: XOR<FilialCreateWithoutSazonalidadesInput, FilialUncheckedCreateWithoutSazonalidadesInput>
    connectOrCreate?: FilialCreateOrConnectWithoutSazonalidadesInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneWithoutSazonalidadesNestedInput = {
    create?: XOR<FilialCreateWithoutSazonalidadesInput, FilialUncheckedCreateWithoutSazonalidadesInput>
    connectOrCreate?: FilialCreateOrConnectWithoutSazonalidadesInput
    upsert?: FilialUpsertWithoutSazonalidadesInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutSazonalidadesInput, FilialUpdateWithoutSazonalidadesInput>, FilialUncheckedUpdateWithoutSazonalidadesInput>
  }

  export type FilialCreateNestedOneWithoutReceitasLocalizacaoInput = {
    create?: XOR<FilialCreateWithoutReceitasLocalizacaoInput, FilialUncheckedCreateWithoutReceitasLocalizacaoInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasLocalizacaoInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneWithoutReceitasLocalizacaoNestedInput = {
    create?: XOR<FilialCreateWithoutReceitasLocalizacaoInput, FilialUncheckedCreateWithoutReceitasLocalizacaoInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasLocalizacaoInput
    upsert?: FilialUpsertWithoutReceitasLocalizacaoInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutReceitasLocalizacaoInput, FilialUpdateWithoutReceitasLocalizacaoInput>, FilialUncheckedUpdateWithoutReceitasLocalizacaoInput>
  }

  export type FilialCreateNestedOneWithoutReceitasVendedorInput = {
    create?: XOR<FilialCreateWithoutReceitasVendedorInput, FilialUncheckedCreateWithoutReceitasVendedorInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasVendedorInput
    connect?: FilialWhereUniqueInput
  }

  export type VendedorCreateNestedOneWithoutReceitasVendedorInput = {
    create?: XOR<VendedorCreateWithoutReceitasVendedorInput, VendedorUncheckedCreateWithoutReceitasVendedorInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutReceitasVendedorInput
    connect?: VendedorWhereUniqueInput
  }

  export type FilialUpdateOneWithoutReceitasVendedorNestedInput = {
    create?: XOR<FilialCreateWithoutReceitasVendedorInput, FilialUncheckedCreateWithoutReceitasVendedorInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasVendedorInput
    upsert?: FilialUpsertWithoutReceitasVendedorInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutReceitasVendedorInput, FilialUpdateWithoutReceitasVendedorInput>, FilialUncheckedUpdateWithoutReceitasVendedorInput>
  }

  export type VendedorUpdateOneRequiredWithoutReceitasVendedorNestedInput = {
    create?: XOR<VendedorCreateWithoutReceitasVendedorInput, VendedorUncheckedCreateWithoutReceitasVendedorInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutReceitasVendedorInput
    upsert?: VendedorUpsertWithoutReceitasVendedorInput
    connect?: VendedorWhereUniqueInput
    update?: XOR<XOR<VendedorUpdateToOneWithWhereWithoutReceitasVendedorInput, VendedorUpdateWithoutReceitasVendedorInput>, VendedorUncheckedUpdateWithoutReceitasVendedorInput>
  }

  export type FilialCreateNestedOneWithoutEstatisticasNotasFiscaisInput = {
    create?: XOR<FilialCreateWithoutEstatisticasNotasFiscaisInput, FilialUncheckedCreateWithoutEstatisticasNotasFiscaisInput>
    connectOrCreate?: FilialCreateOrConnectWithoutEstatisticasNotasFiscaisInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneWithoutEstatisticasNotasFiscaisNestedInput = {
    create?: XOR<FilialCreateWithoutEstatisticasNotasFiscaisInput, FilialUncheckedCreateWithoutEstatisticasNotasFiscaisInput>
    connectOrCreate?: FilialCreateOrConnectWithoutEstatisticasNotasFiscaisInput
    upsert?: FilialUpsertWithoutEstatisticasNotasFiscaisInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutEstatisticasNotasFiscaisInput, FilialUpdateWithoutEstatisticasNotasFiscaisInput>, FilialUncheckedUpdateWithoutEstatisticasNotasFiscaisInput>
  }

  export type FilialCreateNestedOneWithoutReceitasVendedorDetalhadasInput = {
    create?: XOR<FilialCreateWithoutReceitasVendedorDetalhadasInput, FilialUncheckedCreateWithoutReceitasVendedorDetalhadasInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasVendedorDetalhadasInput
    connect?: FilialWhereUniqueInput
  }

  export type VendedorCreateNestedOneWithoutReceitasDetalhadasInput = {
    create?: XOR<VendedorCreateWithoutReceitasDetalhadasInput, VendedorUncheckedCreateWithoutReceitasDetalhadasInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutReceitasDetalhadasInput
    connect?: VendedorWhereUniqueInput
  }

  export type FilialUpdateOneWithoutReceitasVendedorDetalhadasNestedInput = {
    create?: XOR<FilialCreateWithoutReceitasVendedorDetalhadasInput, FilialUncheckedCreateWithoutReceitasVendedorDetalhadasInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasVendedorDetalhadasInput
    upsert?: FilialUpsertWithoutReceitasVendedorDetalhadasInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutReceitasVendedorDetalhadasInput, FilialUpdateWithoutReceitasVendedorDetalhadasInput>, FilialUncheckedUpdateWithoutReceitasVendedorDetalhadasInput>
  }

  export type VendedorUpdateOneRequiredWithoutReceitasDetalhadasNestedInput = {
    create?: XOR<VendedorCreateWithoutReceitasDetalhadasInput, VendedorUncheckedCreateWithoutReceitasDetalhadasInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutReceitasDetalhadasInput
    upsert?: VendedorUpsertWithoutReceitasDetalhadasInput
    connect?: VendedorWhereUniqueInput
    update?: XOR<XOR<VendedorUpdateToOneWithWhereWithoutReceitasDetalhadasInput, VendedorUpdateWithoutReceitasDetalhadasInput>, VendedorUncheckedUpdateWithoutReceitasDetalhadasInput>
  }

  export type FilialCreateNestedOneWithoutTicketsMediosVendedorInput = {
    create?: XOR<FilialCreateWithoutTicketsMediosVendedorInput, FilialUncheckedCreateWithoutTicketsMediosVendedorInput>
    connectOrCreate?: FilialCreateOrConnectWithoutTicketsMediosVendedorInput
    connect?: FilialWhereUniqueInput
  }

  export type VendedorCreateNestedOneWithoutTicketsMediosInput = {
    create?: XOR<VendedorCreateWithoutTicketsMediosInput, VendedorUncheckedCreateWithoutTicketsMediosInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutTicketsMediosInput
    connect?: VendedorWhereUniqueInput
  }

  export type FilialUpdateOneWithoutTicketsMediosVendedorNestedInput = {
    create?: XOR<FilialCreateWithoutTicketsMediosVendedorInput, FilialUncheckedCreateWithoutTicketsMediosVendedorInput>
    connectOrCreate?: FilialCreateOrConnectWithoutTicketsMediosVendedorInput
    upsert?: FilialUpsertWithoutTicketsMediosVendedorInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutTicketsMediosVendedorInput, FilialUpdateWithoutTicketsMediosVendedorInput>, FilialUncheckedUpdateWithoutTicketsMediosVendedorInput>
  }

  export type VendedorUpdateOneRequiredWithoutTicketsMediosNestedInput = {
    create?: XOR<VendedorCreateWithoutTicketsMediosInput, VendedorUncheckedCreateWithoutTicketsMediosInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutTicketsMediosInput
    upsert?: VendedorUpsertWithoutTicketsMediosInput
    connect?: VendedorWhereUniqueInput
    update?: XOR<XOR<VendedorUpdateToOneWithWhereWithoutTicketsMediosInput, VendedorUpdateWithoutTicketsMediosInput>, VendedorUncheckedUpdateWithoutTicketsMediosInput>
  }

  export type FilialCreateNestedOneWithoutMixVendedoresInput = {
    create?: XOR<FilialCreateWithoutMixVendedoresInput, FilialUncheckedCreateWithoutMixVendedoresInput>
    connectOrCreate?: FilialCreateOrConnectWithoutMixVendedoresInput
    connect?: FilialWhereUniqueInput
  }

  export type VendedorCreateNestedOneWithoutMixVendasInput = {
    create?: XOR<VendedorCreateWithoutMixVendasInput, VendedorUncheckedCreateWithoutMixVendasInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutMixVendasInput
    connect?: VendedorWhereUniqueInput
  }

  export type FilialUpdateOneWithoutMixVendedoresNestedInput = {
    create?: XOR<FilialCreateWithoutMixVendedoresInput, FilialUncheckedCreateWithoutMixVendedoresInput>
    connectOrCreate?: FilialCreateOrConnectWithoutMixVendedoresInput
    upsert?: FilialUpsertWithoutMixVendedoresInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutMixVendedoresInput, FilialUpdateWithoutMixVendedoresInput>, FilialUncheckedUpdateWithoutMixVendedoresInput>
  }

  export type VendedorUpdateOneRequiredWithoutMixVendasNestedInput = {
    create?: XOR<VendedorCreateWithoutMixVendasInput, VendedorUncheckedCreateWithoutMixVendasInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutMixVendasInput
    upsert?: VendedorUpsertWithoutMixVendasInput
    connect?: VendedorWhereUniqueInput
    update?: XOR<XOR<VendedorUpdateToOneWithWhereWithoutMixVendasInput, VendedorUpdateWithoutMixVendasInput>, VendedorUncheckedUpdateWithoutMixVendasInput>
  }

  export type FilialCreateNestedOneWithoutCoberturaCarteirasInput = {
    create?: XOR<FilialCreateWithoutCoberturaCarteirasInput, FilialUncheckedCreateWithoutCoberturaCarteirasInput>
    connectOrCreate?: FilialCreateOrConnectWithoutCoberturaCarteirasInput
    connect?: FilialWhereUniqueInput
  }

  export type VendedorCreateNestedOneWithoutCoberturaCarteiraInput = {
    create?: XOR<VendedorCreateWithoutCoberturaCarteiraInput, VendedorUncheckedCreateWithoutCoberturaCarteiraInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutCoberturaCarteiraInput
    connect?: VendedorWhereUniqueInput
  }

  export type FilialUpdateOneWithoutCoberturaCarteirasNestedInput = {
    create?: XOR<FilialCreateWithoutCoberturaCarteirasInput, FilialUncheckedCreateWithoutCoberturaCarteirasInput>
    connectOrCreate?: FilialCreateOrConnectWithoutCoberturaCarteirasInput
    upsert?: FilialUpsertWithoutCoberturaCarteirasInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutCoberturaCarteirasInput, FilialUpdateWithoutCoberturaCarteirasInput>, FilialUncheckedUpdateWithoutCoberturaCarteirasInput>
  }

  export type VendedorUpdateOneRequiredWithoutCoberturaCarteiraNestedInput = {
    create?: XOR<VendedorCreateWithoutCoberturaCarteiraInput, VendedorUncheckedCreateWithoutCoberturaCarteiraInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutCoberturaCarteiraInput
    upsert?: VendedorUpsertWithoutCoberturaCarteiraInput
    connect?: VendedorWhereUniqueInput
    update?: XOR<XOR<VendedorUpdateToOneWithWhereWithoutCoberturaCarteiraInput, VendedorUpdateWithoutCoberturaCarteiraInput>, VendedorUncheckedUpdateWithoutCoberturaCarteiraInput>
  }

  export type FilialCreateNestedOneWithoutRankingVendedoresInput = {
    create?: XOR<FilialCreateWithoutRankingVendedoresInput, FilialUncheckedCreateWithoutRankingVendedoresInput>
    connectOrCreate?: FilialCreateOrConnectWithoutRankingVendedoresInput
    connect?: FilialWhereUniqueInput
  }

  export type VendedorCreateNestedOneWithoutRankingsInput = {
    create?: XOR<VendedorCreateWithoutRankingsInput, VendedorUncheckedCreateWithoutRankingsInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutRankingsInput
    connect?: VendedorWhereUniqueInput
  }

  export type FilialUpdateOneWithoutRankingVendedoresNestedInput = {
    create?: XOR<FilialCreateWithoutRankingVendedoresInput, FilialUncheckedCreateWithoutRankingVendedoresInput>
    connectOrCreate?: FilialCreateOrConnectWithoutRankingVendedoresInput
    upsert?: FilialUpsertWithoutRankingVendedoresInput
    disconnect?: FilialWhereInput | boolean
    delete?: FilialWhereInput | boolean
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutRankingVendedoresInput, FilialUpdateWithoutRankingVendedoresInput>, FilialUncheckedUpdateWithoutRankingVendedoresInput>
  }

  export type VendedorUpdateOneRequiredWithoutRankingsNestedInput = {
    create?: XOR<VendedorCreateWithoutRankingsInput, VendedorUncheckedCreateWithoutRankingsInput>
    connectOrCreate?: VendedorCreateOrConnectWithoutRankingsInput
    upsert?: VendedorUpsertWithoutRankingsInput
    connect?: VendedorWhereUniqueInput
    update?: XOR<XOR<VendedorUpdateToOneWithWhereWithoutRankingsInput, VendedorUpdateWithoutRankingsInput>, VendedorUncheckedUpdateWithoutRankingsInput>
  }

  export type FilialCreateNestedOneWithoutReceitasFilialInput = {
    create?: XOR<FilialCreateWithoutReceitasFilialInput, FilialUncheckedCreateWithoutReceitasFilialInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasFilialInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneRequiredWithoutReceitasFilialNestedInput = {
    create?: XOR<FilialCreateWithoutReceitasFilialInput, FilialUncheckedCreateWithoutReceitasFilialInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasFilialInput
    upsert?: FilialUpsertWithoutReceitasFilialInput
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutReceitasFilialInput, FilialUpdateWithoutReceitasFilialInput>, FilialUncheckedUpdateWithoutReceitasFilialInput>
  }

  export type FilialCreateNestedOneWithoutMixFiliaisInput = {
    create?: XOR<FilialCreateWithoutMixFiliaisInput, FilialUncheckedCreateWithoutMixFiliaisInput>
    connectOrCreate?: FilialCreateOrConnectWithoutMixFiliaisInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneRequiredWithoutMixFiliaisNestedInput = {
    create?: XOR<FilialCreateWithoutMixFiliaisInput, FilialUncheckedCreateWithoutMixFiliaisInput>
    connectOrCreate?: FilialCreateOrConnectWithoutMixFiliaisInput
    upsert?: FilialUpsertWithoutMixFiliaisInput
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutMixFiliaisInput, FilialUpdateWithoutMixFiliaisInput>, FilialUncheckedUpdateWithoutMixFiliaisInput>
  }

  export type FilialCreateNestedOneWithoutParticipacaoReceitaInput = {
    create?: XOR<FilialCreateWithoutParticipacaoReceitaInput, FilialUncheckedCreateWithoutParticipacaoReceitaInput>
    connectOrCreate?: FilialCreateOrConnectWithoutParticipacaoReceitaInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneRequiredWithoutParticipacaoReceitaNestedInput = {
    create?: XOR<FilialCreateWithoutParticipacaoReceitaInput, FilialUncheckedCreateWithoutParticipacaoReceitaInput>
    connectOrCreate?: FilialCreateOrConnectWithoutParticipacaoReceitaInput
    upsert?: FilialUpsertWithoutParticipacaoReceitaInput
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutParticipacaoReceitaInput, FilialUpdateWithoutParticipacaoReceitaInput>, FilialUncheckedUpdateWithoutParticipacaoReceitaInput>
  }

  export type FilialCreateNestedOneWithoutReceitasRegioesInput = {
    create?: XOR<FilialCreateWithoutReceitasRegioesInput, FilialUncheckedCreateWithoutReceitasRegioesInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasRegioesInput
    connect?: FilialWhereUniqueInput
  }

  export type FilialUpdateOneRequiredWithoutReceitasRegioesNestedInput = {
    create?: XOR<FilialCreateWithoutReceitasRegioesInput, FilialUncheckedCreateWithoutReceitasRegioesInput>
    connectOrCreate?: FilialCreateOrConnectWithoutReceitasRegioesInput
    upsert?: FilialUpsertWithoutReceitasRegioesInput
    connect?: FilialWhereUniqueInput
    update?: XOR<XOR<FilialUpdateToOneWithWhereWithoutReceitasRegioesInput, FilialUpdateWithoutReceitasRegioesInput>, FilialUncheckedUpdateWithoutReceitasRegioesInput>
  }

  export type EmpresaCreateNestedOneWithoutConfiguracaoInatividadeInput = {
    create?: XOR<EmpresaCreateWithoutConfiguracaoInatividadeInput, EmpresaUncheckedCreateWithoutConfiguracaoInatividadeInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutConfiguracaoInatividadeInput
    connect?: EmpresaWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EmpresaUpdateOneRequiredWithoutConfiguracaoInatividadeNestedInput = {
    create?: XOR<EmpresaCreateWithoutConfiguracaoInatividadeInput, EmpresaUncheckedCreateWithoutConfiguracaoInatividadeInput>
    connectOrCreate?: EmpresaCreateOrConnectWithoutConfiguracaoInatividadeInput
    upsert?: EmpresaUpsertWithoutConfiguracaoInatividadeInput
    connect?: EmpresaWhereUniqueInput
    update?: XOR<XOR<EmpresaUpdateToOneWithWhereWithoutConfiguracaoInatividadeInput, EmpresaUpdateWithoutConfiguracaoInatividadeInput>, EmpresaUncheckedUpdateWithoutConfiguracaoInatividadeInput>
  }

  export type ClienteCreateNestedOneWithoutRfvTipoNegocioInput = {
    create?: XOR<ClienteCreateWithoutRfvTipoNegocioInput, ClienteUncheckedCreateWithoutRfvTipoNegocioInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutRfvTipoNegocioInput
    connect?: ClienteWhereUniqueInput
  }

  export type ClienteUpdateOneRequiredWithoutRfvTipoNegocioNestedInput = {
    create?: XOR<ClienteCreateWithoutRfvTipoNegocioInput, ClienteUncheckedCreateWithoutRfvTipoNegocioInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutRfvTipoNegocioInput
    upsert?: ClienteUpsertWithoutRfvTipoNegocioInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutRfvTipoNegocioInput, ClienteUpdateWithoutRfvTipoNegocioInput>, ClienteUncheckedUpdateWithoutRfvTipoNegocioInput>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumRfvStrategyFilter<$PrismaModel = never> = {
    equals?: $Enums.RfvStrategy | EnumRfvStrategyFieldRefInput<$PrismaModel>
    in?: $Enums.RfvStrategy[]
    notIn?: $Enums.RfvStrategy[]
    not?: NestedEnumRfvStrategyFilter<$PrismaModel> | $Enums.RfvStrategy
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumCalculationStrategyFilter<$PrismaModel = never> = {
    equals?: $Enums.CalculationStrategy | EnumCalculationStrategyFieldRefInput<$PrismaModel>
    in?: $Enums.CalculationStrategy[]
    notIn?: $Enums.CalculationStrategy[]
    not?: NestedEnumCalculationStrategyFilter<$PrismaModel> | $Enums.CalculationStrategy
  }

  export type NestedEnumRfvStrategyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RfvStrategy | EnumRfvStrategyFieldRefInput<$PrismaModel>
    in?: $Enums.RfvStrategy[]
    notIn?: $Enums.RfvStrategy[]
    not?: NestedEnumRfvStrategyWithAggregatesFilter<$PrismaModel> | $Enums.RfvStrategy
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRfvStrategyFilter<$PrismaModel>
    _max?: NestedEnumRfvStrategyFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumCalculationStrategyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CalculationStrategy | EnumCalculationStrategyFieldRefInput<$PrismaModel>
    in?: $Enums.CalculationStrategy[]
    notIn?: $Enums.CalculationStrategy[]
    not?: NestedEnumCalculationStrategyWithAggregatesFilter<$PrismaModel> | $Enums.CalculationStrategy
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCalculationStrategyFilter<$PrismaModel>
    _max?: NestedEnumCalculationStrategyFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type ProdutoCreateWithoutAssociacoesAInput = {
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloCreateNestedManyWithoutProdutoInput
    associacoesB?: AssociacaoProdutoCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoUncheckedCreateWithoutAssociacoesAInput = {
    id?: number
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemUncheckedCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutProdutoInput
    associacoesB?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoCreateOrConnectWithoutAssociacoesAInput = {
    where: ProdutoWhereUniqueInput
    create: XOR<ProdutoCreateWithoutAssociacoesAInput, ProdutoUncheckedCreateWithoutAssociacoesAInput>
  }

  export type ProdutoCreateWithoutAssociacoesBInput = {
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoCreateNestedManyWithoutProdutoAInput
  }

  export type ProdutoUncheckedCreateWithoutAssociacoesBInput = {
    id?: number
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemUncheckedCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoAInput
  }

  export type ProdutoCreateOrConnectWithoutAssociacoesBInput = {
    where: ProdutoWhereUniqueInput
    create: XOR<ProdutoCreateWithoutAssociacoesBInput, ProdutoUncheckedCreateWithoutAssociacoesBInput>
  }

  export type ProdutoUpsertWithoutAssociacoesAInput = {
    update: XOR<ProdutoUpdateWithoutAssociacoesAInput, ProdutoUncheckedUpdateWithoutAssociacoesAInput>
    create: XOR<ProdutoCreateWithoutAssociacoesAInput, ProdutoUncheckedCreateWithoutAssociacoesAInput>
    where?: ProdutoWhereInput
  }

  export type ProdutoUpdateToOneWithWhereWithoutAssociacoesAInput = {
    where?: ProdutoWhereInput
    data: XOR<ProdutoUpdateWithoutAssociacoesAInput, ProdutoUncheckedUpdateWithoutAssociacoesAInput>
  }

  export type ProdutoUpdateWithoutAssociacoesAInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUpdateManyWithoutProdutoNestedInput
    associacoesB?: AssociacaoProdutoUpdateManyWithoutProdutoBNestedInput
  }

  export type ProdutoUncheckedUpdateWithoutAssociacoesAInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUncheckedUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoNestedInput
    associacoesB?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBNestedInput
  }

  export type ProdutoUpsertWithoutAssociacoesBInput = {
    update: XOR<ProdutoUpdateWithoutAssociacoesBInput, ProdutoUncheckedUpdateWithoutAssociacoesBInput>
    create: XOR<ProdutoCreateWithoutAssociacoesBInput, ProdutoUncheckedCreateWithoutAssociacoesBInput>
    where?: ProdutoWhereInput
  }

  export type ProdutoUpdateToOneWithWhereWithoutAssociacoesBInput = {
    where?: ProdutoWhereInput
    data: XOR<ProdutoUpdateWithoutAssociacoesBInput, ProdutoUncheckedUpdateWithoutAssociacoesBInput>
  }

  export type ProdutoUpdateWithoutAssociacoesBInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUpdateManyWithoutProdutoANestedInput
  }

  export type ProdutoUncheckedUpdateWithoutAssociacoesBInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUncheckedUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoANestedInput
  }

  export type FilialCreateWithoutEmpresaInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutEmpresaInput = {
    id?: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutEmpresaInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutEmpresaInput, FilialUncheckedCreateWithoutEmpresaInput>
  }

  export type FilialCreateManyEmpresaInputEnvelope = {
    data: FilialCreateManyEmpresaInput | FilialCreateManyEmpresaInput[]
    skipDuplicates?: boolean
  }

  export type ConfiguracaoInatividadeCreateWithoutEmpresaInput = {
    diasSemCompra: number
    valorMinimoCompra?: Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: boolean
    tiposClienteExcluidos?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfiguracaoInatividadeUncheckedCreateWithoutEmpresaInput = {
    id?: number
    diasSemCompra: number
    valorMinimoCompra?: Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: boolean
    tiposClienteExcluidos?: string | null
    ativo?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfiguracaoInatividadeCreateOrConnectWithoutEmpresaInput = {
    where: ConfiguracaoInatividadeWhereUniqueInput
    create: XOR<ConfiguracaoInatividadeCreateWithoutEmpresaInput, ConfiguracaoInatividadeUncheckedCreateWithoutEmpresaInput>
  }

  export type FilialUpsertWithWhereUniqueWithoutEmpresaInput = {
    where: FilialWhereUniqueInput
    update: XOR<FilialUpdateWithoutEmpresaInput, FilialUncheckedUpdateWithoutEmpresaInput>
    create: XOR<FilialCreateWithoutEmpresaInput, FilialUncheckedCreateWithoutEmpresaInput>
  }

  export type FilialUpdateWithWhereUniqueWithoutEmpresaInput = {
    where: FilialWhereUniqueInput
    data: XOR<FilialUpdateWithoutEmpresaInput, FilialUncheckedUpdateWithoutEmpresaInput>
  }

  export type FilialUpdateManyWithWhereWithoutEmpresaInput = {
    where: FilialScalarWhereInput
    data: XOR<FilialUpdateManyMutationInput, FilialUncheckedUpdateManyWithoutEmpresaInput>
  }

  export type FilialScalarWhereInput = {
    AND?: FilialScalarWhereInput | FilialScalarWhereInput[]
    OR?: FilialScalarWhereInput[]
    NOT?: FilialScalarWhereInput | FilialScalarWhereInput[]
    id?: IntFilter<"Filial"> | number
    empresaId?: IntFilter<"Filial"> | number
    nome?: StringFilter<"Filial"> | string
    cnpj?: StringFilter<"Filial"> | string
    cidade?: StringNullableFilter<"Filial"> | string | null
    estado?: StringNullableFilter<"Filial"> | string | null
  }

  export type ConfiguracaoInatividadeUpsertWithoutEmpresaInput = {
    update: XOR<ConfiguracaoInatividadeUpdateWithoutEmpresaInput, ConfiguracaoInatividadeUncheckedUpdateWithoutEmpresaInput>
    create: XOR<ConfiguracaoInatividadeCreateWithoutEmpresaInput, ConfiguracaoInatividadeUncheckedCreateWithoutEmpresaInput>
    where?: ConfiguracaoInatividadeWhereInput
  }

  export type ConfiguracaoInatividadeUpdateToOneWithWhereWithoutEmpresaInput = {
    where?: ConfiguracaoInatividadeWhereInput
    data: XOR<ConfiguracaoInatividadeUpdateWithoutEmpresaInput, ConfiguracaoInatividadeUncheckedUpdateWithoutEmpresaInput>
  }

  export type ConfiguracaoInatividadeUpdateWithoutEmpresaInput = {
    diasSemCompra?: IntFieldUpdateOperationsInput | number
    valorMinimoCompra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolFieldUpdateOperationsInput | boolean
    tiposClienteExcluidos?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfiguracaoInatividadeUncheckedUpdateWithoutEmpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    diasSemCompra?: IntFieldUpdateOperationsInput | number
    valorMinimoCompra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    considerarTipoCliente?: BoolFieldUpdateOperationsInput | boolean
    tiposClienteExcluidos?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotasFiscalCabecalhoCreateWithoutClienteInput = {
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filial?: FilialCreateNestedOneWithoutNotasFiscaisInput
    vendedor?: VendedorCreateNestedOneWithoutNotasFiscaisInput
    itens?: NotaFiscalItemCreateNestedManyWithoutNotaFiscalInput
  }

  export type NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filialId?: number | null
    vendedorId?: number | null
    itens?: NotaFiscalItemUncheckedCreateNestedManyWithoutNotaFiscalInput
  }

  export type NotasFiscalCabecalhoCreateOrConnectWithoutClienteInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    create: XOR<NotasFiscalCabecalhoCreateWithoutClienteInput, NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput>
  }

  export type NotasFiscalCabecalhoCreateManyClienteInputEnvelope = {
    data: NotasFiscalCabecalhoCreateManyClienteInput | NotasFiscalCabecalhoCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type RFVTipoNegocioCreateWithoutClienteInput = {
    tipoNegocio: string
    dataAnalise: Date | string
    periodoAnalise: string
    recencia: number
    frequencia: number
    valorMonetario: Decimal | DecimalJsLike | number | string
    scoreRecencia: number
    scoreFrequencia: number
    scoreValor: number
    scoreRFV: Decimal | DecimalJsLike | number | string
    segmentoRFV: string
    rankingAutomatico?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RFVTipoNegocioUncheckedCreateWithoutClienteInput = {
    id?: number
    tipoNegocio: string
    dataAnalise: Date | string
    periodoAnalise: string
    recencia: number
    frequencia: number
    valorMonetario: Decimal | DecimalJsLike | number | string
    scoreRecencia: number
    scoreFrequencia: number
    scoreValor: number
    scoreRFV: Decimal | DecimalJsLike | number | string
    segmentoRFV: string
    rankingAutomatico?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RFVTipoNegocioCreateOrConnectWithoutClienteInput = {
    where: RFVTipoNegocioWhereUniqueInput
    create: XOR<RFVTipoNegocioCreateWithoutClienteInput, RFVTipoNegocioUncheckedCreateWithoutClienteInput>
  }

  export type RFVTipoNegocioCreateManyClienteInputEnvelope = {
    data: RFVTipoNegocioCreateManyClienteInput | RFVTipoNegocioCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutClienteInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    update: XOR<NotasFiscalCabecalhoUpdateWithoutClienteInput, NotasFiscalCabecalhoUncheckedUpdateWithoutClienteInput>
    create: XOR<NotasFiscalCabecalhoCreateWithoutClienteInput, NotasFiscalCabecalhoUncheckedCreateWithoutClienteInput>
  }

  export type NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutClienteInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    data: XOR<NotasFiscalCabecalhoUpdateWithoutClienteInput, NotasFiscalCabecalhoUncheckedUpdateWithoutClienteInput>
  }

  export type NotasFiscalCabecalhoUpdateManyWithWhereWithoutClienteInput = {
    where: NotasFiscalCabecalhoScalarWhereInput
    data: XOR<NotasFiscalCabecalhoUpdateManyMutationInput, NotasFiscalCabecalhoUncheckedUpdateManyWithoutClienteInput>
  }

  export type NotasFiscalCabecalhoScalarWhereInput = {
    AND?: NotasFiscalCabecalhoScalarWhereInput | NotasFiscalCabecalhoScalarWhereInput[]
    OR?: NotasFiscalCabecalhoScalarWhereInput[]
    NOT?: NotasFiscalCabecalhoScalarWhereInput | NotasFiscalCabecalhoScalarWhereInput[]
    id?: IntFilter<"NotasFiscalCabecalho"> | number
    numeroNota?: IntFilter<"NotasFiscalCabecalho"> | number
    dataEmissao?: DateTimeFilter<"NotasFiscalCabecalho"> | Date | string
    valorTotal?: DecimalFilter<"NotasFiscalCabecalho"> | Decimal | DecimalJsLike | number | string
    filialId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
    clienteId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
    vendedorId?: IntNullableFilter<"NotasFiscalCabecalho"> | number | null
  }

  export type RFVTipoNegocioUpsertWithWhereUniqueWithoutClienteInput = {
    where: RFVTipoNegocioWhereUniqueInput
    update: XOR<RFVTipoNegocioUpdateWithoutClienteInput, RFVTipoNegocioUncheckedUpdateWithoutClienteInput>
    create: XOR<RFVTipoNegocioCreateWithoutClienteInput, RFVTipoNegocioUncheckedCreateWithoutClienteInput>
  }

  export type RFVTipoNegocioUpdateWithWhereUniqueWithoutClienteInput = {
    where: RFVTipoNegocioWhereUniqueInput
    data: XOR<RFVTipoNegocioUpdateWithoutClienteInput, RFVTipoNegocioUncheckedUpdateWithoutClienteInput>
  }

  export type RFVTipoNegocioUpdateManyWithWhereWithoutClienteInput = {
    where: RFVTipoNegocioScalarWhereInput
    data: XOR<RFVTipoNegocioUpdateManyMutationInput, RFVTipoNegocioUncheckedUpdateManyWithoutClienteInput>
  }

  export type RFVTipoNegocioScalarWhereInput = {
    AND?: RFVTipoNegocioScalarWhereInput | RFVTipoNegocioScalarWhereInput[]
    OR?: RFVTipoNegocioScalarWhereInput[]
    NOT?: RFVTipoNegocioScalarWhereInput | RFVTipoNegocioScalarWhereInput[]
    id?: IntFilter<"RFVTipoNegocio"> | number
    clienteId?: IntFilter<"RFVTipoNegocio"> | number
    tipoNegocio?: StringFilter<"RFVTipoNegocio"> | string
    dataAnalise?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
    periodoAnalise?: StringFilter<"RFVTipoNegocio"> | string
    recencia?: IntFilter<"RFVTipoNegocio"> | number
    frequencia?: IntFilter<"RFVTipoNegocio"> | number
    valorMonetario?: DecimalFilter<"RFVTipoNegocio"> | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFilter<"RFVTipoNegocio"> | number
    scoreFrequencia?: IntFilter<"RFVTipoNegocio"> | number
    scoreValor?: IntFilter<"RFVTipoNegocio"> | number
    scoreRFV?: DecimalFilter<"RFVTipoNegocio"> | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFilter<"RFVTipoNegocio"> | string
    rankingAutomatico?: StringNullableFilter<"RFVTipoNegocio"> | string | null
    createdAt?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
    updatedAt?: DateTimeFilter<"RFVTipoNegocio"> | Date | string
  }

  export type EmpresaCreateWithoutFiliaisInput = {
    razaoSocial: string
    nomeFantasia?: string | null
    cnpjMatriz: string
    inscricaoEstadual?: string | null
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    email?: string | null
    ativo?: boolean
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    configuracaoInatividade?: ConfiguracaoInatividadeCreateNestedOneWithoutEmpresaInput
  }

  export type EmpresaUncheckedCreateWithoutFiliaisInput = {
    id?: number
    razaoSocial: string
    nomeFantasia?: string | null
    cnpjMatriz: string
    inscricaoEstadual?: string | null
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    email?: string | null
    ativo?: boolean
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    configuracaoInatividade?: ConfiguracaoInatividadeUncheckedCreateNestedOneWithoutEmpresaInput
  }

  export type EmpresaCreateOrConnectWithoutFiliaisInput = {
    where: EmpresaWhereUniqueInput
    create: XOR<EmpresaCreateWithoutFiliaisInput, EmpresaUncheckedCreateWithoutFiliaisInput>
  }

  export type NotasFiscalCabecalhoCreateWithoutFilialInput = {
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    cliente?: ClienteCreateNestedOneWithoutNotasFiscaisInput
    vendedor?: VendedorCreateNestedOneWithoutNotasFiscaisInput
    itens?: NotaFiscalItemCreateNestedManyWithoutNotaFiscalInput
  }

  export type NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    clienteId?: number | null
    vendedorId?: number | null
    itens?: NotaFiscalItemUncheckedCreateNestedManyWithoutNotaFiscalInput
  }

  export type NotasFiscalCabecalhoCreateOrConnectWithoutFilialInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    create: XOR<NotasFiscalCabecalhoCreateWithoutFilialInput, NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput>
  }

  export type NotasFiscalCabecalhoCreateManyFilialInputEnvelope = {
    data: NotasFiscalCabecalhoCreateManyFilialInput | NotasFiscalCabecalhoCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type VendedorCreateWithoutFilialInput = {
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresCreateNestedManyWithoutVendedorInput
  }

  export type VendedorUncheckedCreateWithoutFilialInput = {
    id?: number
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorUncheckedCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorCreateOrConnectWithoutFilialInput = {
    where: VendedorWhereUniqueInput
    create: XOR<VendedorCreateWithoutFilialInput, VendedorUncheckedCreateWithoutFilialInput>
  }

  export type VendedorCreateManyFilialInputEnvelope = {
    data: VendedorCreateManyFilialInput | VendedorCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type RfvParameterSetCreateWithoutFilialInput = {
    name: string
    strategy?: $Enums.RfvStrategy
    windowDays?: number
    weights: JsonNullValueInput | InputJsonValue
    ruleRecency: JsonNullValueInput | InputJsonValue
    ruleFrequency: JsonNullValueInput | InputJsonValue
    ruleValue: JsonNullValueInput | InputJsonValue
    effectiveFrom: Date | string
    effectiveTo?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calculationStrategy?: $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    segments?: RfvSegmentCreateNestedManyWithoutParameterSetInput
  }

  export type RfvParameterSetUncheckedCreateWithoutFilialInput = {
    id?: number
    name: string
    strategy?: $Enums.RfvStrategy
    windowDays?: number
    weights: JsonNullValueInput | InputJsonValue
    ruleRecency: JsonNullValueInput | InputJsonValue
    ruleFrequency: JsonNullValueInput | InputJsonValue
    ruleValue: JsonNullValueInput | InputJsonValue
    effectiveFrom: Date | string
    effectiveTo?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calculationStrategy?: $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    segments?: RfvSegmentUncheckedCreateNestedManyWithoutParameterSetInput
  }

  export type RfvParameterSetCreateOrConnectWithoutFilialInput = {
    where: RfvParameterSetWhereUniqueInput
    create: XOR<RfvParameterSetCreateWithoutFilialInput, RfvParameterSetUncheckedCreateWithoutFilialInput>
  }

  export type RfvParameterSetCreateManyFilialInputEnvelope = {
    data: RfvParameterSetCreateManyFilialInput | RfvParameterSetCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type MaquinaEstoqueCreateWithoutFilialInput = {
    Chassi: string
    Status?: string | null
    produto: ProdutoCreateNestedOneWithoutMaquinasEstoqueInput
    Notas_Fiscais_Itens?: NotaFiscalItemCreateNestedManyWithoutMaquinas_EstoqueInput
  }

  export type MaquinaEstoqueUncheckedCreateWithoutFilialInput = {
    Chassi: string
    produtoId: number
    Status?: string | null
    Notas_Fiscais_Itens?: NotaFiscalItemUncheckedCreateNestedManyWithoutMaquinas_EstoqueInput
  }

  export type MaquinaEstoqueCreateOrConnectWithoutFilialInput = {
    where: MaquinaEstoqueWhereUniqueInput
    create: XOR<MaquinaEstoqueCreateWithoutFilialInput, MaquinaEstoqueUncheckedCreateWithoutFilialInput>
  }

  export type MaquinaEstoqueCreateManyFilialInputEnvelope = {
    data: MaquinaEstoqueCreateManyFilialInput | MaquinaEstoqueCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaPeriodoCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaPeriodoUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaPeriodoCreateOrConnectWithoutFilialInput = {
    where: ReceitaPeriodoWhereUniqueInput
    create: XOR<ReceitaPeriodoCreateWithoutFilialInput, ReceitaPeriodoUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaPeriodoCreateManyFilialInputEnvelope = {
    data: ReceitaPeriodoCreateManyFilialInput | ReceitaPeriodoCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaTipoProdutoCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    produto?: ProdutoCreateNestedOneWithoutReceitasTipoInput
  }

  export type ReceitaTipoProdutoUncheckedCreateWithoutFilialInput = {
    id?: number
    produtoId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaTipoProdutoCreateOrConnectWithoutFilialInput = {
    where: ReceitaTipoProdutoWhereUniqueInput
    create: XOR<ReceitaTipoProdutoCreateWithoutFilialInput, ReceitaTipoProdutoUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaTipoProdutoCreateManyFilialInputEnvelope = {
    data: ReceitaTipoProdutoCreateManyFilialInput | ReceitaTipoProdutoCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaProdutoModeloCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    produto: ProdutoCreateNestedOneWithoutReceitasModeloInput
  }

  export type ReceitaProdutoModeloUncheckedCreateWithoutFilialInput = {
    id?: number
    produtoId: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaProdutoModeloCreateOrConnectWithoutFilialInput = {
    where: ReceitaProdutoModeloWhereUniqueInput
    create: XOR<ReceitaProdutoModeloCreateWithoutFilialInput, ReceitaProdutoModeloUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaProdutoModeloCreateManyFilialInputEnvelope = {
    data: ReceitaProdutoModeloCreateManyFilialInput | ReceitaProdutoModeloCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type CrescimentoVendasCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    tipoComparacao: string
    valorAtual: Decimal | DecimalJsLike | number | string
    valorAnterior: Decimal | DecimalJsLike | number | string
    crescimento: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CrescimentoVendasUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    tipoComparacao: string
    valorAtual: Decimal | DecimalJsLike | number | string
    valorAnterior: Decimal | DecimalJsLike | number | string
    crescimento: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CrescimentoVendasCreateOrConnectWithoutFilialInput = {
    where: CrescimentoVendasWhereUniqueInput
    create: XOR<CrescimentoVendasCreateWithoutFilialInput, CrescimentoVendasUncheckedCreateWithoutFilialInput>
  }

  export type CrescimentoVendasCreateManyFilialInputEnvelope = {
    data: CrescimentoVendasCreateManyFilialInput | CrescimentoVendasCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type TicketMedioCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    ticketMedioNF: Decimal | DecimalJsLike | number | string
    ticketMedioItem: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    ticketMedioNF: Decimal | DecimalJsLike | number | string
    ticketMedioItem: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioCreateOrConnectWithoutFilialInput = {
    where: TicketMedioWhereUniqueInput
    create: XOR<TicketMedioCreateWithoutFilialInput, TicketMedioUncheckedCreateWithoutFilialInput>
  }

  export type TicketMedioCreateManyFilialInputEnvelope = {
    data: TicketMedioCreateManyFilialInput | TicketMedioCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ItensPorNFCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    mediaItens: Decimal | DecimalJsLike | number | string
    p95Itens: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ItensPorNFUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    mediaItens: Decimal | DecimalJsLike | number | string
    p95Itens: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ItensPorNFCreateOrConnectWithoutFilialInput = {
    where: ItensPorNFWhereUniqueInput
    create: XOR<ItensPorNFCreateWithoutFilialInput, ItensPorNFUncheckedCreateWithoutFilialInput>
  }

  export type ItensPorNFCreateManyFilialInputEnvelope = {
    data: ItensPorNFCreateManyFilialInput | ItensPorNFCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type SazonalidadeCreateWithoutFilialInput = {
    ano: number
    mes: number
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    percentualAno: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SazonalidadeUncheckedCreateWithoutFilialInput = {
    id?: number
    ano: number
    mes: number
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    percentualAno: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SazonalidadeCreateOrConnectWithoutFilialInput = {
    where: SazonalidadeWhereUniqueInput
    create: XOR<SazonalidadeCreateWithoutFilialInput, SazonalidadeUncheckedCreateWithoutFilialInput>
  }

  export type SazonalidadeCreateManyFilialInputEnvelope = {
    data: SazonalidadeCreateManyFilialInput | SazonalidadeCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaLocalizacaoCreateWithoutFilialInput = {
    cidade: string
    estado: string
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaLocalizacaoUncheckedCreateWithoutFilialInput = {
    id?: number
    cidade: string
    estado: string
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaLocalizacaoCreateOrConnectWithoutFilialInput = {
    where: ReceitaLocalizacaoWhereUniqueInput
    create: XOR<ReceitaLocalizacaoCreateWithoutFilialInput, ReceitaLocalizacaoUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaLocalizacaoCreateManyFilialInputEnvelope = {
    data: ReceitaLocalizacaoCreateManyFilialInput | ReceitaLocalizacaoCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaVendedorCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    vendedor: VendedorCreateNestedOneWithoutReceitasVendedorInput
  }

  export type ReceitaVendedorUncheckedCreateWithoutFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorCreateOrConnectWithoutFilialInput = {
    where: ReceitaVendedorWhereUniqueInput
    create: XOR<ReceitaVendedorCreateWithoutFilialInput, ReceitaVendedorUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaVendedorCreateManyFilialInputEnvelope = {
    data: ReceitaVendedorCreateManyFilialInput | ReceitaVendedorCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type EstatisticasNotasFiscaisCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    quantidadeNotas: number
    quantidadeItens: number
    mediaItensPorNota: Decimal | DecimalJsLike | number | string
    valorTotalNotas: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    quantidadeNotas: number
    quantidadeItens: number
    mediaItensPorNota: Decimal | DecimalJsLike | number | string
    valorTotalNotas: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EstatisticasNotasFiscaisCreateOrConnectWithoutFilialInput = {
    where: EstatisticasNotasFiscaisWhereUniqueInput
    create: XOR<EstatisticasNotasFiscaisCreateWithoutFilialInput, EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput>
  }

  export type EstatisticasNotasFiscaisCreateManyFilialInputEnvelope = {
    data: EstatisticasNotasFiscaisCreateManyFilialInput | EstatisticasNotasFiscaisCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaVendedorDetalhadaCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    vendedor: VendedorCreateNestedOneWithoutReceitasDetalhadasInput
  }

  export type ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorDetalhadaCreateOrConnectWithoutFilialInput = {
    where: ReceitaVendedorDetalhadaWhereUniqueInput
    create: XOR<ReceitaVendedorDetalhadaCreateWithoutFilialInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaVendedorDetalhadaCreateManyFilialInputEnvelope = {
    data: ReceitaVendedorDetalhadaCreateManyFilialInput | ReceitaVendedorDetalhadaCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type TicketMedioVendedorCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    vendedor: VendedorCreateNestedOneWithoutTicketsMediosInput
  }

  export type TicketMedioVendedorUncheckedCreateWithoutFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioVendedorCreateOrConnectWithoutFilialInput = {
    where: TicketMedioVendedorWhereUniqueInput
    create: XOR<TicketMedioVendedorCreateWithoutFilialInput, TicketMedioVendedorUncheckedCreateWithoutFilialInput>
  }

  export type TicketMedioVendedorCreateManyFilialInputEnvelope = {
    data: TicketMedioVendedorCreateManyFilialInput | TicketMedioVendedorCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type MixVendedorCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
    vendedor: VendedorCreateNestedOneWithoutMixVendasInput
  }

  export type MixVendedorUncheckedCreateWithoutFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixVendedorCreateOrConnectWithoutFilialInput = {
    where: MixVendedorWhereUniqueInput
    create: XOR<MixVendedorCreateWithoutFilialInput, MixVendedorUncheckedCreateWithoutFilialInput>
  }

  export type MixVendedorCreateManyFilialInputEnvelope = {
    data: MixVendedorCreateManyFilialInput | MixVendedorCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type CoberturaCarteiraCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    vendedor: VendedorCreateNestedOneWithoutCoberturaCarteiraInput
  }

  export type CoberturaCarteiraUncheckedCreateWithoutFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CoberturaCarteiraCreateOrConnectWithoutFilialInput = {
    where: CoberturaCarteiraWhereUniqueInput
    create: XOR<CoberturaCarteiraCreateWithoutFilialInput, CoberturaCarteiraUncheckedCreateWithoutFilialInput>
  }

  export type CoberturaCarteiraCreateManyFilialInputEnvelope = {
    data: CoberturaCarteiraCreateManyFilialInput | CoberturaCarteiraCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type RankingVendedoresCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    vendedor: VendedorCreateNestedOneWithoutRankingsInput
  }

  export type RankingVendedoresUncheckedCreateWithoutFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RankingVendedoresCreateOrConnectWithoutFilialInput = {
    where: RankingVendedoresWhereUniqueInput
    create: XOR<RankingVendedoresCreateWithoutFilialInput, RankingVendedoresUncheckedCreateWithoutFilialInput>
  }

  export type RankingVendedoresCreateManyFilialInputEnvelope = {
    data: RankingVendedoresCreateManyFilialInput | RankingVendedoresCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaFilialCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    ticketMedio: Decimal | DecimalJsLike | number | string
    numeroItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    ticketMedio: Decimal | DecimalJsLike | number | string
    numeroItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialCreateOrConnectWithoutFilialInput = {
    where: ReceitaFilialWhereUniqueInput
    create: XOR<ReceitaFilialCreateWithoutFilialInput, ReceitaFilialUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaFilialCreateManyFilialInputEnvelope = {
    data: ReceitaFilialCreateManyFilialInput | ReceitaFilialCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type MixFilialCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixFilialUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixFilialCreateOrConnectWithoutFilialInput = {
    where: MixFilialWhereUniqueInput
    create: XOR<MixFilialCreateWithoutFilialInput, MixFilialUncheckedCreateWithoutFilialInput>
  }

  export type MixFilialCreateManyFilialInputEnvelope = {
    data: MixFilialCreateManyFilialInput | MixFilialCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ParticipacaoReceitaFilialCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    receitaFilial: Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa: Decimal | DecimalJsLike | number | string
    percentualParticipacao: Decimal | DecimalJsLike | number | string
    posicaoRanking: number
    totalFiliais: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    receitaFilial: Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa: Decimal | DecimalJsLike | number | string
    percentualParticipacao: Decimal | DecimalJsLike | number | string
    posicaoRanking: number
    totalFiliais: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ParticipacaoReceitaFilialCreateOrConnectWithoutFilialInput = {
    where: ParticipacaoReceitaFilialWhereUniqueInput
    create: XOR<ParticipacaoReceitaFilialCreateWithoutFilialInput, ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput>
  }

  export type ParticipacaoReceitaFilialCreateManyFilialInputEnvelope = {
    data: ParticipacaoReceitaFilialCreateManyFilialInput | ParticipacaoReceitaFilialCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaFilialRegiaoCreateWithoutFilialInput = {
    data: Date | string
    tipoPeriodo: string
    regiaoCliente: string
    estadoCliente: string
    cidadeCliente: string
    receitaRegiao: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    numeroClientes: number
    percentualReceita: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    regiaoCliente: string
    estadoCliente: string
    cidadeCliente: string
    receitaRegiao: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    numeroClientes: number
    percentualReceita: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialRegiaoCreateOrConnectWithoutFilialInput = {
    where: ReceitaFilialRegiaoWhereUniqueInput
    create: XOR<ReceitaFilialRegiaoCreateWithoutFilialInput, ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaFilialRegiaoCreateManyFilialInputEnvelope = {
    data: ReceitaFilialRegiaoCreateManyFilialInput | ReceitaFilialRegiaoCreateManyFilialInput[]
    skipDuplicates?: boolean
  }

  export type EmpresaUpsertWithoutFiliaisInput = {
    update: XOR<EmpresaUpdateWithoutFiliaisInput, EmpresaUncheckedUpdateWithoutFiliaisInput>
    create: XOR<EmpresaCreateWithoutFiliaisInput, EmpresaUncheckedCreateWithoutFiliaisInput>
    where?: EmpresaWhereInput
  }

  export type EmpresaUpdateToOneWithWhereWithoutFiliaisInput = {
    where?: EmpresaWhereInput
    data: XOR<EmpresaUpdateWithoutFiliaisInput, EmpresaUncheckedUpdateWithoutFiliaisInput>
  }

  export type EmpresaUpdateWithoutFiliaisInput = {
    razaoSocial?: StringFieldUpdateOperationsInput | string
    nomeFantasia?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjMatriz?: StringFieldUpdateOperationsInput | string
    inscricaoEstadual?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    configuracaoInatividade?: ConfiguracaoInatividadeUpdateOneWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateWithoutFiliaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    razaoSocial?: StringFieldUpdateOperationsInput | string
    nomeFantasia?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjMatriz?: StringFieldUpdateOperationsInput | string
    inscricaoEstadual?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    configuracaoInatividade?: ConfiguracaoInatividadeUncheckedUpdateOneWithoutEmpresaNestedInput
  }

  export type NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutFilialInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    update: XOR<NotasFiscalCabecalhoUpdateWithoutFilialInput, NotasFiscalCabecalhoUncheckedUpdateWithoutFilialInput>
    create: XOR<NotasFiscalCabecalhoCreateWithoutFilialInput, NotasFiscalCabecalhoUncheckedCreateWithoutFilialInput>
  }

  export type NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutFilialInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    data: XOR<NotasFiscalCabecalhoUpdateWithoutFilialInput, NotasFiscalCabecalhoUncheckedUpdateWithoutFilialInput>
  }

  export type NotasFiscalCabecalhoUpdateManyWithWhereWithoutFilialInput = {
    where: NotasFiscalCabecalhoScalarWhereInput
    data: XOR<NotasFiscalCabecalhoUpdateManyMutationInput, NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialInput>
  }

  export type VendedorUpsertWithWhereUniqueWithoutFilialInput = {
    where: VendedorWhereUniqueInput
    update: XOR<VendedorUpdateWithoutFilialInput, VendedorUncheckedUpdateWithoutFilialInput>
    create: XOR<VendedorCreateWithoutFilialInput, VendedorUncheckedCreateWithoutFilialInput>
  }

  export type VendedorUpdateWithWhereUniqueWithoutFilialInput = {
    where: VendedorWhereUniqueInput
    data: XOR<VendedorUpdateWithoutFilialInput, VendedorUncheckedUpdateWithoutFilialInput>
  }

  export type VendedorUpdateManyWithWhereWithoutFilialInput = {
    where: VendedorScalarWhereInput
    data: XOR<VendedorUpdateManyMutationInput, VendedorUncheckedUpdateManyWithoutFilialInput>
  }

  export type VendedorScalarWhereInput = {
    AND?: VendedorScalarWhereInput | VendedorScalarWhereInput[]
    OR?: VendedorScalarWhereInput[]
    NOT?: VendedorScalarWhereInput | VendedorScalarWhereInput[]
    id?: IntFilter<"Vendedor"> | number
    nome?: StringFilter<"Vendedor"> | string
    cpf?: StringFilter<"Vendedor"> | string
    filialId?: IntNullableFilter<"Vendedor"> | number | null
  }

  export type RfvParameterSetUpsertWithWhereUniqueWithoutFilialInput = {
    where: RfvParameterSetWhereUniqueInput
    update: XOR<RfvParameterSetUpdateWithoutFilialInput, RfvParameterSetUncheckedUpdateWithoutFilialInput>
    create: XOR<RfvParameterSetCreateWithoutFilialInput, RfvParameterSetUncheckedCreateWithoutFilialInput>
  }

  export type RfvParameterSetUpdateWithWhereUniqueWithoutFilialInput = {
    where: RfvParameterSetWhereUniqueInput
    data: XOR<RfvParameterSetUpdateWithoutFilialInput, RfvParameterSetUncheckedUpdateWithoutFilialInput>
  }

  export type RfvParameterSetUpdateManyWithWhereWithoutFilialInput = {
    where: RfvParameterSetScalarWhereInput
    data: XOR<RfvParameterSetUpdateManyMutationInput, RfvParameterSetUncheckedUpdateManyWithoutFilialInput>
  }

  export type RfvParameterSetScalarWhereInput = {
    AND?: RfvParameterSetScalarWhereInput | RfvParameterSetScalarWhereInput[]
    OR?: RfvParameterSetScalarWhereInput[]
    NOT?: RfvParameterSetScalarWhereInput | RfvParameterSetScalarWhereInput[]
    id?: IntFilter<"RfvParameterSet"> | number
    filialId?: IntNullableFilter<"RfvParameterSet"> | number | null
    name?: StringFilter<"RfvParameterSet"> | string
    strategy?: EnumRfvStrategyFilter<"RfvParameterSet"> | $Enums.RfvStrategy
    windowDays?: IntFilter<"RfvParameterSet"> | number
    weights?: JsonFilter<"RfvParameterSet">
    ruleRecency?: JsonFilter<"RfvParameterSet">
    ruleFrequency?: JsonFilter<"RfvParameterSet">
    ruleValue?: JsonFilter<"RfvParameterSet">
    effectiveFrom?: DateTimeFilter<"RfvParameterSet"> | Date | string
    effectiveTo?: DateTimeNullableFilter<"RfvParameterSet"> | Date | string | null
    createdAt?: DateTimeFilter<"RfvParameterSet"> | Date | string
    updatedAt?: DateTimeFilter<"RfvParameterSet"> | Date | string
    calculationStrategy?: EnumCalculationStrategyFilter<"RfvParameterSet"> | $Enums.CalculationStrategy
    classRanges?: JsonNullableFilter<"RfvParameterSet">
    conditionalRules?: JsonNullableFilter<"RfvParameterSet">
  }

  export type MaquinaEstoqueUpsertWithWhereUniqueWithoutFilialInput = {
    where: MaquinaEstoqueWhereUniqueInput
    update: XOR<MaquinaEstoqueUpdateWithoutFilialInput, MaquinaEstoqueUncheckedUpdateWithoutFilialInput>
    create: XOR<MaquinaEstoqueCreateWithoutFilialInput, MaquinaEstoqueUncheckedCreateWithoutFilialInput>
  }

  export type MaquinaEstoqueUpdateWithWhereUniqueWithoutFilialInput = {
    where: MaquinaEstoqueWhereUniqueInput
    data: XOR<MaquinaEstoqueUpdateWithoutFilialInput, MaquinaEstoqueUncheckedUpdateWithoutFilialInput>
  }

  export type MaquinaEstoqueUpdateManyWithWhereWithoutFilialInput = {
    where: MaquinaEstoqueScalarWhereInput
    data: XOR<MaquinaEstoqueUpdateManyMutationInput, MaquinaEstoqueUncheckedUpdateManyWithoutFilialInput>
  }

  export type MaquinaEstoqueScalarWhereInput = {
    AND?: MaquinaEstoqueScalarWhereInput | MaquinaEstoqueScalarWhereInput[]
    OR?: MaquinaEstoqueScalarWhereInput[]
    NOT?: MaquinaEstoqueScalarWhereInput | MaquinaEstoqueScalarWhereInput[]
    Chassi?: StringFilter<"MaquinaEstoque"> | string
    produtoId?: IntFilter<"MaquinaEstoque"> | number
    filialId?: IntNullableFilter<"MaquinaEstoque"> | number | null
    Status?: StringNullableFilter<"MaquinaEstoque"> | string | null
  }

  export type ReceitaPeriodoUpsertWithWhereUniqueWithoutFilialInput = {
    where: ReceitaPeriodoWhereUniqueInput
    update: XOR<ReceitaPeriodoUpdateWithoutFilialInput, ReceitaPeriodoUncheckedUpdateWithoutFilialInput>
    create: XOR<ReceitaPeriodoCreateWithoutFilialInput, ReceitaPeriodoUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaPeriodoUpdateWithWhereUniqueWithoutFilialInput = {
    where: ReceitaPeriodoWhereUniqueInput
    data: XOR<ReceitaPeriodoUpdateWithoutFilialInput, ReceitaPeriodoUncheckedUpdateWithoutFilialInput>
  }

  export type ReceitaPeriodoUpdateManyWithWhereWithoutFilialInput = {
    where: ReceitaPeriodoScalarWhereInput
    data: XOR<ReceitaPeriodoUpdateManyMutationInput, ReceitaPeriodoUncheckedUpdateManyWithoutFilialInput>
  }

  export type ReceitaPeriodoScalarWhereInput = {
    AND?: ReceitaPeriodoScalarWhereInput | ReceitaPeriodoScalarWhereInput[]
    OR?: ReceitaPeriodoScalarWhereInput[]
    NOT?: ReceitaPeriodoScalarWhereInput | ReceitaPeriodoScalarWhereInput[]
    id?: IntFilter<"ReceitaPeriodo"> | number
    filialId?: IntNullableFilter<"ReceitaPeriodo"> | number | null
    data?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaPeriodo"> | string
    valorTotal?: DecimalFilter<"ReceitaPeriodo"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaPeriodo"> | number
    quantidadeItens?: IntFilter<"ReceitaPeriodo"> | number
    createdAt?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaPeriodo"> | Date | string
  }

  export type ReceitaTipoProdutoUpsertWithWhereUniqueWithoutFilialInput = {
    where: ReceitaTipoProdutoWhereUniqueInput
    update: XOR<ReceitaTipoProdutoUpdateWithoutFilialInput, ReceitaTipoProdutoUncheckedUpdateWithoutFilialInput>
    create: XOR<ReceitaTipoProdutoCreateWithoutFilialInput, ReceitaTipoProdutoUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaTipoProdutoUpdateWithWhereUniqueWithoutFilialInput = {
    where: ReceitaTipoProdutoWhereUniqueInput
    data: XOR<ReceitaTipoProdutoUpdateWithoutFilialInput, ReceitaTipoProdutoUncheckedUpdateWithoutFilialInput>
  }

  export type ReceitaTipoProdutoUpdateManyWithWhereWithoutFilialInput = {
    where: ReceitaTipoProdutoScalarWhereInput
    data: XOR<ReceitaTipoProdutoUpdateManyMutationInput, ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialInput>
  }

  export type ReceitaTipoProdutoScalarWhereInput = {
    AND?: ReceitaTipoProdutoScalarWhereInput | ReceitaTipoProdutoScalarWhereInput[]
    OR?: ReceitaTipoProdutoScalarWhereInput[]
    NOT?: ReceitaTipoProdutoScalarWhereInput | ReceitaTipoProdutoScalarWhereInput[]
    id?: IntFilter<"ReceitaTipoProduto"> | number
    filialId?: IntNullableFilter<"ReceitaTipoProduto"> | number | null
    produtoId?: IntNullableFilter<"ReceitaTipoProduto"> | number | null
    data?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaTipoProduto"> | string
    tipoProduto?: StringFilter<"ReceitaTipoProduto"> | string
    valorTotal?: DecimalFilter<"ReceitaTipoProduto"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaTipoProduto"> | number
    quantidadeItens?: IntFilter<"ReceitaTipoProduto"> | number
    createdAt?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaTipoProduto"> | Date | string
  }

  export type ReceitaProdutoModeloUpsertWithWhereUniqueWithoutFilialInput = {
    where: ReceitaProdutoModeloWhereUniqueInput
    update: XOR<ReceitaProdutoModeloUpdateWithoutFilialInput, ReceitaProdutoModeloUncheckedUpdateWithoutFilialInput>
    create: XOR<ReceitaProdutoModeloCreateWithoutFilialInput, ReceitaProdutoModeloUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaProdutoModeloUpdateWithWhereUniqueWithoutFilialInput = {
    where: ReceitaProdutoModeloWhereUniqueInput
    data: XOR<ReceitaProdutoModeloUpdateWithoutFilialInput, ReceitaProdutoModeloUncheckedUpdateWithoutFilialInput>
  }

  export type ReceitaProdutoModeloUpdateManyWithWhereWithoutFilialInput = {
    where: ReceitaProdutoModeloScalarWhereInput
    data: XOR<ReceitaProdutoModeloUpdateManyMutationInput, ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialInput>
  }

  export type ReceitaProdutoModeloScalarWhereInput = {
    AND?: ReceitaProdutoModeloScalarWhereInput | ReceitaProdutoModeloScalarWhereInput[]
    OR?: ReceitaProdutoModeloScalarWhereInput[]
    NOT?: ReceitaProdutoModeloScalarWhereInput | ReceitaProdutoModeloScalarWhereInput[]
    id?: IntFilter<"ReceitaProdutoModelo"> | number
    filialId?: IntNullableFilter<"ReceitaProdutoModelo"> | number | null
    produtoId?: IntFilter<"ReceitaProdutoModelo"> | number
    data?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaProdutoModelo"> | string
    valorTotal?: DecimalFilter<"ReceitaProdutoModelo"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaProdutoModelo"> | number
    quantidadeItens?: IntFilter<"ReceitaProdutoModelo"> | number
    ranking?: IntNullableFilter<"ReceitaProdutoModelo"> | number | null
    createdAt?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaProdutoModelo"> | Date | string
  }

  export type CrescimentoVendasUpsertWithWhereUniqueWithoutFilialInput = {
    where: CrescimentoVendasWhereUniqueInput
    update: XOR<CrescimentoVendasUpdateWithoutFilialInput, CrescimentoVendasUncheckedUpdateWithoutFilialInput>
    create: XOR<CrescimentoVendasCreateWithoutFilialInput, CrescimentoVendasUncheckedCreateWithoutFilialInput>
  }

  export type CrescimentoVendasUpdateWithWhereUniqueWithoutFilialInput = {
    where: CrescimentoVendasWhereUniqueInput
    data: XOR<CrescimentoVendasUpdateWithoutFilialInput, CrescimentoVendasUncheckedUpdateWithoutFilialInput>
  }

  export type CrescimentoVendasUpdateManyWithWhereWithoutFilialInput = {
    where: CrescimentoVendasScalarWhereInput
    data: XOR<CrescimentoVendasUpdateManyMutationInput, CrescimentoVendasUncheckedUpdateManyWithoutFilialInput>
  }

  export type CrescimentoVendasScalarWhereInput = {
    AND?: CrescimentoVendasScalarWhereInput | CrescimentoVendasScalarWhereInput[]
    OR?: CrescimentoVendasScalarWhereInput[]
    NOT?: CrescimentoVendasScalarWhereInput | CrescimentoVendasScalarWhereInput[]
    id?: IntFilter<"CrescimentoVendas"> | number
    filialId?: IntNullableFilter<"CrescimentoVendas"> | number | null
    data?: DateTimeFilter<"CrescimentoVendas"> | Date | string
    tipoPeriodo?: StringFilter<"CrescimentoVendas"> | string
    tipoComparacao?: StringFilter<"CrescimentoVendas"> | string
    valorAtual?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFilter<"CrescimentoVendas"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"CrescimentoVendas"> | Date | string
    updatedAt?: DateTimeFilter<"CrescimentoVendas"> | Date | string
  }

  export type TicketMedioUpsertWithWhereUniqueWithoutFilialInput = {
    where: TicketMedioWhereUniqueInput
    update: XOR<TicketMedioUpdateWithoutFilialInput, TicketMedioUncheckedUpdateWithoutFilialInput>
    create: XOR<TicketMedioCreateWithoutFilialInput, TicketMedioUncheckedCreateWithoutFilialInput>
  }

  export type TicketMedioUpdateWithWhereUniqueWithoutFilialInput = {
    where: TicketMedioWhereUniqueInput
    data: XOR<TicketMedioUpdateWithoutFilialInput, TicketMedioUncheckedUpdateWithoutFilialInput>
  }

  export type TicketMedioUpdateManyWithWhereWithoutFilialInput = {
    where: TicketMedioScalarWhereInput
    data: XOR<TicketMedioUpdateManyMutationInput, TicketMedioUncheckedUpdateManyWithoutFilialInput>
  }

  export type TicketMedioScalarWhereInput = {
    AND?: TicketMedioScalarWhereInput | TicketMedioScalarWhereInput[]
    OR?: TicketMedioScalarWhereInput[]
    NOT?: TicketMedioScalarWhereInput | TicketMedioScalarWhereInput[]
    id?: IntFilter<"TicketMedio"> | number
    filialId?: IntNullableFilter<"TicketMedio"> | number | null
    data?: DateTimeFilter<"TicketMedio"> | Date | string
    tipoPeriodo?: StringFilter<"TicketMedio"> | string
    ticketMedioNF?: DecimalFilter<"TicketMedio"> | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFilter<"TicketMedio"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"TicketMedio"> | number
    quantidadeItens?: IntFilter<"TicketMedio"> | number
    createdAt?: DateTimeFilter<"TicketMedio"> | Date | string
    updatedAt?: DateTimeFilter<"TicketMedio"> | Date | string
  }

  export type ItensPorNFUpsertWithWhereUniqueWithoutFilialInput = {
    where: ItensPorNFWhereUniqueInput
    update: XOR<ItensPorNFUpdateWithoutFilialInput, ItensPorNFUncheckedUpdateWithoutFilialInput>
    create: XOR<ItensPorNFCreateWithoutFilialInput, ItensPorNFUncheckedCreateWithoutFilialInput>
  }

  export type ItensPorNFUpdateWithWhereUniqueWithoutFilialInput = {
    where: ItensPorNFWhereUniqueInput
    data: XOR<ItensPorNFUpdateWithoutFilialInput, ItensPorNFUncheckedUpdateWithoutFilialInput>
  }

  export type ItensPorNFUpdateManyWithWhereWithoutFilialInput = {
    where: ItensPorNFScalarWhereInput
    data: XOR<ItensPorNFUpdateManyMutationInput, ItensPorNFUncheckedUpdateManyWithoutFilialInput>
  }

  export type ItensPorNFScalarWhereInput = {
    AND?: ItensPorNFScalarWhereInput | ItensPorNFScalarWhereInput[]
    OR?: ItensPorNFScalarWhereInput[]
    NOT?: ItensPorNFScalarWhereInput | ItensPorNFScalarWhereInput[]
    id?: IntFilter<"ItensPorNF"> | number
    filialId?: IntNullableFilter<"ItensPorNF"> | number | null
    data?: DateTimeFilter<"ItensPorNF"> | Date | string
    tipoPeriodo?: StringFilter<"ItensPorNF"> | string
    mediaItens?: DecimalFilter<"ItensPorNF"> | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFilter<"ItensPorNF"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ItensPorNF"> | number
    createdAt?: DateTimeFilter<"ItensPorNF"> | Date | string
    updatedAt?: DateTimeFilter<"ItensPorNF"> | Date | string
  }

  export type SazonalidadeUpsertWithWhereUniqueWithoutFilialInput = {
    where: SazonalidadeWhereUniqueInput
    update: XOR<SazonalidadeUpdateWithoutFilialInput, SazonalidadeUncheckedUpdateWithoutFilialInput>
    create: XOR<SazonalidadeCreateWithoutFilialInput, SazonalidadeUncheckedCreateWithoutFilialInput>
  }

  export type SazonalidadeUpdateWithWhereUniqueWithoutFilialInput = {
    where: SazonalidadeWhereUniqueInput
    data: XOR<SazonalidadeUpdateWithoutFilialInput, SazonalidadeUncheckedUpdateWithoutFilialInput>
  }

  export type SazonalidadeUpdateManyWithWhereWithoutFilialInput = {
    where: SazonalidadeScalarWhereInput
    data: XOR<SazonalidadeUpdateManyMutationInput, SazonalidadeUncheckedUpdateManyWithoutFilialInput>
  }

  export type SazonalidadeScalarWhereInput = {
    AND?: SazonalidadeScalarWhereInput | SazonalidadeScalarWhereInput[]
    OR?: SazonalidadeScalarWhereInput[]
    NOT?: SazonalidadeScalarWhereInput | SazonalidadeScalarWhereInput[]
    id?: IntFilter<"Sazonalidade"> | number
    filialId?: IntNullableFilter<"Sazonalidade"> | number | null
    ano?: IntFilter<"Sazonalidade"> | number
    mes?: IntFilter<"Sazonalidade"> | number
    valorTotal?: DecimalFilter<"Sazonalidade"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"Sazonalidade"> | number
    quantidadeItens?: IntFilter<"Sazonalidade"> | number
    percentualAno?: DecimalFilter<"Sazonalidade"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"Sazonalidade"> | Date | string
    updatedAt?: DateTimeFilter<"Sazonalidade"> | Date | string
  }

  export type ReceitaLocalizacaoUpsertWithWhereUniqueWithoutFilialInput = {
    where: ReceitaLocalizacaoWhereUniqueInput
    update: XOR<ReceitaLocalizacaoUpdateWithoutFilialInput, ReceitaLocalizacaoUncheckedUpdateWithoutFilialInput>
    create: XOR<ReceitaLocalizacaoCreateWithoutFilialInput, ReceitaLocalizacaoUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaLocalizacaoUpdateWithWhereUniqueWithoutFilialInput = {
    where: ReceitaLocalizacaoWhereUniqueInput
    data: XOR<ReceitaLocalizacaoUpdateWithoutFilialInput, ReceitaLocalizacaoUncheckedUpdateWithoutFilialInput>
  }

  export type ReceitaLocalizacaoUpdateManyWithWhereWithoutFilialInput = {
    where: ReceitaLocalizacaoScalarWhereInput
    data: XOR<ReceitaLocalizacaoUpdateManyMutationInput, ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialInput>
  }

  export type ReceitaLocalizacaoScalarWhereInput = {
    AND?: ReceitaLocalizacaoScalarWhereInput | ReceitaLocalizacaoScalarWhereInput[]
    OR?: ReceitaLocalizacaoScalarWhereInput[]
    NOT?: ReceitaLocalizacaoScalarWhereInput | ReceitaLocalizacaoScalarWhereInput[]
    id?: IntFilter<"ReceitaLocalizacao"> | number
    filialId?: IntNullableFilter<"ReceitaLocalizacao"> | number | null
    cidade?: StringFilter<"ReceitaLocalizacao"> | string
    estado?: StringFilter<"ReceitaLocalizacao"> | string
    data?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaLocalizacao"> | string
    valorTotal?: DecimalFilter<"ReceitaLocalizacao"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaLocalizacao"> | number
    quantidadeItens?: IntFilter<"ReceitaLocalizacao"> | number
    createdAt?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaLocalizacao"> | Date | string
  }

  export type ReceitaVendedorUpsertWithWhereUniqueWithoutFilialInput = {
    where: ReceitaVendedorWhereUniqueInput
    update: XOR<ReceitaVendedorUpdateWithoutFilialInput, ReceitaVendedorUncheckedUpdateWithoutFilialInput>
    create: XOR<ReceitaVendedorCreateWithoutFilialInput, ReceitaVendedorUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaVendedorUpdateWithWhereUniqueWithoutFilialInput = {
    where: ReceitaVendedorWhereUniqueInput
    data: XOR<ReceitaVendedorUpdateWithoutFilialInput, ReceitaVendedorUncheckedUpdateWithoutFilialInput>
  }

  export type ReceitaVendedorUpdateManyWithWhereWithoutFilialInput = {
    where: ReceitaVendedorScalarWhereInput
    data: XOR<ReceitaVendedorUpdateManyMutationInput, ReceitaVendedorUncheckedUpdateManyWithoutFilialInput>
  }

  export type ReceitaVendedorScalarWhereInput = {
    AND?: ReceitaVendedorScalarWhereInput | ReceitaVendedorScalarWhereInput[]
    OR?: ReceitaVendedorScalarWhereInput[]
    NOT?: ReceitaVendedorScalarWhereInput | ReceitaVendedorScalarWhereInput[]
    id?: IntFilter<"ReceitaVendedor"> | number
    filialId?: IntNullableFilter<"ReceitaVendedor"> | number | null
    vendedorId?: IntFilter<"ReceitaVendedor"> | number
    data?: DateTimeFilter<"ReceitaVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaVendedor"> | string
    valorTotal?: DecimalFilter<"ReceitaVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"ReceitaVendedor"> | number
    quantidadeItens?: IntFilter<"ReceitaVendedor"> | number
    createdAt?: DateTimeFilter<"ReceitaVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaVendedor"> | Date | string
  }

  export type EstatisticasNotasFiscaisUpsertWithWhereUniqueWithoutFilialInput = {
    where: EstatisticasNotasFiscaisWhereUniqueInput
    update: XOR<EstatisticasNotasFiscaisUpdateWithoutFilialInput, EstatisticasNotasFiscaisUncheckedUpdateWithoutFilialInput>
    create: XOR<EstatisticasNotasFiscaisCreateWithoutFilialInput, EstatisticasNotasFiscaisUncheckedCreateWithoutFilialInput>
  }

  export type EstatisticasNotasFiscaisUpdateWithWhereUniqueWithoutFilialInput = {
    where: EstatisticasNotasFiscaisWhereUniqueInput
    data: XOR<EstatisticasNotasFiscaisUpdateWithoutFilialInput, EstatisticasNotasFiscaisUncheckedUpdateWithoutFilialInput>
  }

  export type EstatisticasNotasFiscaisUpdateManyWithWhereWithoutFilialInput = {
    where: EstatisticasNotasFiscaisScalarWhereInput
    data: XOR<EstatisticasNotasFiscaisUpdateManyMutationInput, EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialInput>
  }

  export type EstatisticasNotasFiscaisScalarWhereInput = {
    AND?: EstatisticasNotasFiscaisScalarWhereInput | EstatisticasNotasFiscaisScalarWhereInput[]
    OR?: EstatisticasNotasFiscaisScalarWhereInput[]
    NOT?: EstatisticasNotasFiscaisScalarWhereInput | EstatisticasNotasFiscaisScalarWhereInput[]
    id?: IntFilter<"EstatisticasNotasFiscais"> | number
    filialId?: IntNullableFilter<"EstatisticasNotasFiscais"> | number | null
    data?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
    tipoPeriodo?: StringFilter<"EstatisticasNotasFiscais"> | string
    quantidadeNotas?: IntFilter<"EstatisticasNotasFiscais"> | number
    quantidadeItens?: IntFilter<"EstatisticasNotasFiscais"> | number
    mediaItensPorNota?: DecimalFilter<"EstatisticasNotasFiscais"> | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFilter<"EstatisticasNotasFiscais"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
    updatedAt?: DateTimeFilter<"EstatisticasNotasFiscais"> | Date | string
  }

  export type ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutFilialInput = {
    where: ReceitaVendedorDetalhadaWhereUniqueInput
    update: XOR<ReceitaVendedorDetalhadaUpdateWithoutFilialInput, ReceitaVendedorDetalhadaUncheckedUpdateWithoutFilialInput>
    create: XOR<ReceitaVendedorDetalhadaCreateWithoutFilialInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutFilialInput = {
    where: ReceitaVendedorDetalhadaWhereUniqueInput
    data: XOR<ReceitaVendedorDetalhadaUpdateWithoutFilialInput, ReceitaVendedorDetalhadaUncheckedUpdateWithoutFilialInput>
  }

  export type ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutFilialInput = {
    where: ReceitaVendedorDetalhadaScalarWhereInput
    data: XOR<ReceitaVendedorDetalhadaUpdateManyMutationInput, ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialInput>
  }

  export type ReceitaVendedorDetalhadaScalarWhereInput = {
    AND?: ReceitaVendedorDetalhadaScalarWhereInput | ReceitaVendedorDetalhadaScalarWhereInput[]
    OR?: ReceitaVendedorDetalhadaScalarWhereInput[]
    NOT?: ReceitaVendedorDetalhadaScalarWhereInput | ReceitaVendedorDetalhadaScalarWhereInput[]
    id?: IntFilter<"ReceitaVendedorDetalhada"> | number
    filialId?: IntNullableFilter<"ReceitaVendedorDetalhada"> | number | null
    vendedorId?: IntFilter<"ReceitaVendedorDetalhada"> | number
    data?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaVendedorDetalhada"> | string
    receitaTotal?: DecimalFilter<"ReceitaVendedorDetalhada"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaVendedorDetalhada"> | number
    dataInicio?: DateTimeNullableFilter<"ReceitaVendedorDetalhada"> | Date | string | null
    dataFim?: DateTimeNullableFilter<"ReceitaVendedorDetalhada"> | Date | string | null
    createdAt?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaVendedorDetalhada"> | Date | string
  }

  export type TicketMedioVendedorUpsertWithWhereUniqueWithoutFilialInput = {
    where: TicketMedioVendedorWhereUniqueInput
    update: XOR<TicketMedioVendedorUpdateWithoutFilialInput, TicketMedioVendedorUncheckedUpdateWithoutFilialInput>
    create: XOR<TicketMedioVendedorCreateWithoutFilialInput, TicketMedioVendedorUncheckedCreateWithoutFilialInput>
  }

  export type TicketMedioVendedorUpdateWithWhereUniqueWithoutFilialInput = {
    where: TicketMedioVendedorWhereUniqueInput
    data: XOR<TicketMedioVendedorUpdateWithoutFilialInput, TicketMedioVendedorUncheckedUpdateWithoutFilialInput>
  }

  export type TicketMedioVendedorUpdateManyWithWhereWithoutFilialInput = {
    where: TicketMedioVendedorScalarWhereInput
    data: XOR<TicketMedioVendedorUpdateManyMutationInput, TicketMedioVendedorUncheckedUpdateManyWithoutFilialInput>
  }

  export type TicketMedioVendedorScalarWhereInput = {
    AND?: TicketMedioVendedorScalarWhereInput | TicketMedioVendedorScalarWhereInput[]
    OR?: TicketMedioVendedorScalarWhereInput[]
    NOT?: TicketMedioVendedorScalarWhereInput | TicketMedioVendedorScalarWhereInput[]
    id?: IntFilter<"TicketMedioVendedor"> | number
    filialId?: IntNullableFilter<"TicketMedioVendedor"> | number | null
    vendedorId?: IntFilter<"TicketMedioVendedor"> | number
    data?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"TicketMedioVendedor"> | string
    ticketMedio?: DecimalFilter<"TicketMedioVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFilter<"TicketMedioVendedor"> | number
    valorTotal?: DecimalFilter<"TicketMedioVendedor"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"TicketMedioVendedor"> | Date | string
  }

  export type MixVendedorUpsertWithWhereUniqueWithoutFilialInput = {
    where: MixVendedorWhereUniqueInput
    update: XOR<MixVendedorUpdateWithoutFilialInput, MixVendedorUncheckedUpdateWithoutFilialInput>
    create: XOR<MixVendedorCreateWithoutFilialInput, MixVendedorUncheckedCreateWithoutFilialInput>
  }

  export type MixVendedorUpdateWithWhereUniqueWithoutFilialInput = {
    where: MixVendedorWhereUniqueInput
    data: XOR<MixVendedorUpdateWithoutFilialInput, MixVendedorUncheckedUpdateWithoutFilialInput>
  }

  export type MixVendedorUpdateManyWithWhereWithoutFilialInput = {
    where: MixVendedorScalarWhereInput
    data: XOR<MixVendedorUpdateManyMutationInput, MixVendedorUncheckedUpdateManyWithoutFilialInput>
  }

  export type MixVendedorScalarWhereInput = {
    AND?: MixVendedorScalarWhereInput | MixVendedorScalarWhereInput[]
    OR?: MixVendedorScalarWhereInput[]
    NOT?: MixVendedorScalarWhereInput | MixVendedorScalarWhereInput[]
    id?: IntFilter<"MixVendedor"> | number
    filialId?: IntNullableFilter<"MixVendedor"> | number | null
    vendedorId?: IntFilter<"MixVendedor"> | number
    data?: DateTimeFilter<"MixVendedor"> | Date | string
    tipoPeriodo?: StringFilter<"MixVendedor"> | string
    receitaMaquinas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFilter<"MixVendedor"> | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFilter<"MixVendedor"> | number
    quantidadeNotasPecas?: IntFilter<"MixVendedor"> | number
    quantidadeNotasServicos?: IntFilter<"MixVendedor"> | number
    createdAt?: DateTimeFilter<"MixVendedor"> | Date | string
    updatedAt?: DateTimeFilter<"MixVendedor"> | Date | string
  }

  export type CoberturaCarteiraUpsertWithWhereUniqueWithoutFilialInput = {
    where: CoberturaCarteiraWhereUniqueInput
    update: XOR<CoberturaCarteiraUpdateWithoutFilialInput, CoberturaCarteiraUncheckedUpdateWithoutFilialInput>
    create: XOR<CoberturaCarteiraCreateWithoutFilialInput, CoberturaCarteiraUncheckedCreateWithoutFilialInput>
  }

  export type CoberturaCarteiraUpdateWithWhereUniqueWithoutFilialInput = {
    where: CoberturaCarteiraWhereUniqueInput
    data: XOR<CoberturaCarteiraUpdateWithoutFilialInput, CoberturaCarteiraUncheckedUpdateWithoutFilialInput>
  }

  export type CoberturaCarteiraUpdateManyWithWhereWithoutFilialInput = {
    where: CoberturaCarteiraScalarWhereInput
    data: XOR<CoberturaCarteiraUpdateManyMutationInput, CoberturaCarteiraUncheckedUpdateManyWithoutFilialInput>
  }

  export type CoberturaCarteiraScalarWhereInput = {
    AND?: CoberturaCarteiraScalarWhereInput | CoberturaCarteiraScalarWhereInput[]
    OR?: CoberturaCarteiraScalarWhereInput[]
    NOT?: CoberturaCarteiraScalarWhereInput | CoberturaCarteiraScalarWhereInput[]
    id?: IntFilter<"CoberturaCarteira"> | number
    filialId?: IntNullableFilter<"CoberturaCarteira"> | number | null
    vendedorId?: IntFilter<"CoberturaCarteira"> | number
    data?: DateTimeFilter<"CoberturaCarteira"> | Date | string
    tipoPeriodo?: StringFilter<"CoberturaCarteira"> | string
    clientesUnicosAtendidos?: IntFilter<"CoberturaCarteira"> | number
    clientesAtivos?: IntFilter<"CoberturaCarteira"> | number
    percentualCobertura?: DecimalFilter<"CoberturaCarteira"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"CoberturaCarteira"> | Date | string
    updatedAt?: DateTimeFilter<"CoberturaCarteira"> | Date | string
  }

  export type RankingVendedoresUpsertWithWhereUniqueWithoutFilialInput = {
    where: RankingVendedoresWhereUniqueInput
    update: XOR<RankingVendedoresUpdateWithoutFilialInput, RankingVendedoresUncheckedUpdateWithoutFilialInput>
    create: XOR<RankingVendedoresCreateWithoutFilialInput, RankingVendedoresUncheckedCreateWithoutFilialInput>
  }

  export type RankingVendedoresUpdateWithWhereUniqueWithoutFilialInput = {
    where: RankingVendedoresWhereUniqueInput
    data: XOR<RankingVendedoresUpdateWithoutFilialInput, RankingVendedoresUncheckedUpdateWithoutFilialInput>
  }

  export type RankingVendedoresUpdateManyWithWhereWithoutFilialInput = {
    where: RankingVendedoresScalarWhereInput
    data: XOR<RankingVendedoresUpdateManyMutationInput, RankingVendedoresUncheckedUpdateManyWithoutFilialInput>
  }

  export type RankingVendedoresScalarWhereInput = {
    AND?: RankingVendedoresScalarWhereInput | RankingVendedoresScalarWhereInput[]
    OR?: RankingVendedoresScalarWhereInput[]
    NOT?: RankingVendedoresScalarWhereInput | RankingVendedoresScalarWhereInput[]
    id?: IntFilter<"RankingVendedores"> | number
    filialId?: IntNullableFilter<"RankingVendedores"> | number | null
    vendedorId?: IntFilter<"RankingVendedores"> | number
    data?: DateTimeFilter<"RankingVendedores"> | Date | string
    tipoPeriodo?: StringFilter<"RankingVendedores"> | string
    tipoRanking?: StringFilter<"RankingVendedores"> | string
    posicaoRanking?: IntFilter<"RankingVendedores"> | number
    valorMetrica?: DecimalFilter<"RankingVendedores"> | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFilter<"RankingVendedores"> | number
    percentilRanking?: DecimalFilter<"RankingVendedores"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"RankingVendedores"> | Date | string
    updatedAt?: DateTimeFilter<"RankingVendedores"> | Date | string
  }

  export type ReceitaFilialUpsertWithWhereUniqueWithoutFilialInput = {
    where: ReceitaFilialWhereUniqueInput
    update: XOR<ReceitaFilialUpdateWithoutFilialInput, ReceitaFilialUncheckedUpdateWithoutFilialInput>
    create: XOR<ReceitaFilialCreateWithoutFilialInput, ReceitaFilialUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaFilialUpdateWithWhereUniqueWithoutFilialInput = {
    where: ReceitaFilialWhereUniqueInput
    data: XOR<ReceitaFilialUpdateWithoutFilialInput, ReceitaFilialUncheckedUpdateWithoutFilialInput>
  }

  export type ReceitaFilialUpdateManyWithWhereWithoutFilialInput = {
    where: ReceitaFilialScalarWhereInput
    data: XOR<ReceitaFilialUpdateManyMutationInput, ReceitaFilialUncheckedUpdateManyWithoutFilialInput>
  }

  export type ReceitaFilialScalarWhereInput = {
    AND?: ReceitaFilialScalarWhereInput | ReceitaFilialScalarWhereInput[]
    OR?: ReceitaFilialScalarWhereInput[]
    NOT?: ReceitaFilialScalarWhereInput | ReceitaFilialScalarWhereInput[]
    id?: IntFilter<"ReceitaFilial"> | number
    filialId?: IntFilter<"ReceitaFilial"> | number
    data?: DateTimeFilter<"ReceitaFilial"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaFilial"> | string
    receitaTotal?: DecimalFilter<"ReceitaFilial"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaFilial"> | number
    ticketMedio?: DecimalFilter<"ReceitaFilial"> | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFilter<"ReceitaFilial"> | number
    createdAt?: DateTimeFilter<"ReceitaFilial"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaFilial"> | Date | string
  }

  export type MixFilialUpsertWithWhereUniqueWithoutFilialInput = {
    where: MixFilialWhereUniqueInput
    update: XOR<MixFilialUpdateWithoutFilialInput, MixFilialUncheckedUpdateWithoutFilialInput>
    create: XOR<MixFilialCreateWithoutFilialInput, MixFilialUncheckedCreateWithoutFilialInput>
  }

  export type MixFilialUpdateWithWhereUniqueWithoutFilialInput = {
    where: MixFilialWhereUniqueInput
    data: XOR<MixFilialUpdateWithoutFilialInput, MixFilialUncheckedUpdateWithoutFilialInput>
  }

  export type MixFilialUpdateManyWithWhereWithoutFilialInput = {
    where: MixFilialScalarWhereInput
    data: XOR<MixFilialUpdateManyMutationInput, MixFilialUncheckedUpdateManyWithoutFilialInput>
  }

  export type MixFilialScalarWhereInput = {
    AND?: MixFilialScalarWhereInput | MixFilialScalarWhereInput[]
    OR?: MixFilialScalarWhereInput[]
    NOT?: MixFilialScalarWhereInput | MixFilialScalarWhereInput[]
    id?: IntFilter<"MixFilial"> | number
    filialId?: IntFilter<"MixFilial"> | number
    data?: DateTimeFilter<"MixFilial"> | Date | string
    tipoPeriodo?: StringFilter<"MixFilial"> | string
    receitaMaquinas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFilter<"MixFilial"> | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFilter<"MixFilial"> | number
    quantidadeNotasPecas?: IntFilter<"MixFilial"> | number
    quantidadeNotasServicos?: IntFilter<"MixFilial"> | number
    createdAt?: DateTimeFilter<"MixFilial"> | Date | string
    updatedAt?: DateTimeFilter<"MixFilial"> | Date | string
  }

  export type ParticipacaoReceitaFilialUpsertWithWhereUniqueWithoutFilialInput = {
    where: ParticipacaoReceitaFilialWhereUniqueInput
    update: XOR<ParticipacaoReceitaFilialUpdateWithoutFilialInput, ParticipacaoReceitaFilialUncheckedUpdateWithoutFilialInput>
    create: XOR<ParticipacaoReceitaFilialCreateWithoutFilialInput, ParticipacaoReceitaFilialUncheckedCreateWithoutFilialInput>
  }

  export type ParticipacaoReceitaFilialUpdateWithWhereUniqueWithoutFilialInput = {
    where: ParticipacaoReceitaFilialWhereUniqueInput
    data: XOR<ParticipacaoReceitaFilialUpdateWithoutFilialInput, ParticipacaoReceitaFilialUncheckedUpdateWithoutFilialInput>
  }

  export type ParticipacaoReceitaFilialUpdateManyWithWhereWithoutFilialInput = {
    where: ParticipacaoReceitaFilialScalarWhereInput
    data: XOR<ParticipacaoReceitaFilialUpdateManyMutationInput, ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialInput>
  }

  export type ParticipacaoReceitaFilialScalarWhereInput = {
    AND?: ParticipacaoReceitaFilialScalarWhereInput | ParticipacaoReceitaFilialScalarWhereInput[]
    OR?: ParticipacaoReceitaFilialScalarWhereInput[]
    NOT?: ParticipacaoReceitaFilialScalarWhereInput | ParticipacaoReceitaFilialScalarWhereInput[]
    id?: IntFilter<"ParticipacaoReceitaFilial"> | number
    filialId?: IntFilter<"ParticipacaoReceitaFilial"> | number
    data?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
    tipoPeriodo?: StringFilter<"ParticipacaoReceitaFilial"> | string
    receitaFilial?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFilter<"ParticipacaoReceitaFilial"> | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFilter<"ParticipacaoReceitaFilial"> | number
    totalFiliais?: IntFilter<"ParticipacaoReceitaFilial"> | number
    createdAt?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
    updatedAt?: DateTimeFilter<"ParticipacaoReceitaFilial"> | Date | string
  }

  export type ReceitaFilialRegiaoUpsertWithWhereUniqueWithoutFilialInput = {
    where: ReceitaFilialRegiaoWhereUniqueInput
    update: XOR<ReceitaFilialRegiaoUpdateWithoutFilialInput, ReceitaFilialRegiaoUncheckedUpdateWithoutFilialInput>
    create: XOR<ReceitaFilialRegiaoCreateWithoutFilialInput, ReceitaFilialRegiaoUncheckedCreateWithoutFilialInput>
  }

  export type ReceitaFilialRegiaoUpdateWithWhereUniqueWithoutFilialInput = {
    where: ReceitaFilialRegiaoWhereUniqueInput
    data: XOR<ReceitaFilialRegiaoUpdateWithoutFilialInput, ReceitaFilialRegiaoUncheckedUpdateWithoutFilialInput>
  }

  export type ReceitaFilialRegiaoUpdateManyWithWhereWithoutFilialInput = {
    where: ReceitaFilialRegiaoScalarWhereInput
    data: XOR<ReceitaFilialRegiaoUpdateManyMutationInput, ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialInput>
  }

  export type ReceitaFilialRegiaoScalarWhereInput = {
    AND?: ReceitaFilialRegiaoScalarWhereInput | ReceitaFilialRegiaoScalarWhereInput[]
    OR?: ReceitaFilialRegiaoScalarWhereInput[]
    NOT?: ReceitaFilialRegiaoScalarWhereInput | ReceitaFilialRegiaoScalarWhereInput[]
    id?: IntFilter<"ReceitaFilialRegiao"> | number
    filialId?: IntFilter<"ReceitaFilialRegiao"> | number
    data?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
    tipoPeriodo?: StringFilter<"ReceitaFilialRegiao"> | string
    regiaoCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    estadoCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    cidadeCliente?: StringFilter<"ReceitaFilialRegiao"> | string
    receitaRegiao?: DecimalFilter<"ReceitaFilialRegiao"> | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFilter<"ReceitaFilialRegiao"> | number
    numeroClientes?: IntFilter<"ReceitaFilialRegiao"> | number
    percentualReceita?: DecimalFilter<"ReceitaFilialRegiao"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
    updatedAt?: DateTimeFilter<"ReceitaFilialRegiao"> | Date | string
  }

  export type NotasFiscalCabecalhoCreateWithoutVendedorInput = {
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filial?: FilialCreateNestedOneWithoutNotasFiscaisInput
    cliente?: ClienteCreateNestedOneWithoutNotasFiscaisInput
    itens?: NotaFiscalItemCreateNestedManyWithoutNotaFiscalInput
  }

  export type NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filialId?: number | null
    clienteId?: number | null
    itens?: NotaFiscalItemUncheckedCreateNestedManyWithoutNotaFiscalInput
  }

  export type NotasFiscalCabecalhoCreateOrConnectWithoutVendedorInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    create: XOR<NotasFiscalCabecalhoCreateWithoutVendedorInput, NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput>
  }

  export type NotasFiscalCabecalhoCreateManyVendedorInputEnvelope = {
    data: NotasFiscalCabecalhoCreateManyVendedorInput | NotasFiscalCabecalhoCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaVendedorCreateWithoutVendedorInput = {
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasVendedorInput
  }

  export type ReceitaVendedorUncheckedCreateWithoutVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorCreateOrConnectWithoutVendedorInput = {
    where: ReceitaVendedorWhereUniqueInput
    create: XOR<ReceitaVendedorCreateWithoutVendedorInput, ReceitaVendedorUncheckedCreateWithoutVendedorInput>
  }

  export type ReceitaVendedorCreateManyVendedorInputEnvelope = {
    data: ReceitaVendedorCreateManyVendedorInput | ReceitaVendedorCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaVendedorDetalhadaCreateWithoutVendedorInput = {
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasVendedorDetalhadasInput
  }

  export type ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorDetalhadaCreateOrConnectWithoutVendedorInput = {
    where: ReceitaVendedorDetalhadaWhereUniqueInput
    create: XOR<ReceitaVendedorDetalhadaCreateWithoutVendedorInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput>
  }

  export type ReceitaVendedorDetalhadaCreateManyVendedorInputEnvelope = {
    data: ReceitaVendedorDetalhadaCreateManyVendedorInput | ReceitaVendedorDetalhadaCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type TicketMedioVendedorCreateWithoutVendedorInput = {
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutTicketsMediosVendedorInput
  }

  export type TicketMedioVendedorUncheckedCreateWithoutVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioVendedorCreateOrConnectWithoutVendedorInput = {
    where: TicketMedioVendedorWhereUniqueInput
    create: XOR<TicketMedioVendedorCreateWithoutVendedorInput, TicketMedioVendedorUncheckedCreateWithoutVendedorInput>
  }

  export type TicketMedioVendedorCreateManyVendedorInputEnvelope = {
    data: TicketMedioVendedorCreateManyVendedorInput | TicketMedioVendedorCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type MixVendedorCreateWithoutVendedorInput = {
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutMixVendedoresInput
  }

  export type MixVendedorUncheckedCreateWithoutVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixVendedorCreateOrConnectWithoutVendedorInput = {
    where: MixVendedorWhereUniqueInput
    create: XOR<MixVendedorCreateWithoutVendedorInput, MixVendedorUncheckedCreateWithoutVendedorInput>
  }

  export type MixVendedorCreateManyVendedorInputEnvelope = {
    data: MixVendedorCreateManyVendedorInput | MixVendedorCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type CoberturaCarteiraCreateWithoutVendedorInput = {
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutCoberturaCarteirasInput
  }

  export type CoberturaCarteiraUncheckedCreateWithoutVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CoberturaCarteiraCreateOrConnectWithoutVendedorInput = {
    where: CoberturaCarteiraWhereUniqueInput
    create: XOR<CoberturaCarteiraCreateWithoutVendedorInput, CoberturaCarteiraUncheckedCreateWithoutVendedorInput>
  }

  export type CoberturaCarteiraCreateManyVendedorInputEnvelope = {
    data: CoberturaCarteiraCreateManyVendedorInput | CoberturaCarteiraCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type RankingVendedoresCreateWithoutVendedorInput = {
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutRankingVendedoresInput
  }

  export type RankingVendedoresUncheckedCreateWithoutVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RankingVendedoresCreateOrConnectWithoutVendedorInput = {
    where: RankingVendedoresWhereUniqueInput
    create: XOR<RankingVendedoresCreateWithoutVendedorInput, RankingVendedoresUncheckedCreateWithoutVendedorInput>
  }

  export type RankingVendedoresCreateManyVendedorInputEnvelope = {
    data: RankingVendedoresCreateManyVendedorInput | RankingVendedoresCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type FilialCreateWithoutVendedoresInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutVendedoresInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutVendedoresInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutVendedoresInput, FilialUncheckedCreateWithoutVendedoresInput>
  }

  export type NotasFiscalCabecalhoUpsertWithWhereUniqueWithoutVendedorInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    update: XOR<NotasFiscalCabecalhoUpdateWithoutVendedorInput, NotasFiscalCabecalhoUncheckedUpdateWithoutVendedorInput>
    create: XOR<NotasFiscalCabecalhoCreateWithoutVendedorInput, NotasFiscalCabecalhoUncheckedCreateWithoutVendedorInput>
  }

  export type NotasFiscalCabecalhoUpdateWithWhereUniqueWithoutVendedorInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    data: XOR<NotasFiscalCabecalhoUpdateWithoutVendedorInput, NotasFiscalCabecalhoUncheckedUpdateWithoutVendedorInput>
  }

  export type NotasFiscalCabecalhoUpdateManyWithWhereWithoutVendedorInput = {
    where: NotasFiscalCabecalhoScalarWhereInput
    data: XOR<NotasFiscalCabecalhoUpdateManyMutationInput, NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorInput>
  }

  export type ReceitaVendedorUpsertWithWhereUniqueWithoutVendedorInput = {
    where: ReceitaVendedorWhereUniqueInput
    update: XOR<ReceitaVendedorUpdateWithoutVendedorInput, ReceitaVendedorUncheckedUpdateWithoutVendedorInput>
    create: XOR<ReceitaVendedorCreateWithoutVendedorInput, ReceitaVendedorUncheckedCreateWithoutVendedorInput>
  }

  export type ReceitaVendedorUpdateWithWhereUniqueWithoutVendedorInput = {
    where: ReceitaVendedorWhereUniqueInput
    data: XOR<ReceitaVendedorUpdateWithoutVendedorInput, ReceitaVendedorUncheckedUpdateWithoutVendedorInput>
  }

  export type ReceitaVendedorUpdateManyWithWhereWithoutVendedorInput = {
    where: ReceitaVendedorScalarWhereInput
    data: XOR<ReceitaVendedorUpdateManyMutationInput, ReceitaVendedorUncheckedUpdateManyWithoutVendedorInput>
  }

  export type ReceitaVendedorDetalhadaUpsertWithWhereUniqueWithoutVendedorInput = {
    where: ReceitaVendedorDetalhadaWhereUniqueInput
    update: XOR<ReceitaVendedorDetalhadaUpdateWithoutVendedorInput, ReceitaVendedorDetalhadaUncheckedUpdateWithoutVendedorInput>
    create: XOR<ReceitaVendedorDetalhadaCreateWithoutVendedorInput, ReceitaVendedorDetalhadaUncheckedCreateWithoutVendedorInput>
  }

  export type ReceitaVendedorDetalhadaUpdateWithWhereUniqueWithoutVendedorInput = {
    where: ReceitaVendedorDetalhadaWhereUniqueInput
    data: XOR<ReceitaVendedorDetalhadaUpdateWithoutVendedorInput, ReceitaVendedorDetalhadaUncheckedUpdateWithoutVendedorInput>
  }

  export type ReceitaVendedorDetalhadaUpdateManyWithWhereWithoutVendedorInput = {
    where: ReceitaVendedorDetalhadaScalarWhereInput
    data: XOR<ReceitaVendedorDetalhadaUpdateManyMutationInput, ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorInput>
  }

  export type TicketMedioVendedorUpsertWithWhereUniqueWithoutVendedorInput = {
    where: TicketMedioVendedorWhereUniqueInput
    update: XOR<TicketMedioVendedorUpdateWithoutVendedorInput, TicketMedioVendedorUncheckedUpdateWithoutVendedorInput>
    create: XOR<TicketMedioVendedorCreateWithoutVendedorInput, TicketMedioVendedorUncheckedCreateWithoutVendedorInput>
  }

  export type TicketMedioVendedorUpdateWithWhereUniqueWithoutVendedorInput = {
    where: TicketMedioVendedorWhereUniqueInput
    data: XOR<TicketMedioVendedorUpdateWithoutVendedorInput, TicketMedioVendedorUncheckedUpdateWithoutVendedorInput>
  }

  export type TicketMedioVendedorUpdateManyWithWhereWithoutVendedorInput = {
    where: TicketMedioVendedorScalarWhereInput
    data: XOR<TicketMedioVendedorUpdateManyMutationInput, TicketMedioVendedorUncheckedUpdateManyWithoutVendedorInput>
  }

  export type MixVendedorUpsertWithWhereUniqueWithoutVendedorInput = {
    where: MixVendedorWhereUniqueInput
    update: XOR<MixVendedorUpdateWithoutVendedorInput, MixVendedorUncheckedUpdateWithoutVendedorInput>
    create: XOR<MixVendedorCreateWithoutVendedorInput, MixVendedorUncheckedCreateWithoutVendedorInput>
  }

  export type MixVendedorUpdateWithWhereUniqueWithoutVendedorInput = {
    where: MixVendedorWhereUniqueInput
    data: XOR<MixVendedorUpdateWithoutVendedorInput, MixVendedorUncheckedUpdateWithoutVendedorInput>
  }

  export type MixVendedorUpdateManyWithWhereWithoutVendedorInput = {
    where: MixVendedorScalarWhereInput
    data: XOR<MixVendedorUpdateManyMutationInput, MixVendedorUncheckedUpdateManyWithoutVendedorInput>
  }

  export type CoberturaCarteiraUpsertWithWhereUniqueWithoutVendedorInput = {
    where: CoberturaCarteiraWhereUniqueInput
    update: XOR<CoberturaCarteiraUpdateWithoutVendedorInput, CoberturaCarteiraUncheckedUpdateWithoutVendedorInput>
    create: XOR<CoberturaCarteiraCreateWithoutVendedorInput, CoberturaCarteiraUncheckedCreateWithoutVendedorInput>
  }

  export type CoberturaCarteiraUpdateWithWhereUniqueWithoutVendedorInput = {
    where: CoberturaCarteiraWhereUniqueInput
    data: XOR<CoberturaCarteiraUpdateWithoutVendedorInput, CoberturaCarteiraUncheckedUpdateWithoutVendedorInput>
  }

  export type CoberturaCarteiraUpdateManyWithWhereWithoutVendedorInput = {
    where: CoberturaCarteiraScalarWhereInput
    data: XOR<CoberturaCarteiraUpdateManyMutationInput, CoberturaCarteiraUncheckedUpdateManyWithoutVendedorInput>
  }

  export type RankingVendedoresUpsertWithWhereUniqueWithoutVendedorInput = {
    where: RankingVendedoresWhereUniqueInput
    update: XOR<RankingVendedoresUpdateWithoutVendedorInput, RankingVendedoresUncheckedUpdateWithoutVendedorInput>
    create: XOR<RankingVendedoresCreateWithoutVendedorInput, RankingVendedoresUncheckedCreateWithoutVendedorInput>
  }

  export type RankingVendedoresUpdateWithWhereUniqueWithoutVendedorInput = {
    where: RankingVendedoresWhereUniqueInput
    data: XOR<RankingVendedoresUpdateWithoutVendedorInput, RankingVendedoresUncheckedUpdateWithoutVendedorInput>
  }

  export type RankingVendedoresUpdateManyWithWhereWithoutVendedorInput = {
    where: RankingVendedoresScalarWhereInput
    data: XOR<RankingVendedoresUpdateManyMutationInput, RankingVendedoresUncheckedUpdateManyWithoutVendedorInput>
  }

  export type FilialUpsertWithoutVendedoresInput = {
    update: XOR<FilialUpdateWithoutVendedoresInput, FilialUncheckedUpdateWithoutVendedoresInput>
    create: XOR<FilialCreateWithoutVendedoresInput, FilialUncheckedCreateWithoutVendedoresInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutVendedoresInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutVendedoresInput, FilialUncheckedUpdateWithoutVendedoresInput>
  }

  export type FilialUpdateWithoutVendedoresInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutVendedoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type MaquinaEstoqueCreateWithoutProdutoInput = {
    Chassi: string
    Status?: string | null
    filial?: FilialCreateNestedOneWithoutMaquinasEstoqueInput
    Notas_Fiscais_Itens?: NotaFiscalItemCreateNestedManyWithoutMaquinas_EstoqueInput
  }

  export type MaquinaEstoqueUncheckedCreateWithoutProdutoInput = {
    Chassi: string
    filialId?: number | null
    Status?: string | null
    Notas_Fiscais_Itens?: NotaFiscalItemUncheckedCreateNestedManyWithoutMaquinas_EstoqueInput
  }

  export type MaquinaEstoqueCreateOrConnectWithoutProdutoInput = {
    where: MaquinaEstoqueWhereUniqueInput
    create: XOR<MaquinaEstoqueCreateWithoutProdutoInput, MaquinaEstoqueUncheckedCreateWithoutProdutoInput>
  }

  export type MaquinaEstoqueCreateManyProdutoInputEnvelope = {
    data: MaquinaEstoqueCreateManyProdutoInput | MaquinaEstoqueCreateManyProdutoInput[]
    skipDuplicates?: boolean
  }

  export type NotaFiscalItemCreateWithoutProdutoInput = {
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Maquinas_Estoque?: MaquinaEstoqueCreateNestedOneWithoutNotas_Fiscais_ItensInput
    notaFiscal: NotasFiscalCabecalhoCreateNestedOneWithoutItensInput
  }

  export type NotaFiscalItemUncheckedCreateWithoutProdutoInput = {
    id?: number
    notaFiscalId: number
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Chassi?: string | null
  }

  export type NotaFiscalItemCreateOrConnectWithoutProdutoInput = {
    where: NotaFiscalItemWhereUniqueInput
    create: XOR<NotaFiscalItemCreateWithoutProdutoInput, NotaFiscalItemUncheckedCreateWithoutProdutoInput>
  }

  export type NotaFiscalItemCreateManyProdutoInputEnvelope = {
    data: NotaFiscalItemCreateManyProdutoInput | NotaFiscalItemCreateManyProdutoInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaTipoProdutoCreateWithoutProdutoInput = {
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasTipoProdutoInput
  }

  export type ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaTipoProdutoCreateOrConnectWithoutProdutoInput = {
    where: ReceitaTipoProdutoWhereUniqueInput
    create: XOR<ReceitaTipoProdutoCreateWithoutProdutoInput, ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput>
  }

  export type ReceitaTipoProdutoCreateManyProdutoInputEnvelope = {
    data: ReceitaTipoProdutoCreateManyProdutoInput | ReceitaTipoProdutoCreateManyProdutoInput[]
    skipDuplicates?: boolean
  }

  export type ReceitaProdutoModeloCreateWithoutProdutoInput = {
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    filial?: FilialCreateNestedOneWithoutReceitasProdutoModeloInput
  }

  export type ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaProdutoModeloCreateOrConnectWithoutProdutoInput = {
    where: ReceitaProdutoModeloWhereUniqueInput
    create: XOR<ReceitaProdutoModeloCreateWithoutProdutoInput, ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput>
  }

  export type ReceitaProdutoModeloCreateManyProdutoInputEnvelope = {
    data: ReceitaProdutoModeloCreateManyProdutoInput | ReceitaProdutoModeloCreateManyProdutoInput[]
    skipDuplicates?: boolean
  }

  export type AssociacaoProdutoCreateWithoutProdutoAInput = {
    id?: bigint | number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
    produtoB: ProdutoCreateNestedOneWithoutAssociacoesBInput
  }

  export type AssociacaoProdutoUncheckedCreateWithoutProdutoAInput = {
    id?: bigint | number
    produto_b_id: number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
  }

  export type AssociacaoProdutoCreateOrConnectWithoutProdutoAInput = {
    where: AssociacaoProdutoWhereUniqueInput
    create: XOR<AssociacaoProdutoCreateWithoutProdutoAInput, AssociacaoProdutoUncheckedCreateWithoutProdutoAInput>
  }

  export type AssociacaoProdutoCreateManyProdutoAInputEnvelope = {
    data: AssociacaoProdutoCreateManyProdutoAInput | AssociacaoProdutoCreateManyProdutoAInput[]
    skipDuplicates?: boolean
  }

  export type AssociacaoProdutoCreateWithoutProdutoBInput = {
    id?: bigint | number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
    produtoA: ProdutoCreateNestedOneWithoutAssociacoesAInput
  }

  export type AssociacaoProdutoUncheckedCreateWithoutProdutoBInput = {
    id?: bigint | number
    produto_a_id: number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
  }

  export type AssociacaoProdutoCreateOrConnectWithoutProdutoBInput = {
    where: AssociacaoProdutoWhereUniqueInput
    create: XOR<AssociacaoProdutoCreateWithoutProdutoBInput, AssociacaoProdutoUncheckedCreateWithoutProdutoBInput>
  }

  export type AssociacaoProdutoCreateManyProdutoBInputEnvelope = {
    data: AssociacaoProdutoCreateManyProdutoBInput | AssociacaoProdutoCreateManyProdutoBInput[]
    skipDuplicates?: boolean
  }

  export type MaquinaEstoqueUpsertWithWhereUniqueWithoutProdutoInput = {
    where: MaquinaEstoqueWhereUniqueInput
    update: XOR<MaquinaEstoqueUpdateWithoutProdutoInput, MaquinaEstoqueUncheckedUpdateWithoutProdutoInput>
    create: XOR<MaquinaEstoqueCreateWithoutProdutoInput, MaquinaEstoqueUncheckedCreateWithoutProdutoInput>
  }

  export type MaquinaEstoqueUpdateWithWhereUniqueWithoutProdutoInput = {
    where: MaquinaEstoqueWhereUniqueInput
    data: XOR<MaquinaEstoqueUpdateWithoutProdutoInput, MaquinaEstoqueUncheckedUpdateWithoutProdutoInput>
  }

  export type MaquinaEstoqueUpdateManyWithWhereWithoutProdutoInput = {
    where: MaquinaEstoqueScalarWhereInput
    data: XOR<MaquinaEstoqueUpdateManyMutationInput, MaquinaEstoqueUncheckedUpdateManyWithoutProdutoInput>
  }

  export type NotaFiscalItemUpsertWithWhereUniqueWithoutProdutoInput = {
    where: NotaFiscalItemWhereUniqueInput
    update: XOR<NotaFiscalItemUpdateWithoutProdutoInput, NotaFiscalItemUncheckedUpdateWithoutProdutoInput>
    create: XOR<NotaFiscalItemCreateWithoutProdutoInput, NotaFiscalItemUncheckedCreateWithoutProdutoInput>
  }

  export type NotaFiscalItemUpdateWithWhereUniqueWithoutProdutoInput = {
    where: NotaFiscalItemWhereUniqueInput
    data: XOR<NotaFiscalItemUpdateWithoutProdutoInput, NotaFiscalItemUncheckedUpdateWithoutProdutoInput>
  }

  export type NotaFiscalItemUpdateManyWithWhereWithoutProdutoInput = {
    where: NotaFiscalItemScalarWhereInput
    data: XOR<NotaFiscalItemUpdateManyMutationInput, NotaFiscalItemUncheckedUpdateManyWithoutProdutoInput>
  }

  export type NotaFiscalItemScalarWhereInput = {
    AND?: NotaFiscalItemScalarWhereInput | NotaFiscalItemScalarWhereInput[]
    OR?: NotaFiscalItemScalarWhereInput[]
    NOT?: NotaFiscalItemScalarWhereInput | NotaFiscalItemScalarWhereInput[]
    id?: IntFilter<"NotaFiscalItem"> | number
    notaFiscalId?: IntFilter<"NotaFiscalItem"> | number
    produtoId?: IntFilter<"NotaFiscalItem"> | number
    Quantidade?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFilter<"NotaFiscalItem"> | Decimal | DecimalJsLike | number | string
    Chassi?: StringNullableFilter<"NotaFiscalItem"> | string | null
  }

  export type ReceitaTipoProdutoUpsertWithWhereUniqueWithoutProdutoInput = {
    where: ReceitaTipoProdutoWhereUniqueInput
    update: XOR<ReceitaTipoProdutoUpdateWithoutProdutoInput, ReceitaTipoProdutoUncheckedUpdateWithoutProdutoInput>
    create: XOR<ReceitaTipoProdutoCreateWithoutProdutoInput, ReceitaTipoProdutoUncheckedCreateWithoutProdutoInput>
  }

  export type ReceitaTipoProdutoUpdateWithWhereUniqueWithoutProdutoInput = {
    where: ReceitaTipoProdutoWhereUniqueInput
    data: XOR<ReceitaTipoProdutoUpdateWithoutProdutoInput, ReceitaTipoProdutoUncheckedUpdateWithoutProdutoInput>
  }

  export type ReceitaTipoProdutoUpdateManyWithWhereWithoutProdutoInput = {
    where: ReceitaTipoProdutoScalarWhereInput
    data: XOR<ReceitaTipoProdutoUpdateManyMutationInput, ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoInput>
  }

  export type ReceitaProdutoModeloUpsertWithWhereUniqueWithoutProdutoInput = {
    where: ReceitaProdutoModeloWhereUniqueInput
    update: XOR<ReceitaProdutoModeloUpdateWithoutProdutoInput, ReceitaProdutoModeloUncheckedUpdateWithoutProdutoInput>
    create: XOR<ReceitaProdutoModeloCreateWithoutProdutoInput, ReceitaProdutoModeloUncheckedCreateWithoutProdutoInput>
  }

  export type ReceitaProdutoModeloUpdateWithWhereUniqueWithoutProdutoInput = {
    where: ReceitaProdutoModeloWhereUniqueInput
    data: XOR<ReceitaProdutoModeloUpdateWithoutProdutoInput, ReceitaProdutoModeloUncheckedUpdateWithoutProdutoInput>
  }

  export type ReceitaProdutoModeloUpdateManyWithWhereWithoutProdutoInput = {
    where: ReceitaProdutoModeloScalarWhereInput
    data: XOR<ReceitaProdutoModeloUpdateManyMutationInput, ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoInput>
  }

  export type AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoAInput = {
    where: AssociacaoProdutoWhereUniqueInput
    update: XOR<AssociacaoProdutoUpdateWithoutProdutoAInput, AssociacaoProdutoUncheckedUpdateWithoutProdutoAInput>
    create: XOR<AssociacaoProdutoCreateWithoutProdutoAInput, AssociacaoProdutoUncheckedCreateWithoutProdutoAInput>
  }

  export type AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoAInput = {
    where: AssociacaoProdutoWhereUniqueInput
    data: XOR<AssociacaoProdutoUpdateWithoutProdutoAInput, AssociacaoProdutoUncheckedUpdateWithoutProdutoAInput>
  }

  export type AssociacaoProdutoUpdateManyWithWhereWithoutProdutoAInput = {
    where: AssociacaoProdutoScalarWhereInput
    data: XOR<AssociacaoProdutoUpdateManyMutationInput, AssociacaoProdutoUncheckedUpdateManyWithoutProdutoAInput>
  }

  export type AssociacaoProdutoScalarWhereInput = {
    AND?: AssociacaoProdutoScalarWhereInput | AssociacaoProdutoScalarWhereInput[]
    OR?: AssociacaoProdutoScalarWhereInput[]
    NOT?: AssociacaoProdutoScalarWhereInput | AssociacaoProdutoScalarWhereInput[]
    id?: BigIntFilter<"AssociacaoProduto"> | bigint | number
    produto_a_id?: IntFilter<"AssociacaoProduto"> | number
    produto_b_id?: IntFilter<"AssociacaoProduto"> | number
    suporte?: IntFilter<"AssociacaoProduto"> | number
    confianca?: FloatFilter<"AssociacaoProduto"> | number
    lift?: FloatFilter<"AssociacaoProduto"> | number
    a_nome?: StringFilter<"AssociacaoProduto"> | string
    b_nome?: StringFilter<"AssociacaoProduto"> | string
    a_tipo?: StringFilter<"AssociacaoProduto"> | string
    b_tipo?: StringFilter<"AssociacaoProduto"> | string
    vendas_produto_a?: IntFilter<"AssociacaoProduto"> | number
    vendas_produto_b?: IntFilter<"AssociacaoProduto"> | number
    atualizado_em?: DateTimeFilter<"AssociacaoProduto"> | Date | string
  }

  export type AssociacaoProdutoUpsertWithWhereUniqueWithoutProdutoBInput = {
    where: AssociacaoProdutoWhereUniqueInput
    update: XOR<AssociacaoProdutoUpdateWithoutProdutoBInput, AssociacaoProdutoUncheckedUpdateWithoutProdutoBInput>
    create: XOR<AssociacaoProdutoCreateWithoutProdutoBInput, AssociacaoProdutoUncheckedCreateWithoutProdutoBInput>
  }

  export type AssociacaoProdutoUpdateWithWhereUniqueWithoutProdutoBInput = {
    where: AssociacaoProdutoWhereUniqueInput
    data: XOR<AssociacaoProdutoUpdateWithoutProdutoBInput, AssociacaoProdutoUncheckedUpdateWithoutProdutoBInput>
  }

  export type AssociacaoProdutoUpdateManyWithWhereWithoutProdutoBInput = {
    where: AssociacaoProdutoScalarWhereInput
    data: XOR<AssociacaoProdutoUpdateManyMutationInput, AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBInput>
  }

  export type ProdutoCreateWithoutMaquinasEstoqueInput = {
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    notasFiscaisItens?: NotaFiscalItemCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoUncheckedCreateWithoutMaquinasEstoqueInput = {
    id?: number
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    notasFiscaisItens?: NotaFiscalItemUncheckedCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoCreateOrConnectWithoutMaquinasEstoqueInput = {
    where: ProdutoWhereUniqueInput
    create: XOR<ProdutoCreateWithoutMaquinasEstoqueInput, ProdutoUncheckedCreateWithoutMaquinasEstoqueInput>
  }

  export type FilialCreateWithoutMaquinasEstoqueInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutMaquinasEstoqueInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutMaquinasEstoqueInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutMaquinasEstoqueInput, FilialUncheckedCreateWithoutMaquinasEstoqueInput>
  }

  export type NotaFiscalItemCreateWithoutMaquinas_EstoqueInput = {
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    notaFiscal: NotasFiscalCabecalhoCreateNestedOneWithoutItensInput
    produto: ProdutoCreateNestedOneWithoutNotasFiscaisItensInput
  }

  export type NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput = {
    id?: number
    notaFiscalId: number
    produtoId: number
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
  }

  export type NotaFiscalItemCreateOrConnectWithoutMaquinas_EstoqueInput = {
    where: NotaFiscalItemWhereUniqueInput
    create: XOR<NotaFiscalItemCreateWithoutMaquinas_EstoqueInput, NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput>
  }

  export type NotaFiscalItemCreateManyMaquinas_EstoqueInputEnvelope = {
    data: NotaFiscalItemCreateManyMaquinas_EstoqueInput | NotaFiscalItemCreateManyMaquinas_EstoqueInput[]
    skipDuplicates?: boolean
  }

  export type ProdutoUpsertWithoutMaquinasEstoqueInput = {
    update: XOR<ProdutoUpdateWithoutMaquinasEstoqueInput, ProdutoUncheckedUpdateWithoutMaquinasEstoqueInput>
    create: XOR<ProdutoCreateWithoutMaquinasEstoqueInput, ProdutoUncheckedCreateWithoutMaquinasEstoqueInput>
    where?: ProdutoWhereInput
  }

  export type ProdutoUpdateToOneWithWhereWithoutMaquinasEstoqueInput = {
    where?: ProdutoWhereInput
    data: XOR<ProdutoUpdateWithoutMaquinasEstoqueInput, ProdutoUncheckedUpdateWithoutMaquinasEstoqueInput>
  }

  export type ProdutoUpdateWithoutMaquinasEstoqueInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notasFiscaisItens?: NotaFiscalItemUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUpdateManyWithoutProdutoBNestedInput
  }

  export type ProdutoUncheckedUpdateWithoutMaquinasEstoqueInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notasFiscaisItens?: NotaFiscalItemUncheckedUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBNestedInput
  }

  export type FilialUpsertWithoutMaquinasEstoqueInput = {
    update: XOR<FilialUpdateWithoutMaquinasEstoqueInput, FilialUncheckedUpdateWithoutMaquinasEstoqueInput>
    create: XOR<FilialCreateWithoutMaquinasEstoqueInput, FilialUncheckedCreateWithoutMaquinasEstoqueInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutMaquinasEstoqueInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutMaquinasEstoqueInput, FilialUncheckedUpdateWithoutMaquinasEstoqueInput>
  }

  export type FilialUpdateWithoutMaquinasEstoqueInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutMaquinasEstoqueInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type NotaFiscalItemUpsertWithWhereUniqueWithoutMaquinas_EstoqueInput = {
    where: NotaFiscalItemWhereUniqueInput
    update: XOR<NotaFiscalItemUpdateWithoutMaquinas_EstoqueInput, NotaFiscalItemUncheckedUpdateWithoutMaquinas_EstoqueInput>
    create: XOR<NotaFiscalItemCreateWithoutMaquinas_EstoqueInput, NotaFiscalItemUncheckedCreateWithoutMaquinas_EstoqueInput>
  }

  export type NotaFiscalItemUpdateWithWhereUniqueWithoutMaquinas_EstoqueInput = {
    where: NotaFiscalItemWhereUniqueInput
    data: XOR<NotaFiscalItemUpdateWithoutMaquinas_EstoqueInput, NotaFiscalItemUncheckedUpdateWithoutMaquinas_EstoqueInput>
  }

  export type NotaFiscalItemUpdateManyWithWhereWithoutMaquinas_EstoqueInput = {
    where: NotaFiscalItemScalarWhereInput
    data: XOR<NotaFiscalItemUpdateManyMutationInput, NotaFiscalItemUncheckedUpdateManyWithoutMaquinas_EstoqueInput>
  }

  export type FilialCreateWithoutNotasFiscaisInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutNotasFiscaisInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutNotasFiscaisInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutNotasFiscaisInput, FilialUncheckedCreateWithoutNotasFiscaisInput>
  }

  export type ClienteCreateWithoutNotasFiscaisInput = {
    nome: string
    cpfCnpj: string
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    rfvTipoNegocio?: RFVTipoNegocioCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutNotasFiscaisInput = {
    id?: number
    nome: string
    cpfCnpj: string
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    rfvTipoNegocio?: RFVTipoNegocioUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutNotasFiscaisInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutNotasFiscaisInput, ClienteUncheckedCreateWithoutNotasFiscaisInput>
  }

  export type VendedorCreateWithoutNotasFiscaisInput = {
    nome: string
    cpf: string
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresCreateNestedManyWithoutVendedorInput
    filial?: FilialCreateNestedOneWithoutVendedoresInput
  }

  export type VendedorUncheckedCreateWithoutNotasFiscaisInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorUncheckedCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorCreateOrConnectWithoutNotasFiscaisInput = {
    where: VendedorWhereUniqueInput
    create: XOR<VendedorCreateWithoutNotasFiscaisInput, VendedorUncheckedCreateWithoutNotasFiscaisInput>
  }

  export type NotaFiscalItemCreateWithoutNotaFiscalInput = {
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Maquinas_Estoque?: MaquinaEstoqueCreateNestedOneWithoutNotas_Fiscais_ItensInput
    produto: ProdutoCreateNestedOneWithoutNotasFiscaisItensInput
  }

  export type NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput = {
    id?: number
    produtoId: number
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Chassi?: string | null
  }

  export type NotaFiscalItemCreateOrConnectWithoutNotaFiscalInput = {
    where: NotaFiscalItemWhereUniqueInput
    create: XOR<NotaFiscalItemCreateWithoutNotaFiscalInput, NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput>
  }

  export type NotaFiscalItemCreateManyNotaFiscalInputEnvelope = {
    data: NotaFiscalItemCreateManyNotaFiscalInput | NotaFiscalItemCreateManyNotaFiscalInput[]
    skipDuplicates?: boolean
  }

  export type FilialUpsertWithoutNotasFiscaisInput = {
    update: XOR<FilialUpdateWithoutNotasFiscaisInput, FilialUncheckedUpdateWithoutNotasFiscaisInput>
    create: XOR<FilialCreateWithoutNotasFiscaisInput, FilialUncheckedCreateWithoutNotasFiscaisInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutNotasFiscaisInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutNotasFiscaisInput, FilialUncheckedUpdateWithoutNotasFiscaisInput>
  }

  export type FilialUpdateWithoutNotasFiscaisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutNotasFiscaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type ClienteUpsertWithoutNotasFiscaisInput = {
    update: XOR<ClienteUpdateWithoutNotasFiscaisInput, ClienteUncheckedUpdateWithoutNotasFiscaisInput>
    create: XOR<ClienteCreateWithoutNotasFiscaisInput, ClienteUncheckedCreateWithoutNotasFiscaisInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutNotasFiscaisInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutNotasFiscaisInput, ClienteUncheckedUpdateWithoutNotasFiscaisInput>
  }

  export type ClienteUpdateWithoutNotasFiscaisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpfCnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    rfvTipoNegocio?: RFVTipoNegocioUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutNotasFiscaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpfCnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    rfvTipoNegocio?: RFVTipoNegocioUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type VendedorUpsertWithoutNotasFiscaisInput = {
    update: XOR<VendedorUpdateWithoutNotasFiscaisInput, VendedorUncheckedUpdateWithoutNotasFiscaisInput>
    create: XOR<VendedorCreateWithoutNotasFiscaisInput, VendedorUncheckedCreateWithoutNotasFiscaisInput>
    where?: VendedorWhereInput
  }

  export type VendedorUpdateToOneWithWhereWithoutNotasFiscaisInput = {
    where?: VendedorWhereInput
    data: XOR<VendedorUpdateWithoutNotasFiscaisInput, VendedorUncheckedUpdateWithoutNotasFiscaisInput>
  }

  export type VendedorUpdateWithoutNotasFiscaisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUpdateManyWithoutVendedorNestedInput
    filial?: FilialUpdateOneWithoutVendedoresNestedInput
  }

  export type VendedorUncheckedUpdateWithoutNotasFiscaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type NotaFiscalItemUpsertWithWhereUniqueWithoutNotaFiscalInput = {
    where: NotaFiscalItemWhereUniqueInput
    update: XOR<NotaFiscalItemUpdateWithoutNotaFiscalInput, NotaFiscalItemUncheckedUpdateWithoutNotaFiscalInput>
    create: XOR<NotaFiscalItemCreateWithoutNotaFiscalInput, NotaFiscalItemUncheckedCreateWithoutNotaFiscalInput>
  }

  export type NotaFiscalItemUpdateWithWhereUniqueWithoutNotaFiscalInput = {
    where: NotaFiscalItemWhereUniqueInput
    data: XOR<NotaFiscalItemUpdateWithoutNotaFiscalInput, NotaFiscalItemUncheckedUpdateWithoutNotaFiscalInput>
  }

  export type NotaFiscalItemUpdateManyWithWhereWithoutNotaFiscalInput = {
    where: NotaFiscalItemScalarWhereInput
    data: XOR<NotaFiscalItemUpdateManyMutationInput, NotaFiscalItemUncheckedUpdateManyWithoutNotaFiscalInput>
  }

  export type MaquinaEstoqueCreateWithoutNotas_Fiscais_ItensInput = {
    Chassi: string
    Status?: string | null
    produto: ProdutoCreateNestedOneWithoutMaquinasEstoqueInput
    filial?: FilialCreateNestedOneWithoutMaquinasEstoqueInput
  }

  export type MaquinaEstoqueUncheckedCreateWithoutNotas_Fiscais_ItensInput = {
    Chassi: string
    produtoId: number
    filialId?: number | null
    Status?: string | null
  }

  export type MaquinaEstoqueCreateOrConnectWithoutNotas_Fiscais_ItensInput = {
    where: MaquinaEstoqueWhereUniqueInput
    create: XOR<MaquinaEstoqueCreateWithoutNotas_Fiscais_ItensInput, MaquinaEstoqueUncheckedCreateWithoutNotas_Fiscais_ItensInput>
  }

  export type NotasFiscalCabecalhoCreateWithoutItensInput = {
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filial?: FilialCreateNestedOneWithoutNotasFiscaisInput
    cliente?: ClienteCreateNestedOneWithoutNotasFiscaisInput
    vendedor?: VendedorCreateNestedOneWithoutNotasFiscaisInput
  }

  export type NotasFiscalCabecalhoUncheckedCreateWithoutItensInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filialId?: number | null
    clienteId?: number | null
    vendedorId?: number | null
  }

  export type NotasFiscalCabecalhoCreateOrConnectWithoutItensInput = {
    where: NotasFiscalCabecalhoWhereUniqueInput
    create: XOR<NotasFiscalCabecalhoCreateWithoutItensInput, NotasFiscalCabecalhoUncheckedCreateWithoutItensInput>
  }

  export type ProdutoCreateWithoutNotasFiscaisItensInput = {
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoUncheckedCreateWithoutNotasFiscaisItensInput = {
    id?: number
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoCreateOrConnectWithoutNotasFiscaisItensInput = {
    where: ProdutoWhereUniqueInput
    create: XOR<ProdutoCreateWithoutNotasFiscaisItensInput, ProdutoUncheckedCreateWithoutNotasFiscaisItensInput>
  }

  export type MaquinaEstoqueUpsertWithoutNotas_Fiscais_ItensInput = {
    update: XOR<MaquinaEstoqueUpdateWithoutNotas_Fiscais_ItensInput, MaquinaEstoqueUncheckedUpdateWithoutNotas_Fiscais_ItensInput>
    create: XOR<MaquinaEstoqueCreateWithoutNotas_Fiscais_ItensInput, MaquinaEstoqueUncheckedCreateWithoutNotas_Fiscais_ItensInput>
    where?: MaquinaEstoqueWhereInput
  }

  export type MaquinaEstoqueUpdateToOneWithWhereWithoutNotas_Fiscais_ItensInput = {
    where?: MaquinaEstoqueWhereInput
    data: XOR<MaquinaEstoqueUpdateWithoutNotas_Fiscais_ItensInput, MaquinaEstoqueUncheckedUpdateWithoutNotas_Fiscais_ItensInput>
  }

  export type MaquinaEstoqueUpdateWithoutNotas_Fiscais_ItensInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    Status?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: ProdutoUpdateOneRequiredWithoutMaquinasEstoqueNestedInput
    filial?: FilialUpdateOneWithoutMaquinasEstoqueNestedInput
  }

  export type MaquinaEstoqueUncheckedUpdateWithoutNotas_Fiscais_ItensInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    produtoId?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    Status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotasFiscalCabecalhoUpsertWithoutItensInput = {
    update: XOR<NotasFiscalCabecalhoUpdateWithoutItensInput, NotasFiscalCabecalhoUncheckedUpdateWithoutItensInput>
    create: XOR<NotasFiscalCabecalhoCreateWithoutItensInput, NotasFiscalCabecalhoUncheckedCreateWithoutItensInput>
    where?: NotasFiscalCabecalhoWhereInput
  }

  export type NotasFiscalCabecalhoUpdateToOneWithWhereWithoutItensInput = {
    where?: NotasFiscalCabecalhoWhereInput
    data: XOR<NotasFiscalCabecalhoUpdateWithoutItensInput, NotasFiscalCabecalhoUncheckedUpdateWithoutItensInput>
  }

  export type NotasFiscalCabecalhoUpdateWithoutItensInput = {
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filial?: FilialUpdateOneWithoutNotasFiscaisNestedInput
    cliente?: ClienteUpdateOneWithoutNotasFiscaisNestedInput
    vendedor?: VendedorUpdateOneWithoutNotasFiscaisNestedInput
  }

  export type NotasFiscalCabecalhoUncheckedUpdateWithoutItensInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ProdutoUpsertWithoutNotasFiscaisItensInput = {
    update: XOR<ProdutoUpdateWithoutNotasFiscaisItensInput, ProdutoUncheckedUpdateWithoutNotasFiscaisItensInput>
    create: XOR<ProdutoCreateWithoutNotasFiscaisItensInput, ProdutoUncheckedCreateWithoutNotasFiscaisItensInput>
    where?: ProdutoWhereInput
  }

  export type ProdutoUpdateToOneWithWhereWithoutNotasFiscaisItensInput = {
    where?: ProdutoWhereInput
    data: XOR<ProdutoUpdateWithoutNotasFiscaisItensInput, ProdutoUncheckedUpdateWithoutNotasFiscaisItensInput>
  }

  export type ProdutoUpdateWithoutNotasFiscaisItensInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUpdateManyWithoutProdutoBNestedInput
  }

  export type ProdutoUncheckedUpdateWithoutNotasFiscaisItensInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBNestedInput
  }

  export type FilialCreateWithoutRfvParameterSetsInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutRfvParameterSetsInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutRfvParameterSetsInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutRfvParameterSetsInput, FilialUncheckedCreateWithoutRfvParameterSetsInput>
  }

  export type RfvSegmentCreateWithoutParameterSetInput = {
    name: string
    rules: JsonNullValueInput | InputJsonValue
    priority?: number
  }

  export type RfvSegmentUncheckedCreateWithoutParameterSetInput = {
    id?: number
    name: string
    rules: JsonNullValueInput | InputJsonValue
    priority?: number
  }

  export type RfvSegmentCreateOrConnectWithoutParameterSetInput = {
    where: RfvSegmentWhereUniqueInput
    create: XOR<RfvSegmentCreateWithoutParameterSetInput, RfvSegmentUncheckedCreateWithoutParameterSetInput>
  }

  export type RfvSegmentCreateManyParameterSetInputEnvelope = {
    data: RfvSegmentCreateManyParameterSetInput | RfvSegmentCreateManyParameterSetInput[]
    skipDuplicates?: boolean
  }

  export type FilialUpsertWithoutRfvParameterSetsInput = {
    update: XOR<FilialUpdateWithoutRfvParameterSetsInput, FilialUncheckedUpdateWithoutRfvParameterSetsInput>
    create: XOR<FilialCreateWithoutRfvParameterSetsInput, FilialUncheckedCreateWithoutRfvParameterSetsInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutRfvParameterSetsInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutRfvParameterSetsInput, FilialUncheckedUpdateWithoutRfvParameterSetsInput>
  }

  export type FilialUpdateWithoutRfvParameterSetsInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutRfvParameterSetsInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type RfvSegmentUpsertWithWhereUniqueWithoutParameterSetInput = {
    where: RfvSegmentWhereUniqueInput
    update: XOR<RfvSegmentUpdateWithoutParameterSetInput, RfvSegmentUncheckedUpdateWithoutParameterSetInput>
    create: XOR<RfvSegmentCreateWithoutParameterSetInput, RfvSegmentUncheckedCreateWithoutParameterSetInput>
  }

  export type RfvSegmentUpdateWithWhereUniqueWithoutParameterSetInput = {
    where: RfvSegmentWhereUniqueInput
    data: XOR<RfvSegmentUpdateWithoutParameterSetInput, RfvSegmentUncheckedUpdateWithoutParameterSetInput>
  }

  export type RfvSegmentUpdateManyWithWhereWithoutParameterSetInput = {
    where: RfvSegmentScalarWhereInput
    data: XOR<RfvSegmentUpdateManyMutationInput, RfvSegmentUncheckedUpdateManyWithoutParameterSetInput>
  }

  export type RfvSegmentScalarWhereInput = {
    AND?: RfvSegmentScalarWhereInput | RfvSegmentScalarWhereInput[]
    OR?: RfvSegmentScalarWhereInput[]
    NOT?: RfvSegmentScalarWhereInput | RfvSegmentScalarWhereInput[]
    id?: IntFilter<"RfvSegment"> | number
    parameterSetId?: IntFilter<"RfvSegment"> | number
    name?: StringFilter<"RfvSegment"> | string
    rules?: JsonFilter<"RfvSegment">
    priority?: IntFilter<"RfvSegment"> | number
  }

  export type RfvParameterSetCreateWithoutSegmentsInput = {
    name: string
    strategy?: $Enums.RfvStrategy
    windowDays?: number
    weights: JsonNullValueInput | InputJsonValue
    ruleRecency: JsonNullValueInput | InputJsonValue
    ruleFrequency: JsonNullValueInput | InputJsonValue
    ruleValue: JsonNullValueInput | InputJsonValue
    effectiveFrom: Date | string
    effectiveTo?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calculationStrategy?: $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    filial?: FilialCreateNestedOneWithoutRfvParameterSetsInput
  }

  export type RfvParameterSetUncheckedCreateWithoutSegmentsInput = {
    id?: number
    filialId?: number | null
    name: string
    strategy?: $Enums.RfvStrategy
    windowDays?: number
    weights: JsonNullValueInput | InputJsonValue
    ruleRecency: JsonNullValueInput | InputJsonValue
    ruleFrequency: JsonNullValueInput | InputJsonValue
    ruleValue: JsonNullValueInput | InputJsonValue
    effectiveFrom: Date | string
    effectiveTo?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calculationStrategy?: $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type RfvParameterSetCreateOrConnectWithoutSegmentsInput = {
    where: RfvParameterSetWhereUniqueInput
    create: XOR<RfvParameterSetCreateWithoutSegmentsInput, RfvParameterSetUncheckedCreateWithoutSegmentsInput>
  }

  export type RfvParameterSetUpsertWithoutSegmentsInput = {
    update: XOR<RfvParameterSetUpdateWithoutSegmentsInput, RfvParameterSetUncheckedUpdateWithoutSegmentsInput>
    create: XOR<RfvParameterSetCreateWithoutSegmentsInput, RfvParameterSetUncheckedCreateWithoutSegmentsInput>
    where?: RfvParameterSetWhereInput
  }

  export type RfvParameterSetUpdateToOneWithWhereWithoutSegmentsInput = {
    where?: RfvParameterSetWhereInput
    data: XOR<RfvParameterSetUpdateWithoutSegmentsInput, RfvParameterSetUncheckedUpdateWithoutSegmentsInput>
  }

  export type RfvParameterSetUpdateWithoutSegmentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    filial?: FilialUpdateOneWithoutRfvParameterSetsNestedInput
  }

  export type RfvParameterSetUncheckedUpdateWithoutSegmentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type FilialCreateWithoutReceitasPeriodoInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutReceitasPeriodoInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutReceitasPeriodoInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutReceitasPeriodoInput, FilialUncheckedCreateWithoutReceitasPeriodoInput>
  }

  export type FilialUpsertWithoutReceitasPeriodoInput = {
    update: XOR<FilialUpdateWithoutReceitasPeriodoInput, FilialUncheckedUpdateWithoutReceitasPeriodoInput>
    create: XOR<FilialCreateWithoutReceitasPeriodoInput, FilialUncheckedCreateWithoutReceitasPeriodoInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutReceitasPeriodoInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutReceitasPeriodoInput, FilialUncheckedUpdateWithoutReceitasPeriodoInput>
  }

  export type FilialUpdateWithoutReceitasPeriodoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutReceitasPeriodoInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutReceitasTipoProdutoInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutReceitasTipoProdutoInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutReceitasTipoProdutoInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutReceitasTipoProdutoInput, FilialUncheckedCreateWithoutReceitasTipoProdutoInput>
  }

  export type ProdutoCreateWithoutReceitasTipoInput = {
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoUncheckedCreateWithoutReceitasTipoInput = {
    id?: number
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemUncheckedCreateNestedManyWithoutProdutoInput
    receitasModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoCreateOrConnectWithoutReceitasTipoInput = {
    where: ProdutoWhereUniqueInput
    create: XOR<ProdutoCreateWithoutReceitasTipoInput, ProdutoUncheckedCreateWithoutReceitasTipoInput>
  }

  export type FilialUpsertWithoutReceitasTipoProdutoInput = {
    update: XOR<FilialUpdateWithoutReceitasTipoProdutoInput, FilialUncheckedUpdateWithoutReceitasTipoProdutoInput>
    create: XOR<FilialCreateWithoutReceitasTipoProdutoInput, FilialUncheckedCreateWithoutReceitasTipoProdutoInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutReceitasTipoProdutoInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutReceitasTipoProdutoInput, FilialUncheckedUpdateWithoutReceitasTipoProdutoInput>
  }

  export type FilialUpdateWithoutReceitasTipoProdutoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutReceitasTipoProdutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type ProdutoUpsertWithoutReceitasTipoInput = {
    update: XOR<ProdutoUpdateWithoutReceitasTipoInput, ProdutoUncheckedUpdateWithoutReceitasTipoInput>
    create: XOR<ProdutoCreateWithoutReceitasTipoInput, ProdutoUncheckedCreateWithoutReceitasTipoInput>
    where?: ProdutoWhereInput
  }

  export type ProdutoUpdateToOneWithWhereWithoutReceitasTipoInput = {
    where?: ProdutoWhereInput
    data: XOR<ProdutoUpdateWithoutReceitasTipoInput, ProdutoUncheckedUpdateWithoutReceitasTipoInput>
  }

  export type ProdutoUpdateWithoutReceitasTipoInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUpdateManyWithoutProdutoBNestedInput
  }

  export type ProdutoUncheckedUpdateWithoutReceitasTipoInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUncheckedUpdateManyWithoutProdutoNestedInput
    receitasModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBNestedInput
  }

  export type FilialCreateWithoutReceitasProdutoModeloInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutReceitasProdutoModeloInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutReceitasProdutoModeloInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutReceitasProdutoModeloInput, FilialUncheckedCreateWithoutReceitasProdutoModeloInput>
  }

  export type ProdutoCreateWithoutReceitasModeloInput = {
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoUncheckedCreateWithoutReceitasModeloInput = {
    id?: number
    descricao: string
    tipo: string
    preco: Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutProdutoInput
    notasFiscaisItens?: NotaFiscalItemUncheckedCreateNestedManyWithoutProdutoInput
    receitasTipo?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutProdutoInput
    associacoesA?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoAInput
    associacoesB?: AssociacaoProdutoUncheckedCreateNestedManyWithoutProdutoBInput
  }

  export type ProdutoCreateOrConnectWithoutReceitasModeloInput = {
    where: ProdutoWhereUniqueInput
    create: XOR<ProdutoCreateWithoutReceitasModeloInput, ProdutoUncheckedCreateWithoutReceitasModeloInput>
  }

  export type FilialUpsertWithoutReceitasProdutoModeloInput = {
    update: XOR<FilialUpdateWithoutReceitasProdutoModeloInput, FilialUncheckedUpdateWithoutReceitasProdutoModeloInput>
    create: XOR<FilialCreateWithoutReceitasProdutoModeloInput, FilialUncheckedCreateWithoutReceitasProdutoModeloInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutReceitasProdutoModeloInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutReceitasProdutoModeloInput, FilialUncheckedUpdateWithoutReceitasProdutoModeloInput>
  }

  export type FilialUpdateWithoutReceitasProdutoModeloInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutReceitasProdutoModeloInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type ProdutoUpsertWithoutReceitasModeloInput = {
    update: XOR<ProdutoUpdateWithoutReceitasModeloInput, ProdutoUncheckedUpdateWithoutReceitasModeloInput>
    create: XOR<ProdutoCreateWithoutReceitasModeloInput, ProdutoUncheckedCreateWithoutReceitasModeloInput>
    where?: ProdutoWhereInput
  }

  export type ProdutoUpdateToOneWithWhereWithoutReceitasModeloInput = {
    where?: ProdutoWhereInput
    data: XOR<ProdutoUpdateWithoutReceitasModeloInput, ProdutoUncheckedUpdateWithoutReceitasModeloInput>
  }

  export type ProdutoUpdateWithoutReceitasModeloInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUpdateManyWithoutProdutoBNestedInput
  }

  export type ProdutoUncheckedUpdateWithoutReceitasModeloInput = {
    id?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    tipo?: StringFieldUpdateOperationsInput | string
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutProdutoNestedInput
    notasFiscaisItens?: NotaFiscalItemUncheckedUpdateManyWithoutProdutoNestedInput
    receitasTipo?: ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoNestedInput
    associacoesA?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoANestedInput
    associacoesB?: AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBNestedInput
  }

  export type FilialCreateWithoutCrescimentoVendasInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutCrescimentoVendasInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutCrescimentoVendasInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutCrescimentoVendasInput, FilialUncheckedCreateWithoutCrescimentoVendasInput>
  }

  export type FilialUpsertWithoutCrescimentoVendasInput = {
    update: XOR<FilialUpdateWithoutCrescimentoVendasInput, FilialUncheckedUpdateWithoutCrescimentoVendasInput>
    create: XOR<FilialCreateWithoutCrescimentoVendasInput, FilialUncheckedCreateWithoutCrescimentoVendasInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutCrescimentoVendasInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutCrescimentoVendasInput, FilialUncheckedUpdateWithoutCrescimentoVendasInput>
  }

  export type FilialUpdateWithoutCrescimentoVendasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutCrescimentoVendasInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutTicketsMediosInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutTicketsMediosInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutTicketsMediosInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutTicketsMediosInput, FilialUncheckedCreateWithoutTicketsMediosInput>
  }

  export type FilialUpsertWithoutTicketsMediosInput = {
    update: XOR<FilialUpdateWithoutTicketsMediosInput, FilialUncheckedUpdateWithoutTicketsMediosInput>
    create: XOR<FilialCreateWithoutTicketsMediosInput, FilialUncheckedCreateWithoutTicketsMediosInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutTicketsMediosInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutTicketsMediosInput, FilialUncheckedUpdateWithoutTicketsMediosInput>
  }

  export type FilialUpdateWithoutTicketsMediosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutTicketsMediosInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutItensPorNFInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutItensPorNFInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutItensPorNFInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutItensPorNFInput, FilialUncheckedCreateWithoutItensPorNFInput>
  }

  export type FilialUpsertWithoutItensPorNFInput = {
    update: XOR<FilialUpdateWithoutItensPorNFInput, FilialUncheckedUpdateWithoutItensPorNFInput>
    create: XOR<FilialCreateWithoutItensPorNFInput, FilialUncheckedCreateWithoutItensPorNFInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutItensPorNFInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutItensPorNFInput, FilialUncheckedUpdateWithoutItensPorNFInput>
  }

  export type FilialUpdateWithoutItensPorNFInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutItensPorNFInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutSazonalidadesInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutSazonalidadesInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutSazonalidadesInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutSazonalidadesInput, FilialUncheckedCreateWithoutSazonalidadesInput>
  }

  export type FilialUpsertWithoutSazonalidadesInput = {
    update: XOR<FilialUpdateWithoutSazonalidadesInput, FilialUncheckedUpdateWithoutSazonalidadesInput>
    create: XOR<FilialCreateWithoutSazonalidadesInput, FilialUncheckedCreateWithoutSazonalidadesInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutSazonalidadesInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutSazonalidadesInput, FilialUncheckedUpdateWithoutSazonalidadesInput>
  }

  export type FilialUpdateWithoutSazonalidadesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutSazonalidadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutReceitasLocalizacaoInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutReceitasLocalizacaoInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutReceitasLocalizacaoInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutReceitasLocalizacaoInput, FilialUncheckedCreateWithoutReceitasLocalizacaoInput>
  }

  export type FilialUpsertWithoutReceitasLocalizacaoInput = {
    update: XOR<FilialUpdateWithoutReceitasLocalizacaoInput, FilialUncheckedUpdateWithoutReceitasLocalizacaoInput>
    create: XOR<FilialCreateWithoutReceitasLocalizacaoInput, FilialUncheckedCreateWithoutReceitasLocalizacaoInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutReceitasLocalizacaoInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutReceitasLocalizacaoInput, FilialUncheckedUpdateWithoutReceitasLocalizacaoInput>
  }

  export type FilialUpdateWithoutReceitasLocalizacaoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutReceitasLocalizacaoInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutReceitasVendedorInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutReceitasVendedorInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutReceitasVendedorInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutReceitasVendedorInput, FilialUncheckedCreateWithoutReceitasVendedorInput>
  }

  export type VendedorCreateWithoutReceitasVendedorInput = {
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresCreateNestedManyWithoutVendedorInput
    filial?: FilialCreateNestedOneWithoutVendedoresInput
  }

  export type VendedorUncheckedCreateWithoutReceitasVendedorInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorUncheckedCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorCreateOrConnectWithoutReceitasVendedorInput = {
    where: VendedorWhereUniqueInput
    create: XOR<VendedorCreateWithoutReceitasVendedorInput, VendedorUncheckedCreateWithoutReceitasVendedorInput>
  }

  export type FilialUpsertWithoutReceitasVendedorInput = {
    update: XOR<FilialUpdateWithoutReceitasVendedorInput, FilialUncheckedUpdateWithoutReceitasVendedorInput>
    create: XOR<FilialCreateWithoutReceitasVendedorInput, FilialUncheckedCreateWithoutReceitasVendedorInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutReceitasVendedorInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutReceitasVendedorInput, FilialUncheckedUpdateWithoutReceitasVendedorInput>
  }

  export type FilialUpdateWithoutReceitasVendedorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutReceitasVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type VendedorUpsertWithoutReceitasVendedorInput = {
    update: XOR<VendedorUpdateWithoutReceitasVendedorInput, VendedorUncheckedUpdateWithoutReceitasVendedorInput>
    create: XOR<VendedorCreateWithoutReceitasVendedorInput, VendedorUncheckedCreateWithoutReceitasVendedorInput>
    where?: VendedorWhereInput
  }

  export type VendedorUpdateToOneWithWhereWithoutReceitasVendedorInput = {
    where?: VendedorWhereInput
    data: XOR<VendedorUpdateWithoutReceitasVendedorInput, VendedorUncheckedUpdateWithoutReceitasVendedorInput>
  }

  export type VendedorUpdateWithoutReceitasVendedorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUpdateManyWithoutVendedorNestedInput
    filial?: FilialUpdateOneWithoutVendedoresNestedInput
  }

  export type VendedorUncheckedUpdateWithoutReceitasVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type FilialCreateWithoutEstatisticasNotasFiscaisInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutEstatisticasNotasFiscaisInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutEstatisticasNotasFiscaisInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutEstatisticasNotasFiscaisInput, FilialUncheckedCreateWithoutEstatisticasNotasFiscaisInput>
  }

  export type FilialUpsertWithoutEstatisticasNotasFiscaisInput = {
    update: XOR<FilialUpdateWithoutEstatisticasNotasFiscaisInput, FilialUncheckedUpdateWithoutEstatisticasNotasFiscaisInput>
    create: XOR<FilialCreateWithoutEstatisticasNotasFiscaisInput, FilialUncheckedCreateWithoutEstatisticasNotasFiscaisInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutEstatisticasNotasFiscaisInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutEstatisticasNotasFiscaisInput, FilialUncheckedUpdateWithoutEstatisticasNotasFiscaisInput>
  }

  export type FilialUpdateWithoutEstatisticasNotasFiscaisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutEstatisticasNotasFiscaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutReceitasVendedorDetalhadasInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutReceitasVendedorDetalhadasInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutReceitasVendedorDetalhadasInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutReceitasVendedorDetalhadasInput, FilialUncheckedCreateWithoutReceitasVendedorDetalhadasInput>
  }

  export type VendedorCreateWithoutReceitasDetalhadasInput = {
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresCreateNestedManyWithoutVendedorInput
    filial?: FilialCreateNestedOneWithoutVendedoresInput
  }

  export type VendedorUncheckedCreateWithoutReceitasDetalhadasInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorUncheckedCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorCreateOrConnectWithoutReceitasDetalhadasInput = {
    where: VendedorWhereUniqueInput
    create: XOR<VendedorCreateWithoutReceitasDetalhadasInput, VendedorUncheckedCreateWithoutReceitasDetalhadasInput>
  }

  export type FilialUpsertWithoutReceitasVendedorDetalhadasInput = {
    update: XOR<FilialUpdateWithoutReceitasVendedorDetalhadasInput, FilialUncheckedUpdateWithoutReceitasVendedorDetalhadasInput>
    create: XOR<FilialCreateWithoutReceitasVendedorDetalhadasInput, FilialUncheckedCreateWithoutReceitasVendedorDetalhadasInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutReceitasVendedorDetalhadasInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutReceitasVendedorDetalhadasInput, FilialUncheckedUpdateWithoutReceitasVendedorDetalhadasInput>
  }

  export type FilialUpdateWithoutReceitasVendedorDetalhadasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutReceitasVendedorDetalhadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type VendedorUpsertWithoutReceitasDetalhadasInput = {
    update: XOR<VendedorUpdateWithoutReceitasDetalhadasInput, VendedorUncheckedUpdateWithoutReceitasDetalhadasInput>
    create: XOR<VendedorCreateWithoutReceitasDetalhadasInput, VendedorUncheckedCreateWithoutReceitasDetalhadasInput>
    where?: VendedorWhereInput
  }

  export type VendedorUpdateToOneWithWhereWithoutReceitasDetalhadasInput = {
    where?: VendedorWhereInput
    data: XOR<VendedorUpdateWithoutReceitasDetalhadasInput, VendedorUncheckedUpdateWithoutReceitasDetalhadasInput>
  }

  export type VendedorUpdateWithoutReceitasDetalhadasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUpdateManyWithoutVendedorNestedInput
    filial?: FilialUpdateOneWithoutVendedoresNestedInput
  }

  export type VendedorUncheckedUpdateWithoutReceitasDetalhadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type FilialCreateWithoutTicketsMediosVendedorInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutTicketsMediosVendedorInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutTicketsMediosVendedorInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutTicketsMediosVendedorInput, FilialUncheckedCreateWithoutTicketsMediosVendedorInput>
  }

  export type VendedorCreateWithoutTicketsMediosInput = {
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresCreateNestedManyWithoutVendedorInput
    filial?: FilialCreateNestedOneWithoutVendedoresInput
  }

  export type VendedorUncheckedCreateWithoutTicketsMediosInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorUncheckedCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorCreateOrConnectWithoutTicketsMediosInput = {
    where: VendedorWhereUniqueInput
    create: XOR<VendedorCreateWithoutTicketsMediosInput, VendedorUncheckedCreateWithoutTicketsMediosInput>
  }

  export type FilialUpsertWithoutTicketsMediosVendedorInput = {
    update: XOR<FilialUpdateWithoutTicketsMediosVendedorInput, FilialUncheckedUpdateWithoutTicketsMediosVendedorInput>
    create: XOR<FilialCreateWithoutTicketsMediosVendedorInput, FilialUncheckedCreateWithoutTicketsMediosVendedorInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutTicketsMediosVendedorInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutTicketsMediosVendedorInput, FilialUncheckedUpdateWithoutTicketsMediosVendedorInput>
  }

  export type FilialUpdateWithoutTicketsMediosVendedorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutTicketsMediosVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type VendedorUpsertWithoutTicketsMediosInput = {
    update: XOR<VendedorUpdateWithoutTicketsMediosInput, VendedorUncheckedUpdateWithoutTicketsMediosInput>
    create: XOR<VendedorCreateWithoutTicketsMediosInput, VendedorUncheckedCreateWithoutTicketsMediosInput>
    where?: VendedorWhereInput
  }

  export type VendedorUpdateToOneWithWhereWithoutTicketsMediosInput = {
    where?: VendedorWhereInput
    data: XOR<VendedorUpdateWithoutTicketsMediosInput, VendedorUncheckedUpdateWithoutTicketsMediosInput>
  }

  export type VendedorUpdateWithoutTicketsMediosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUpdateManyWithoutVendedorNestedInput
    filial?: FilialUpdateOneWithoutVendedoresNestedInput
  }

  export type VendedorUncheckedUpdateWithoutTicketsMediosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type FilialCreateWithoutMixVendedoresInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutMixVendedoresInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutMixVendedoresInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutMixVendedoresInput, FilialUncheckedCreateWithoutMixVendedoresInput>
  }

  export type VendedorCreateWithoutMixVendasInput = {
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresCreateNestedManyWithoutVendedorInput
    filial?: FilialCreateNestedOneWithoutVendedoresInput
  }

  export type VendedorUncheckedCreateWithoutMixVendasInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorCreateOrConnectWithoutMixVendasInput = {
    where: VendedorWhereUniqueInput
    create: XOR<VendedorCreateWithoutMixVendasInput, VendedorUncheckedCreateWithoutMixVendasInput>
  }

  export type FilialUpsertWithoutMixVendedoresInput = {
    update: XOR<FilialUpdateWithoutMixVendedoresInput, FilialUncheckedUpdateWithoutMixVendedoresInput>
    create: XOR<FilialCreateWithoutMixVendedoresInput, FilialUncheckedCreateWithoutMixVendedoresInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutMixVendedoresInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutMixVendedoresInput, FilialUncheckedUpdateWithoutMixVendedoresInput>
  }

  export type FilialUpdateWithoutMixVendedoresInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutMixVendedoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type VendedorUpsertWithoutMixVendasInput = {
    update: XOR<VendedorUpdateWithoutMixVendasInput, VendedorUncheckedUpdateWithoutMixVendasInput>
    create: XOR<VendedorCreateWithoutMixVendasInput, VendedorUncheckedCreateWithoutMixVendasInput>
    where?: VendedorWhereInput
  }

  export type VendedorUpdateToOneWithWhereWithoutMixVendasInput = {
    where?: VendedorWhereInput
    data: XOR<VendedorUpdateWithoutMixVendasInput, VendedorUncheckedUpdateWithoutMixVendasInput>
  }

  export type VendedorUpdateWithoutMixVendasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUpdateManyWithoutVendedorNestedInput
    filial?: FilialUpdateOneWithoutVendedoresNestedInput
  }

  export type VendedorUncheckedUpdateWithoutMixVendasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type FilialCreateWithoutCoberturaCarteirasInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutCoberturaCarteirasInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutCoberturaCarteirasInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutCoberturaCarteirasInput, FilialUncheckedCreateWithoutCoberturaCarteirasInput>
  }

  export type VendedorCreateWithoutCoberturaCarteiraInput = {
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresCreateNestedManyWithoutVendedorInput
    filial?: FilialCreateNestedOneWithoutVendedoresInput
  }

  export type VendedorUncheckedCreateWithoutCoberturaCarteiraInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorUncheckedCreateNestedManyWithoutVendedorInput
    rankings?: RankingVendedoresUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorCreateOrConnectWithoutCoberturaCarteiraInput = {
    where: VendedorWhereUniqueInput
    create: XOR<VendedorCreateWithoutCoberturaCarteiraInput, VendedorUncheckedCreateWithoutCoberturaCarteiraInput>
  }

  export type FilialUpsertWithoutCoberturaCarteirasInput = {
    update: XOR<FilialUpdateWithoutCoberturaCarteirasInput, FilialUncheckedUpdateWithoutCoberturaCarteirasInput>
    create: XOR<FilialCreateWithoutCoberturaCarteirasInput, FilialUncheckedCreateWithoutCoberturaCarteirasInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutCoberturaCarteirasInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutCoberturaCarteirasInput, FilialUncheckedUpdateWithoutCoberturaCarteirasInput>
  }

  export type FilialUpdateWithoutCoberturaCarteirasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutCoberturaCarteirasInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type VendedorUpsertWithoutCoberturaCarteiraInput = {
    update: XOR<VendedorUpdateWithoutCoberturaCarteiraInput, VendedorUncheckedUpdateWithoutCoberturaCarteiraInput>
    create: XOR<VendedorCreateWithoutCoberturaCarteiraInput, VendedorUncheckedCreateWithoutCoberturaCarteiraInput>
    where?: VendedorWhereInput
  }

  export type VendedorUpdateToOneWithWhereWithoutCoberturaCarteiraInput = {
    where?: VendedorWhereInput
    data: XOR<VendedorUpdateWithoutCoberturaCarteiraInput, VendedorUncheckedUpdateWithoutCoberturaCarteiraInput>
  }

  export type VendedorUpdateWithoutCoberturaCarteiraInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUpdateManyWithoutVendedorNestedInput
    filial?: FilialUpdateOneWithoutVendedoresNestedInput
  }

  export type VendedorUncheckedUpdateWithoutCoberturaCarteiraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type FilialCreateWithoutRankingVendedoresInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutRankingVendedoresInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutRankingVendedoresInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutRankingVendedoresInput, FilialUncheckedCreateWithoutRankingVendedoresInput>
  }

  export type VendedorCreateWithoutRankingsInput = {
    nome: string
    cpf: string
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraCreateNestedManyWithoutVendedorInput
    filial?: FilialCreateNestedOneWithoutVendedoresInput
  }

  export type VendedorUncheckedCreateWithoutRankingsInput = {
    id?: number
    nome: string
    cpf: string
    filialId?: number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutVendedorInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutVendedorInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutVendedorInput
    ticketsMedios?: TicketMedioVendedorUncheckedCreateNestedManyWithoutVendedorInput
    mixVendas?: MixVendedorUncheckedCreateNestedManyWithoutVendedorInput
    coberturaCarteira?: CoberturaCarteiraUncheckedCreateNestedManyWithoutVendedorInput
  }

  export type VendedorCreateOrConnectWithoutRankingsInput = {
    where: VendedorWhereUniqueInput
    create: XOR<VendedorCreateWithoutRankingsInput, VendedorUncheckedCreateWithoutRankingsInput>
  }

  export type FilialUpsertWithoutRankingVendedoresInput = {
    update: XOR<FilialUpdateWithoutRankingVendedoresInput, FilialUncheckedUpdateWithoutRankingVendedoresInput>
    create: XOR<FilialCreateWithoutRankingVendedoresInput, FilialUncheckedCreateWithoutRankingVendedoresInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutRankingVendedoresInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutRankingVendedoresInput, FilialUncheckedUpdateWithoutRankingVendedoresInput>
  }

  export type FilialUpdateWithoutRankingVendedoresInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutRankingVendedoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type VendedorUpsertWithoutRankingsInput = {
    update: XOR<VendedorUpdateWithoutRankingsInput, VendedorUncheckedUpdateWithoutRankingsInput>
    create: XOR<VendedorCreateWithoutRankingsInput, VendedorUncheckedCreateWithoutRankingsInput>
    where?: VendedorWhereInput
  }

  export type VendedorUpdateToOneWithWhereWithoutRankingsInput = {
    where?: VendedorWhereInput
    data: XOR<VendedorUpdateWithoutRankingsInput, VendedorUncheckedUpdateWithoutRankingsInput>
  }

  export type VendedorUpdateWithoutRankingsInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUpdateManyWithoutVendedorNestedInput
    filial?: FilialUpdateOneWithoutVendedoresNestedInput
  }

  export type VendedorUncheckedUpdateWithoutRankingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type FilialCreateWithoutReceitasFilialInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutReceitasFilialInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutReceitasFilialInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutReceitasFilialInput, FilialUncheckedCreateWithoutReceitasFilialInput>
  }

  export type FilialUpsertWithoutReceitasFilialInput = {
    update: XOR<FilialUpdateWithoutReceitasFilialInput, FilialUncheckedUpdateWithoutReceitasFilialInput>
    create: XOR<FilialCreateWithoutReceitasFilialInput, FilialUncheckedCreateWithoutReceitasFilialInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutReceitasFilialInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutReceitasFilialInput, FilialUncheckedUpdateWithoutReceitasFilialInput>
  }

  export type FilialUpdateWithoutReceitasFilialInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutReceitasFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutMixFiliaisInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutMixFiliaisInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutMixFiliaisInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutMixFiliaisInput, FilialUncheckedCreateWithoutMixFiliaisInput>
  }

  export type FilialUpsertWithoutMixFiliaisInput = {
    update: XOR<FilialUpdateWithoutMixFiliaisInput, FilialUncheckedUpdateWithoutMixFiliaisInput>
    create: XOR<FilialCreateWithoutMixFiliaisInput, FilialUncheckedCreateWithoutMixFiliaisInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutMixFiliaisInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutMixFiliaisInput, FilialUncheckedUpdateWithoutMixFiliaisInput>
  }

  export type FilialUpdateWithoutMixFiliaisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutMixFiliaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutParticipacaoReceitaInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutParticipacaoReceitaInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutParticipacaoReceitaInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutParticipacaoReceitaInput, FilialUncheckedCreateWithoutParticipacaoReceitaInput>
  }

  export type FilialUpsertWithoutParticipacaoReceitaInput = {
    update: XOR<FilialUpdateWithoutParticipacaoReceitaInput, FilialUncheckedUpdateWithoutParticipacaoReceitaInput>
    create: XOR<FilialCreateWithoutParticipacaoReceitaInput, FilialUncheckedCreateWithoutParticipacaoReceitaInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutParticipacaoReceitaInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutParticipacaoReceitaInput, FilialUncheckedUpdateWithoutParticipacaoReceitaInput>
  }

  export type FilialUpdateWithoutParticipacaoReceitaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutParticipacaoReceitaInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialCreateWithoutReceitasRegioesInput = {
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    empresa: EmpresaCreateNestedOneWithoutFiliaisInput
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutFilialInput
    vendedores?: VendedorCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialCreateNestedManyWithoutFilialInput
  }

  export type FilialUncheckedCreateWithoutReceitasRegioesInput = {
    id?: number
    empresaId: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutFilialInput
    vendedores?: VendedorUncheckedCreateNestedManyWithoutFilialInput
    rfvParameterSets?: RfvParameterSetUncheckedCreateNestedManyWithoutFilialInput
    maquinasEstoque?: MaquinaEstoqueUncheckedCreateNestedManyWithoutFilialInput
    receitasPeriodo?: ReceitaPeriodoUncheckedCreateNestedManyWithoutFilialInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedCreateNestedManyWithoutFilialInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedCreateNestedManyWithoutFilialInput
    crescimentoVendas?: CrescimentoVendasUncheckedCreateNestedManyWithoutFilialInput
    ticketsMedios?: TicketMedioUncheckedCreateNestedManyWithoutFilialInput
    itensPorNF?: ItensPorNFUncheckedCreateNestedManyWithoutFilialInput
    sazonalidades?: SazonalidadeUncheckedCreateNestedManyWithoutFilialInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedor?: ReceitaVendedorUncheckedCreateNestedManyWithoutFilialInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedCreateNestedManyWithoutFilialInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedCreateNestedManyWithoutFilialInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedCreateNestedManyWithoutFilialInput
    mixVendedores?: MixVendedorUncheckedCreateNestedManyWithoutFilialInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedCreateNestedManyWithoutFilialInput
    rankingVendedores?: RankingVendedoresUncheckedCreateNestedManyWithoutFilialInput
    receitasFilial?: ReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
    mixFiliais?: MixFilialUncheckedCreateNestedManyWithoutFilialInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedCreateNestedManyWithoutFilialInput
  }

  export type FilialCreateOrConnectWithoutReceitasRegioesInput = {
    where: FilialWhereUniqueInput
    create: XOR<FilialCreateWithoutReceitasRegioesInput, FilialUncheckedCreateWithoutReceitasRegioesInput>
  }

  export type FilialUpsertWithoutReceitasRegioesInput = {
    update: XOR<FilialUpdateWithoutReceitasRegioesInput, FilialUncheckedUpdateWithoutReceitasRegioesInput>
    create: XOR<FilialCreateWithoutReceitasRegioesInput, FilialUncheckedCreateWithoutReceitasRegioesInput>
    where?: FilialWhereInput
  }

  export type FilialUpdateToOneWithWhereWithoutReceitasRegioesInput = {
    where?: FilialWhereInput
    data: XOR<FilialUpdateWithoutReceitasRegioesInput, FilialUncheckedUpdateWithoutReceitasRegioesInput>
  }

  export type FilialUpdateWithoutReceitasRegioesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    empresa?: EmpresaUpdateOneRequiredWithoutFiliaisNestedInput
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutReceitasRegioesInput = {
    id?: IntFieldUpdateOperationsInput | number
    empresaId?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type EmpresaCreateWithoutConfiguracaoInatividadeInput = {
    razaoSocial: string
    nomeFantasia?: string | null
    cnpjMatriz: string
    inscricaoEstadual?: string | null
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    email?: string | null
    ativo?: boolean
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    filiais?: FilialCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaUncheckedCreateWithoutConfiguracaoInatividadeInput = {
    id?: number
    razaoSocial: string
    nomeFantasia?: string | null
    cnpjMatriz: string
    inscricaoEstadual?: string | null
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    email?: string | null
    ativo?: boolean
    dataCriacao?: Date | string
    dataAtualizacao?: Date | string
    filiais?: FilialUncheckedCreateNestedManyWithoutEmpresaInput
  }

  export type EmpresaCreateOrConnectWithoutConfiguracaoInatividadeInput = {
    where: EmpresaWhereUniqueInput
    create: XOR<EmpresaCreateWithoutConfiguracaoInatividadeInput, EmpresaUncheckedCreateWithoutConfiguracaoInatividadeInput>
  }

  export type EmpresaUpsertWithoutConfiguracaoInatividadeInput = {
    update: XOR<EmpresaUpdateWithoutConfiguracaoInatividadeInput, EmpresaUncheckedUpdateWithoutConfiguracaoInatividadeInput>
    create: XOR<EmpresaCreateWithoutConfiguracaoInatividadeInput, EmpresaUncheckedCreateWithoutConfiguracaoInatividadeInput>
    where?: EmpresaWhereInput
  }

  export type EmpresaUpdateToOneWithWhereWithoutConfiguracaoInatividadeInput = {
    where?: EmpresaWhereInput
    data: XOR<EmpresaUpdateWithoutConfiguracaoInatividadeInput, EmpresaUncheckedUpdateWithoutConfiguracaoInatividadeInput>
  }

  export type EmpresaUpdateWithoutConfiguracaoInatividadeInput = {
    razaoSocial?: StringFieldUpdateOperationsInput | string
    nomeFantasia?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjMatriz?: StringFieldUpdateOperationsInput | string
    inscricaoEstadual?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: FilialUpdateManyWithoutEmpresaNestedInput
  }

  export type EmpresaUncheckedUpdateWithoutConfiguracaoInatividadeInput = {
    id?: IntFieldUpdateOperationsInput | number
    razaoSocial?: StringFieldUpdateOperationsInput | string
    nomeFantasia?: NullableStringFieldUpdateOperationsInput | string | null
    cnpjMatriz?: StringFieldUpdateOperationsInput | string
    inscricaoEstadual?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    ativo?: BoolFieldUpdateOperationsInput | boolean
    dataCriacao?: DateTimeFieldUpdateOperationsInput | Date | string
    dataAtualizacao?: DateTimeFieldUpdateOperationsInput | Date | string
    filiais?: FilialUncheckedUpdateManyWithoutEmpresaNestedInput
  }

  export type ClienteCreateWithoutRfvTipoNegocioInput = {
    nome: string
    cpfCnpj: string
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    notasFiscais?: NotasFiscalCabecalhoCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateWithoutRfvTipoNegocioInput = {
    id?: number
    nome: string
    cpfCnpj: string
    cidade?: string | null
    estado?: string | null
    logradouro?: string | null
    numero?: string | null
    bairro?: string | null
    cep?: string | null
    telefone?: string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteCreateOrConnectWithoutRfvTipoNegocioInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutRfvTipoNegocioInput, ClienteUncheckedCreateWithoutRfvTipoNegocioInput>
  }

  export type ClienteUpsertWithoutRfvTipoNegocioInput = {
    update: XOR<ClienteUpdateWithoutRfvTipoNegocioInput, ClienteUncheckedUpdateWithoutRfvTipoNegocioInput>
    create: XOR<ClienteCreateWithoutRfvTipoNegocioInput, ClienteUncheckedCreateWithoutRfvTipoNegocioInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutRfvTipoNegocioInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutRfvTipoNegocioInput, ClienteUncheckedUpdateWithoutRfvTipoNegocioInput>
  }

  export type ClienteUpdateWithoutRfvTipoNegocioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpfCnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateWithoutRfvTipoNegocioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpfCnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type FilialCreateManyEmpresaInput = {
    id?: number
    nome: string
    cnpj: string
    cidade?: string | null
    estado?: string | null
  }

  export type FilialUpdateWithoutEmpresaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateWithoutEmpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialNestedInput
    vendedores?: VendedorUncheckedUpdateManyWithoutFilialNestedInput
    rfvParameterSets?: RfvParameterSetUncheckedUpdateManyWithoutFilialNestedInput
    maquinasEstoque?: MaquinaEstoqueUncheckedUpdateManyWithoutFilialNestedInput
    receitasPeriodo?: ReceitaPeriodoUncheckedUpdateManyWithoutFilialNestedInput
    receitasTipoProduto?: ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialNestedInput
    receitasProdutoModelo?: ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialNestedInput
    crescimentoVendas?: CrescimentoVendasUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMedios?: TicketMedioUncheckedUpdateManyWithoutFilialNestedInput
    itensPorNF?: ItensPorNFUncheckedUpdateManyWithoutFilialNestedInput
    sazonalidades?: SazonalidadeUncheckedUpdateManyWithoutFilialNestedInput
    receitasLocalizacao?: ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutFilialNestedInput
    estatisticasNotasFiscais?: EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialNestedInput
    receitasVendedorDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialNestedInput
    ticketsMediosVendedor?: TicketMedioVendedorUncheckedUpdateManyWithoutFilialNestedInput
    mixVendedores?: MixVendedorUncheckedUpdateManyWithoutFilialNestedInput
    coberturaCarteiras?: CoberturaCarteiraUncheckedUpdateManyWithoutFilialNestedInput
    rankingVendedores?: RankingVendedoresUncheckedUpdateManyWithoutFilialNestedInput
    receitasFilial?: ReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    mixFiliais?: MixFilialUncheckedUpdateManyWithoutFilialNestedInput
    participacaoReceita?: ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialNestedInput
    receitasRegioes?: ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialNestedInput
  }

  export type FilialUncheckedUpdateManyWithoutEmpresaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cnpj?: StringFieldUpdateOperationsInput | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotasFiscalCabecalhoCreateManyClienteInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filialId?: number | null
    vendedorId?: number | null
  }

  export type RFVTipoNegocioCreateManyClienteInput = {
    id?: number
    tipoNegocio: string
    dataAnalise: Date | string
    periodoAnalise: string
    recencia: number
    frequencia: number
    valorMonetario: Decimal | DecimalJsLike | number | string
    scoreRecencia: number
    scoreFrequencia: number
    scoreValor: number
    scoreRFV: Decimal | DecimalJsLike | number | string
    segmentoRFV: string
    rankingAutomatico?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotasFiscalCabecalhoUpdateWithoutClienteInput = {
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filial?: FilialUpdateOneWithoutNotasFiscaisNestedInput
    vendedor?: VendedorUpdateOneWithoutNotasFiscaisNestedInput
    itens?: NotaFiscalItemUpdateManyWithoutNotaFiscalNestedInput
  }

  export type NotasFiscalCabecalhoUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: NullableIntFieldUpdateOperationsInput | number | null
    itens?: NotaFiscalItemUncheckedUpdateManyWithoutNotaFiscalNestedInput
  }

  export type NotasFiscalCabecalhoUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RFVTipoNegocioUpdateWithoutClienteInput = {
    tipoNegocio?: StringFieldUpdateOperationsInput | string
    dataAnalise?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoAnalise?: StringFieldUpdateOperationsInput | string
    recencia?: IntFieldUpdateOperationsInput | number
    frequencia?: IntFieldUpdateOperationsInput | number
    valorMonetario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFieldUpdateOperationsInput | number
    scoreFrequencia?: IntFieldUpdateOperationsInput | number
    scoreValor?: IntFieldUpdateOperationsInput | number
    scoreRFV?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFieldUpdateOperationsInput | string
    rankingAutomatico?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RFVTipoNegocioUncheckedUpdateWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoNegocio?: StringFieldUpdateOperationsInput | string
    dataAnalise?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoAnalise?: StringFieldUpdateOperationsInput | string
    recencia?: IntFieldUpdateOperationsInput | number
    frequencia?: IntFieldUpdateOperationsInput | number
    valorMonetario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFieldUpdateOperationsInput | number
    scoreFrequencia?: IntFieldUpdateOperationsInput | number
    scoreValor?: IntFieldUpdateOperationsInput | number
    scoreRFV?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFieldUpdateOperationsInput | string
    rankingAutomatico?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RFVTipoNegocioUncheckedUpdateManyWithoutClienteInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoNegocio?: StringFieldUpdateOperationsInput | string
    dataAnalise?: DateTimeFieldUpdateOperationsInput | Date | string
    periodoAnalise?: StringFieldUpdateOperationsInput | string
    recencia?: IntFieldUpdateOperationsInput | number
    frequencia?: IntFieldUpdateOperationsInput | number
    valorMonetario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    scoreRecencia?: IntFieldUpdateOperationsInput | number
    scoreFrequencia?: IntFieldUpdateOperationsInput | number
    scoreValor?: IntFieldUpdateOperationsInput | number
    scoreRFV?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    segmentoRFV?: StringFieldUpdateOperationsInput | string
    rankingAutomatico?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotasFiscalCabecalhoCreateManyFilialInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    clienteId?: number | null
    vendedorId?: number | null
  }

  export type VendedorCreateManyFilialInput = {
    id?: number
    nome: string
    cpf: string
  }

  export type RfvParameterSetCreateManyFilialInput = {
    id?: number
    name: string
    strategy?: $Enums.RfvStrategy
    windowDays?: number
    weights: JsonNullValueInput | InputJsonValue
    ruleRecency: JsonNullValueInput | InputJsonValue
    ruleFrequency: JsonNullValueInput | InputJsonValue
    ruleValue: JsonNullValueInput | InputJsonValue
    effectiveFrom: Date | string
    effectiveTo?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calculationStrategy?: $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type MaquinaEstoqueCreateManyFilialInput = {
    Chassi: string
    produtoId: number
    Status?: string | null
  }

  export type ReceitaPeriodoCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaTipoProdutoCreateManyFilialInput = {
    id?: number
    produtoId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaProdutoModeloCreateManyFilialInput = {
    id?: number
    produtoId: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CrescimentoVendasCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    tipoComparacao: string
    valorAtual: Decimal | DecimalJsLike | number | string
    valorAnterior: Decimal | DecimalJsLike | number | string
    crescimento: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    ticketMedioNF: Decimal | DecimalJsLike | number | string
    ticketMedioItem: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ItensPorNFCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    mediaItens: Decimal | DecimalJsLike | number | string
    p95Itens: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SazonalidadeCreateManyFilialInput = {
    id?: number
    ano: number
    mes: number
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    percentualAno: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaLocalizacaoCreateManyFilialInput = {
    id?: number
    cidade: string
    estado: string
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorCreateManyFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EstatisticasNotasFiscaisCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    quantidadeNotas: number
    quantidadeItens: number
    mediaItensPorNota: Decimal | DecimalJsLike | number | string
    valorTotalNotas: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorDetalhadaCreateManyFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioVendedorCreateManyFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixVendedorCreateManyFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CoberturaCarteiraCreateManyFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RankingVendedoresCreateManyFilialInput = {
    id?: number
    vendedorId: number
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    ticketMedio: Decimal | DecimalJsLike | number | string
    numeroItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixFilialCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ParticipacaoReceitaFilialCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    receitaFilial: Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa: Decimal | DecimalJsLike | number | string
    percentualParticipacao: Decimal | DecimalJsLike | number | string
    posicaoRanking: number
    totalFiliais: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaFilialRegiaoCreateManyFilialInput = {
    id?: number
    data: Date | string
    tipoPeriodo: string
    regiaoCliente: string
    estadoCliente: string
    cidadeCliente: string
    receitaRegiao: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    numeroClientes: number
    percentualReceita: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotasFiscalCabecalhoUpdateWithoutFilialInput = {
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cliente?: ClienteUpdateOneWithoutNotasFiscaisNestedInput
    vendedor?: VendedorUpdateOneWithoutNotasFiscaisNestedInput
    itens?: NotaFiscalItemUpdateManyWithoutNotaFiscalNestedInput
  }

  export type NotasFiscalCabecalhoUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: NullableIntFieldUpdateOperationsInput | number | null
    itens?: NotaFiscalItemUncheckedUpdateManyWithoutNotaFiscalNestedInput
  }

  export type NotasFiscalCabecalhoUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type VendedorUpdateWithoutFilialInput = {
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUpdateManyWithoutVendedorNestedInput
  }

  export type VendedorUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    notasFiscais?: NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorNestedInput
    receitasVendedor?: ReceitaVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    receitasDetalhadas?: ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorNestedInput
    ticketsMedios?: TicketMedioVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    mixVendas?: MixVendedorUncheckedUpdateManyWithoutVendedorNestedInput
    coberturaCarteira?: CoberturaCarteiraUncheckedUpdateManyWithoutVendedorNestedInput
    rankings?: RankingVendedoresUncheckedUpdateManyWithoutVendedorNestedInput
  }

  export type VendedorUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
  }

  export type RfvParameterSetUpdateWithoutFilialInput = {
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    segments?: RfvSegmentUpdateManyWithoutParameterSetNestedInput
  }

  export type RfvParameterSetUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
    segments?: RfvSegmentUncheckedUpdateManyWithoutParameterSetNestedInput
  }

  export type RfvParameterSetUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    strategy?: EnumRfvStrategyFieldUpdateOperationsInput | $Enums.RfvStrategy
    windowDays?: IntFieldUpdateOperationsInput | number
    weights?: JsonNullValueInput | InputJsonValue
    ruleRecency?: JsonNullValueInput | InputJsonValue
    ruleFrequency?: JsonNullValueInput | InputJsonValue
    ruleValue?: JsonNullValueInput | InputJsonValue
    effectiveFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    effectiveTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calculationStrategy?: EnumCalculationStrategyFieldUpdateOperationsInput | $Enums.CalculationStrategy
    classRanges?: NullableJsonNullValueInput | InputJsonValue
    conditionalRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type MaquinaEstoqueUpdateWithoutFilialInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    Status?: NullableStringFieldUpdateOperationsInput | string | null
    produto?: ProdutoUpdateOneRequiredWithoutMaquinasEstoqueNestedInput
    Notas_Fiscais_Itens?: NotaFiscalItemUpdateManyWithoutMaquinas_EstoqueNestedInput
  }

  export type MaquinaEstoqueUncheckedUpdateWithoutFilialInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    produtoId?: IntFieldUpdateOperationsInput | number
    Status?: NullableStringFieldUpdateOperationsInput | string | null
    Notas_Fiscais_Itens?: NotaFiscalItemUncheckedUpdateManyWithoutMaquinas_EstoqueNestedInput
  }

  export type MaquinaEstoqueUncheckedUpdateManyWithoutFilialInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    produtoId?: IntFieldUpdateOperationsInput | number
    Status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReceitaPeriodoUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaPeriodoUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaPeriodoUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaTipoProdutoUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    produto?: ProdutoUpdateOneWithoutReceitasTipoNestedInput
  }

  export type ReceitaTipoProdutoUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    produtoId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaTipoProdutoUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    produtoId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaProdutoModeloUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    produto?: ProdutoUpdateOneRequiredWithoutReceitasModeloNestedInput
  }

  export type ReceitaProdutoModeloUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    produtoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaProdutoModeloUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    produtoId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrescimentoVendasUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoComparacao?: StringFieldUpdateOperationsInput | string
    valorAtual?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrescimentoVendasUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoComparacao?: StringFieldUpdateOperationsInput | string
    valorAtual?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CrescimentoVendasUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoComparacao?: StringFieldUpdateOperationsInput | string
    valorAtual?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorAnterior?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    crescimento?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedioNF?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedioNF?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedioNF?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ticketMedioItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItensPorNFUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    mediaItens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItensPorNFUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    mediaItens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItensPorNFUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    mediaItens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    p95Itens?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SazonalidadeUpdateWithoutFilialInput = {
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    percentualAno?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SazonalidadeUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    percentualAno?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SazonalidadeUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    percentualAno?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaLocalizacaoUpdateWithoutFilialInput = {
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaLocalizacaoUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaLocalizacaoUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: VendedorUpdateOneRequiredWithoutReceitasVendedorNestedInput
  }

  export type ReceitaVendedorUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstatisticasNotasFiscaisUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    mediaItensPorNota?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstatisticasNotasFiscaisUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    mediaItensPorNota?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EstatisticasNotasFiscaisUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    mediaItensPorNota?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalNotas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorDetalhadaUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: VendedorUpdateOneRequiredWithoutReceitasDetalhadasNestedInput
  }

  export type ReceitaVendedorDetalhadaUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioVendedorUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: VendedorUpdateOneRequiredWithoutTicketsMediosNestedInput
  }

  export type TicketMedioVendedorUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioVendedorUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixVendedorUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: VendedorUpdateOneRequiredWithoutMixVendasNestedInput
  }

  export type MixVendedorUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixVendedorUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CoberturaCarteiraUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: VendedorUpdateOneRequiredWithoutCoberturaCarteiraNestedInput
  }

  export type CoberturaCarteiraUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CoberturaCarteiraUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RankingVendedoresUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: VendedorUpdateOneRequiredWithoutRankingsNestedInput
  }

  export type RankingVendedoresUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RankingVendedoresUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixFilialUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixFilialUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixFilialUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParticipacaoReceitaFilialUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaFilial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    totalFiliais?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParticipacaoReceitaFilialUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaFilial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    totalFiliais?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ParticipacaoReceitaFilialUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaFilial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaTotalEmpresa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualParticipacao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    totalFiliais?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialRegiaoUpdateWithoutFilialInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    regiaoCliente?: StringFieldUpdateOperationsInput | string
    estadoCliente?: StringFieldUpdateOperationsInput | string
    cidadeCliente?: StringFieldUpdateOperationsInput | string
    receitaRegiao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    numeroClientes?: IntFieldUpdateOperationsInput | number
    percentualReceita?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialRegiaoUncheckedUpdateWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    regiaoCliente?: StringFieldUpdateOperationsInput | string
    estadoCliente?: StringFieldUpdateOperationsInput | string
    cidadeCliente?: StringFieldUpdateOperationsInput | string
    receitaRegiao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    numeroClientes?: IntFieldUpdateOperationsInput | number
    percentualReceita?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaFilialRegiaoUncheckedUpdateManyWithoutFilialInput = {
    id?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    regiaoCliente?: StringFieldUpdateOperationsInput | string
    estadoCliente?: StringFieldUpdateOperationsInput | string
    cidadeCliente?: StringFieldUpdateOperationsInput | string
    receitaRegiao?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    numeroClientes?: IntFieldUpdateOperationsInput | number
    percentualReceita?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotasFiscalCabecalhoCreateManyVendedorInput = {
    id?: number
    numeroNota: number
    dataEmissao: Date | string
    valorTotal: Decimal | DecimalJsLike | number | string
    filialId?: number | null
    clienteId?: number | null
  }

  export type ReceitaVendedorCreateManyVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaVendedorDetalhadaCreateManyVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    receitaTotal: Decimal | DecimalJsLike | number | string
    numeroNotas: number
    dataInicio?: Date | string | null
    dataFim?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TicketMedioVendedorCreateManyVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    ticketMedio: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    valorTotal: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MixVendedorCreateManyVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    receitaMaquinas: Decimal | DecimalJsLike | number | string
    receitaPecas: Decimal | DecimalJsLike | number | string
    receitaServicos: Decimal | DecimalJsLike | number | string
    percentualMaquinas: Decimal | DecimalJsLike | number | string
    percentualPecas: Decimal | DecimalJsLike | number | string
    percentualServicos: Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas: number
    quantidadeNotasPecas: number
    quantidadeNotasServicos: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CoberturaCarteiraCreateManyVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    clientesUnicosAtendidos: number
    clientesAtivos: number
    percentualCobertura: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RankingVendedoresCreateManyVendedorInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoRanking: string
    posicaoRanking: number
    valorMetrica: Decimal | DecimalJsLike | number | string
    totalVendedores: number
    percentilRanking: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotasFiscalCabecalhoUpdateWithoutVendedorInput = {
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filial?: FilialUpdateOneWithoutNotasFiscaisNestedInput
    cliente?: ClienteUpdateOneWithoutNotasFiscaisNestedInput
    itens?: NotaFiscalItemUpdateManyWithoutNotaFiscalNestedInput
  }

  export type NotasFiscalCabecalhoUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
    itens?: NotaFiscalItemUncheckedUpdateManyWithoutNotaFiscalNestedInput
  }

  export type NotasFiscalCabecalhoUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    numeroNota?: IntFieldUpdateOperationsInput | number
    dataEmissao?: DateTimeFieldUpdateOperationsInput | Date | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    clienteId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReceitaVendedorUpdateWithoutVendedorInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasVendedorNestedInput
  }

  export type ReceitaVendedorUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorDetalhadaUpdateWithoutVendedorInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasVendedorDetalhadasNestedInput
  }

  export type ReceitaVendedorDetalhadaUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaVendedorDetalhadaUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    numeroNotas?: IntFieldUpdateOperationsInput | number
    dataInicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dataFim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioVendedorUpdateWithoutVendedorInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutTicketsMediosVendedorNestedInput
  }

  export type TicketMedioVendedorUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TicketMedioVendedorUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    ticketMedio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixVendedorUpdateWithoutVendedorInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutMixVendedoresNestedInput
  }

  export type MixVendedorUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MixVendedorUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    receitaMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receitaServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualMaquinas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualPecas?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentualServicos?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotasMaquinas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasPecas?: IntFieldUpdateOperationsInput | number
    quantidadeNotasServicos?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CoberturaCarteiraUpdateWithoutVendedorInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutCoberturaCarteirasNestedInput
  }

  export type CoberturaCarteiraUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CoberturaCarteiraUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    clientesUnicosAtendidos?: IntFieldUpdateOperationsInput | number
    clientesAtivos?: IntFieldUpdateOperationsInput | number
    percentualCobertura?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RankingVendedoresUpdateWithoutVendedorInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutRankingVendedoresNestedInput
  }

  export type RankingVendedoresUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RankingVendedoresUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoRanking?: StringFieldUpdateOperationsInput | string
    posicaoRanking?: IntFieldUpdateOperationsInput | number
    valorMetrica?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalVendedores?: IntFieldUpdateOperationsInput | number
    percentilRanking?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaquinaEstoqueCreateManyProdutoInput = {
    Chassi: string
    filialId?: number | null
    Status?: string | null
  }

  export type NotaFiscalItemCreateManyProdutoInput = {
    id?: number
    notaFiscalId: number
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Chassi?: string | null
  }

  export type ReceitaTipoProdutoCreateManyProdutoInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    tipoProduto: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceitaProdutoModeloCreateManyProdutoInput = {
    id?: number
    filialId?: number | null
    data: Date | string
    tipoPeriodo: string
    valorTotal: Decimal | DecimalJsLike | number | string
    quantidadeNotas: number
    quantidadeItens: number
    ranking?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssociacaoProdutoCreateManyProdutoAInput = {
    id?: bigint | number
    produto_b_id: number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
  }

  export type AssociacaoProdutoCreateManyProdutoBInput = {
    id?: bigint | number
    produto_a_id: number
    suporte: number
    confianca: number
    lift: number
    a_nome: string
    b_nome: string
    a_tipo: string
    b_tipo: string
    vendas_produto_a: number
    vendas_produto_b: number
    atualizado_em?: Date | string
  }

  export type MaquinaEstoqueUpdateWithoutProdutoInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    Status?: NullableStringFieldUpdateOperationsInput | string | null
    filial?: FilialUpdateOneWithoutMaquinasEstoqueNestedInput
    Notas_Fiscais_Itens?: NotaFiscalItemUpdateManyWithoutMaquinas_EstoqueNestedInput
  }

  export type MaquinaEstoqueUncheckedUpdateWithoutProdutoInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    Status?: NullableStringFieldUpdateOperationsInput | string | null
    Notas_Fiscais_Itens?: NotaFiscalItemUncheckedUpdateManyWithoutMaquinas_EstoqueNestedInput
  }

  export type MaquinaEstoqueUncheckedUpdateManyWithoutProdutoInput = {
    Chassi?: StringFieldUpdateOperationsInput | string
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    Status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotaFiscalItemUpdateWithoutProdutoInput = {
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Maquinas_Estoque?: MaquinaEstoqueUpdateOneWithoutNotas_Fiscais_ItensNestedInput
    notaFiscal?: NotasFiscalCabecalhoUpdateOneRequiredWithoutItensNestedInput
  }

  export type NotaFiscalItemUncheckedUpdateWithoutProdutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    notaFiscalId?: IntFieldUpdateOperationsInput | number
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Chassi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotaFiscalItemUncheckedUpdateManyWithoutProdutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    notaFiscalId?: IntFieldUpdateOperationsInput | number
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Chassi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReceitaTipoProdutoUpdateWithoutProdutoInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasTipoProdutoNestedInput
  }

  export type ReceitaTipoProdutoUncheckedUpdateWithoutProdutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaTipoProdutoUncheckedUpdateManyWithoutProdutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    tipoProduto?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaProdutoModeloUpdateWithoutProdutoInput = {
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    filial?: FilialUpdateOneWithoutReceitasProdutoModeloNestedInput
  }

  export type ReceitaProdutoModeloUncheckedUpdateWithoutProdutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceitaProdutoModeloUncheckedUpdateManyWithoutProdutoInput = {
    id?: IntFieldUpdateOperationsInput | number
    filialId?: NullableIntFieldUpdateOperationsInput | number | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    tipoPeriodo?: StringFieldUpdateOperationsInput | string
    valorTotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidadeNotas?: IntFieldUpdateOperationsInput | number
    quantidadeItens?: IntFieldUpdateOperationsInput | number
    ranking?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssociacaoProdutoUpdateWithoutProdutoAInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    produtoB?: ProdutoUpdateOneRequiredWithoutAssociacoesBNestedInput
  }

  export type AssociacaoProdutoUncheckedUpdateWithoutProdutoAInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    produto_b_id?: IntFieldUpdateOperationsInput | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssociacaoProdutoUncheckedUpdateManyWithoutProdutoAInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    produto_b_id?: IntFieldUpdateOperationsInput | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssociacaoProdutoUpdateWithoutProdutoBInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    produtoA?: ProdutoUpdateOneRequiredWithoutAssociacoesANestedInput
  }

  export type AssociacaoProdutoUncheckedUpdateWithoutProdutoBInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    produto_a_id?: IntFieldUpdateOperationsInput | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssociacaoProdutoUncheckedUpdateManyWithoutProdutoBInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    produto_a_id?: IntFieldUpdateOperationsInput | number
    suporte?: IntFieldUpdateOperationsInput | number
    confianca?: FloatFieldUpdateOperationsInput | number
    lift?: FloatFieldUpdateOperationsInput | number
    a_nome?: StringFieldUpdateOperationsInput | string
    b_nome?: StringFieldUpdateOperationsInput | string
    a_tipo?: StringFieldUpdateOperationsInput | string
    b_tipo?: StringFieldUpdateOperationsInput | string
    vendas_produto_a?: IntFieldUpdateOperationsInput | number
    vendas_produto_b?: IntFieldUpdateOperationsInput | number
    atualizado_em?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotaFiscalItemCreateManyMaquinas_EstoqueInput = {
    id?: number
    notaFiscalId: number
    produtoId: number
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
  }

  export type NotaFiscalItemUpdateWithoutMaquinas_EstoqueInput = {
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    notaFiscal?: NotasFiscalCabecalhoUpdateOneRequiredWithoutItensNestedInput
    produto?: ProdutoUpdateOneRequiredWithoutNotasFiscaisItensNestedInput
  }

  export type NotaFiscalItemUncheckedUpdateWithoutMaquinas_EstoqueInput = {
    id?: IntFieldUpdateOperationsInput | number
    notaFiscalId?: IntFieldUpdateOperationsInput | number
    produtoId?: IntFieldUpdateOperationsInput | number
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type NotaFiscalItemUncheckedUpdateManyWithoutMaquinas_EstoqueInput = {
    id?: IntFieldUpdateOperationsInput | number
    notaFiscalId?: IntFieldUpdateOperationsInput | number
    produtoId?: IntFieldUpdateOperationsInput | number
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type NotaFiscalItemCreateManyNotaFiscalInput = {
    id?: number
    produtoId: number
    Quantidade: Decimal | DecimalJsLike | number | string
    valorUnitario: Decimal | DecimalJsLike | number | string
    valorTotalItem: Decimal | DecimalJsLike | number | string
    Chassi?: string | null
  }

  export type NotaFiscalItemUpdateWithoutNotaFiscalInput = {
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Maquinas_Estoque?: MaquinaEstoqueUpdateOneWithoutNotas_Fiscais_ItensNestedInput
    produto?: ProdutoUpdateOneRequiredWithoutNotasFiscaisItensNestedInput
  }

  export type NotaFiscalItemUncheckedUpdateWithoutNotaFiscalInput = {
    id?: IntFieldUpdateOperationsInput | number
    produtoId?: IntFieldUpdateOperationsInput | number
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Chassi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotaFiscalItemUncheckedUpdateManyWithoutNotaFiscalInput = {
    id?: IntFieldUpdateOperationsInput | number
    produtoId?: IntFieldUpdateOperationsInput | number
    Quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorUnitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    valorTotalItem?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    Chassi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RfvSegmentCreateManyParameterSetInput = {
    id?: number
    name: string
    rules: JsonNullValueInput | InputJsonValue
    priority?: number
  }

  export type RfvSegmentUpdateWithoutParameterSetInput = {
    name?: StringFieldUpdateOperationsInput | string
    rules?: JsonNullValueInput | InputJsonValue
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type RfvSegmentUncheckedUpdateWithoutParameterSetInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rules?: JsonNullValueInput | InputJsonValue
    priority?: IntFieldUpdateOperationsInput | number
  }

  export type RfvSegmentUncheckedUpdateManyWithoutParameterSetInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rules?: JsonNullValueInput | InputJsonValue
    priority?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}